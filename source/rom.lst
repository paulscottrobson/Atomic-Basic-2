
; 64tass Turbo Assembler Macro V1.54.1900 listing file
; 64tass -q -c -D TARGET=2 -b -L rom.lst -o rom.bin basic.asm
; Sat Jul 27 13:17:19 2019

;Offset	;Hex		;Monitor	;Source

;******  Command line definitions

=2					TARGET=2

;******  Processing input file: basic.asm


;******  Processing file: porting.asm

.fff8					EXTDummyInterrupt:
.fff8	40		rti				rti
>fffa	f8 ff						.word 	EXTDummyInterrupt
>fffc	5b e7						.word 	Start
>fffe	f8 ff						.word 	EXTDummyInterrupt
=4					EXTZPWork = 4								; Zero Page work for Personality (4 bytes)
=8					IOCursorX = 8 								; Cursor position
=9					IOCursorY = 9
=$20							zeroPage 	= $20 					; first ZP byte to use
=$2000							startMemory = $2000 				; first non ZP byte to use
=$8000							endMemory   = $8000 				; last non ZP byte to use
=$200							basicStack  = $200 					; stack for BASIC
=$400							evalStack   = $400 					; stack for evaluation of expressions

;******  Processing file: personalities/personality_6502.asm

>0000	00					.byte 	0
=40					EXTWidth = 40 								; screen width
=25					EXTHeight = 25 								; screen height
=$0800					EXTLowMemory = $0800 						; Workspace RAM starts here
=$6000					EXTHighMemory = $6000 						; Workspace RAM ends here
=$b000					PScreen = $B000								; 1k screen RAM here
=$b800					PKeyboard = $B800							; Keyboard port.
.a000					EXTStartPersonalise:
.a000	a2 ff		ldx #$ff		ldx 	#$FF 							; reset 6502 stack.
.a002	9a		txs			txs
.a003	20 7e a0	jsr $a07e		jsr 	EXTReset 						; reset video
.a006	20 34 a0	jsr $a034		jsr 	EXTClearScreen 					; clear screen
.a009	4c 5b e7	jmp $e75b		jmp 	Start 							; start main application
.a00c					EXTReadKey:
.a00c	ad 00 b8	lda $b800		lda 	PKeyboard							; read key
.a00f	d0 01		bne $a012		bne 	EXTClearBuffer
.a011	60		rts			rts
.a012					EXTClearBuffer:
.a012	48		pha			pha 										; key pressed clear queue byte.
.a013	a9 00		lda #$00		lda 	#0
.a015	8d 00 b8	sta $b800		sta 	PKeyboard
.a018	68		pla			pla
.a019	60		rts			rts
.a01a					EXTReadScreen:
.a01a	5a		phy			phy 										; save Y
.a01b	86 04		stx $04			stx 	EXTZPWork							; into EXTZPWork
.a01d	98		tya			tya
.a01e	09 b0		ora #$b0		ora 	#PScreen>>8 						; move into screen area
.a020	85 05		sta $05			sta 	EXTZPWork+1 						; read character there
.a022	a0 00		ldy #$00		ldy 	#0
.a024	b1 04		lda ($04),y		lda 	(EXTZPWork),y
.a026	7a		ply			ply 										; restore Y and exit.
.a027	60		rts			rts
.a028					EXTWriteScreen:
.a028	5a		phy			phy
.a029	48		pha			pha
.a02a	20 1a a0	jsr $a01a		jsr		EXTReadScreen 						; set up the address into EXTZPWork
.a02d	a0 00		ldy #$00		ldy 	#0
.a02f	68		pla			pla 										; restore and write.
.a030	91 04		sta ($04),y		sta 	(EXTZPWork),y
.a032	7a		ply			ply
.a033	60		rts			rts
.a034					EXTClearScreen:
.a034	48		pha			pha 										; save registers
.a035	da		phx			phx
.a036	a2 00		ldx #$00		ldx 	#0
.a038					_EXTCSLoop:
.a038	a9 20		lda #$20		lda 	#32
.a03a	9d 00 b0	sta $b000,x		sta 	PScreen+0,x
.a03d	9d 00 b1	sta $b100,x		sta 	PScreen+$100,x
.a040	9d 00 b2	sta $b200,x		sta 	PScreen+$200,x
.a043	9d 00 b3	sta $b300,x		sta 	PScreen+$300,x
.a046	e8		inx			inx
.a047	d0 ef		bne $a038		bne 	_EXTCSLoop
.a049	fa		plx			plx 										; restore
.a04a	68		pla			pla
.a04b	60		rts			rts
.a04c					EXTScrollDisplay:
.a04c	48		pha			pha 										; save registers
.a04d	5a		phy			phy
.a04e	a9 00		lda #$00		lda 	#PScreen & $FF 					; set pointer to screen
.a050	85 04		sta $04			sta 	EXTZPWork+0
.a052	a9 b0		lda #$b0		lda 	#PScreen >> 8
.a054	85 05		sta $05			sta 	EXTZPWork+1
.a056					_EXTScroll:
.a056	a0 28		ldy #$28		ldy 	#EXTWidth
.a058	b1 04		lda ($04),y		lda 	(EXTZPWork),y
.a05a	a0 00		ldy #$00		ldy 	#0
.a05c	91 04		sta ($04),y		sta 	(EXTZPWork),y
.a05e	e6 04		inc $04			inc 	EXTZPWork 							; bump address
.a060	d0 02		bne $a064		bne 	_EXTNoCarry
.a062	e6 05		inc $05			inc 	EXTZPWork+1
.a064					_EXTNoCarry:
.a064	a5 04		lda $04			lda 	EXTZPWork 							; done ?
.a066	c9 c0		cmp #$c0		cmp	 	#(PScreen+EXTWidth*(EXTHeight-1)) & $FF
.a068	d0 ec		bne $a056		bne 	_EXTScroll
.a06a	a5 05		lda $05			lda 	EXTZPWork+1
.a06c	c9 b3		cmp #$b3		cmp	 	#(PScreen+EXTWidth*(EXTHeight-1)) >> 8
.a06e	d0 e6		bne $a056		bne 	_EXTScroll
.a070	a0 00		ldy #$00		ldy 	#0									; clear bottom line.
.a072					_EXTLastLine:
.a072	a9 20		lda #$20		lda 	#32
.a074	91 04		sta ($04),y		sta 	(EXTZPWork),y
.a076	c8		iny			iny
.a077	c0 28		cpy #$28		cpy 	#EXTWidth
.a079	d0 f7		bne $a072		bne 	_EXTLastLine
.a07b	7a		ply			ply 										; restore and exit.
.a07c	68		pla			pla
.a07d	60		rts			rts
.a07e					EXTReset:
.a07e	60		rts			rts

;******  Return to file: porting.asm


;******  Processing file: personalities/personality_io.asm

.a07f					IOInitialise:
.a07f	20 7e a0	jsr $a07e			jsr 	EXTReset 					; reset display.
.a082	20 34 a0	jsr $a034			jsr 	EXTClearScreen 				; clear screen.
.a085	48		pha				pha
.a086	a9 00		lda #$00			lda 	#00 						; home cursor
.a088	85 08		sta $08				sta 	IOCursorX
.a08a	85 09		sta $09				sta 	IOCursorY
.a08c	68		pla				pla
.a08d	60		rts				rts
.a08e					IOPrintChar:
.a08e	48		pha				pha 								; save registers
.a08f	da		phx				phx
.a090	5a		phy				phy
.a091	29 7f		and #$7f			and 	#$7F 						; bits 0-6 only
.a093	20 e1 a0	jsr $a0e1			jsr 	IOUpperCase 				; convert to upper case.
.a096	c9 0d		cmp #$0d			cmp 	#13 						; new line ?
.a098	f0 16		beq $a0b0			beq 	_IOPCNewLine
.a09a	c9 20		cmp #$20			cmp 	#32 						; not printable.
.a09c	90 23		bcc $a0c1			bcc 	_IOPCExit
.a09e	48		pha				pha 								; print at cursor
.a09f	20 ed a0	jsr $a0ed			jsr 	IOGetCursorXY
.a0a2	68		pla				pla
.a0a3	29 3f		and #$3f			and 	#$3F 						; 6 Bit ASCII
.a0a5	20 28 a0	jsr $a028			jsr 	EXTWriteScreen
.a0a8	e6 08		inc $08				inc 	IOCursorX 					; move left.
.a0aa	a5 08		lda $08				lda 	IOCursorX
.a0ac	c9 28		cmp #$28			cmp		#EXTWidth 					; will be zero if at RHS
.a0ae	d0 11		bne $a0c1			bne 	_IOPCExit 					; exit otherwise
.a0b0					_IOPCNewLine:
.a0b0	a9 00		lda #$00			lda 	#0 							; go down and to lhs
.a0b2	85 08		sta $08				sta 	IOCursorX
.a0b4	e6 09		inc $09				inc 	IOCursorY
.a0b6	a5 09		lda $09				lda 	IOCursorY 					; off bottom
.a0b8	c9 19		cmp #$19			cmp 	#EXTHeight
.a0ba	90 05		bcc $a0c1			bcc 	_IOPCExit
.a0bc	20 4c a0	jsr $a04c			jsr 	EXTScrollDisplay 			; scroll
.a0bf	c6 09		dec $09				dec 	IOCursorY 					; fix up.
.a0c1					_IOPCExit:
.a0c1	7a		ply				ply
.a0c2	fa		plx				plx
.a0c3	68		pla				pla
.a0c4	60		rts				rts
.a0c5					IOReadKey:
.a0c5	da		phx				phx 								; save XY
.a0c6	5a		phy				phy
.a0c7	20 ed a0	jsr $a0ed			jsr 	IOGetCursorXY 				; show prompt
.a0ca	a9 1d		lda #$1d			lda 	#$1D
.a0cc	20 28 a0	jsr $a028			jsr  	EXTWriteScreen
.a0cf					_IORKWait:
.a0cf	20 0c a0	jsr $a00c			jsr 	EXTReadKey
.a0d2	f0 fb		beq $a0cf			beq 	_IORKWait
.a0d4	48		pha				pha 								; clear prompt
.a0d5	20 ed a0	jsr $a0ed			jsr 	IOGetCursorXY
.a0d8	a9 20		lda #$20			lda 	#" "
.a0da	20 28 a0	jsr $a028			jsr  	EXTWriteScreen
.a0dd	68		pla				pla
.a0de	7a		ply				ply 								; restore and exit.
.a0df	fa		plx				plx
.a0e0	60		rts				rts
.a0e1					IOUpperCase:
.a0e1	c9 61		cmp #$61			cmp 	#"a"
.a0e3	90 07		bcc $a0ec			bcc 	_IOUCExit
.a0e5	c9 7b		cmp #$7b			cmp 	#"z"+1
.a0e7	b0 03		bcs $a0ec			bcs 	_IOUCExit
.a0e9	38		sec				sec
.a0ea	e9 20		sbc #$20			sbc 	#32
.a0ec					_IOUCExit:
.a0ec	60		rts				rts
.a0ed					IOGetCursorXY:
.a0ed	48		pha				pha
.a0ee	a5 09		lda $09				lda 	IOCursorY 					; multiply IOCursorY x 5
.a0f0	0a		asl a				asl		a
.a0f1	0a		asl a				asl		a 							; x 4, carry clear
.a0f2	65 09		adc $09				adc 	IOCursorY 					; so this will be 0..199 now
.a0f4	aa		tax				tax
.a0f5	8a		txa				txa 								; x 10
.a0f6	0a		asl a				asl 	a
.a0f7	aa		tax				tax
.a0f8	a9 00		lda #$00			lda 	#0
.a0fa	2a		rol a				rol 	a
.a0fb	a8		tay				tay
.a0fc	8a		txa				txa 								; x 20
.a0fd	0a		asl a				asl 	a
.a0fe	aa		tax				tax
.a0ff	98		tya				tya
.a100	2a		rol a				rol 	a
.a101	a8		tay				tay
.a102	8a		txa				txa 								; x 40
.a103	0a		asl a				asl 	a
.a104	aa		tax				tax
.a105	98		tya				tya
.a106	2a		rol a				rol 	a
.a107	a8		tay				tay
.a108	8a		txa				txa 								; add X to that.
.a109	18		clc				clc
.a10a	65 08		adc $08				adc 	IOCursorX
.a10c	aa		tax				tax
.a10d	90 01		bcc $a110			bcc 	_IOGCXYExit
.a10f	c8		iny				iny
.a110					_IOGCXYExit:
.a110	68		pla				pla
.a111	60		rts				rts

;******  Return to file: porting.asm


;******  Return to file: basic.asm


;******  Processing file: include/tokens.inc

.e000					KeywordVectorTable:
>e000	6d e7					.word	SyntaxError                   ; "!"        ($0080)
>e002	6d e7					.word	SyntaxError                   ; """        ($0081)
>e004	6d e7					.word	SyntaxError                   ; "#"        ($0082)
>e006	6d e7					.word	SyntaxError                   ; "$"        ($0083)
>e008	d1 e4					.word	BFUNC_Modulus                 ; "%"        ($0084)
>e00a	44 e3					.word	BFUNC_And                     ; "&"        ($0085)
>e00c	6d e7					.word	SyntaxError                   ; "'"        ($0086)
>e00e	6d e7					.word	SyntaxError                   ; "("        ($0087)
>e010	6d e7					.word	SyntaxError                   ; ")"        ($0088)
>e012	b3 e3					.word	BFUNC_Multiply                ; "*"        ($0089)
>e014	f8 e2					.word	BFUNC_Add                     ; "+"        ($008a)
>e016	1e e3					.word	BFUNC_Subtract                ; "-"        ($008b)
>e018	0a e4					.word	BFUNC_Divide                  ; "/"        ($008c)
>e01a	6d e7					.word	SyntaxError                   ; ":"        ($008d)
>e01c	6d e7					.word	SyntaxError                   ; ";"        ($008e)
>e01e	4f e5					.word	BFUNC_LessEqual               ; "<="       ($008f)
>e020	f0 e4					.word	BFUNC_NotEquals               ; "<>"       ($0090)
>e022	2a e5					.word	BFUNC_Less                    ; "<"        ($0091)
>e024	ed e4					.word	BFUNC_Equals                  ; "="        ($0092)
>e026	2d e5					.word	BFUNC_GreaterEqual            ; ">="       ($0093)
>e028	4c e5					.word	BFUNC_Greater                 ; ">"        ($0094)
>e02a	6d e7					.word	SyntaxError                   ; "?"        ($0095)
>e02c	8e e3					.word	BFUNC_Xor                     ; "^"        ($0096)
>e02e	b0 e6					.word	COMMAND_Assert                ; "assert"   ($0097)
>e030	03 e6					.word	UNARY_Abs                     ; "abs"      ($0098)
>e032	f1 e6					.word	COMMAND_Clear                 ; "clear"    ($0099)
>e034	ee e5					.word	UNARY_Ch                      ; "ch"       ($009a)
>e036	6d e7					.word	SyntaxError                   ; "do"       ($009b)
>e038	ac e6					.word	COMMAND_End                   ; "end"      ($009c)
>e03a	6d e7					.word	SyntaxError                   ; "for"      ($009d)
>e03c	6d e7					.word	SyntaxError                   ; "gosub"    ($009e)
>e03e	6d e7					.word	SyntaxError                   ; "goto"     ($009f)
>e040	6d e7					.word	SyntaxError                   ; "input"    ($00a0)
>e042	6d e7					.word	SyntaxError                   ; "if"       ($00a1)
>e044	6d e7					.word	SyntaxError                   ; "list"     ($00a2)
>e046	6d e7					.word	SyntaxError                   ; "loop"     ($00a3)
>e048	6d e7					.word	SyntaxError                   ; "link"     ($00a4)
>e04a	6d e7					.word	SyntaxError                   ; "let"      ($00a5)
>e04c	ac e5					.word	UNARY_Len                     ; "len"      ($00a6)
>e04e	6d e7					.word	SyntaxError                   ; "next"     ($00a7)
>e050	de e6					.word	COMMAND_New                   ; "new"      ($00a8)
>e052	25 e7					.word	COMMAND_Old                   ; "old"      ($00a9)
>e054	6d e7					.word	SyntaxError                   ; "print"    ($00aa)
>e056	d4 e6					.word	COMMAND_Rem                   ; "rem"      ($00ab)
>e058	20 e6					.word	UNARY_Rnd                     ; "rnd"      ($00ac)
>e05a	a4 e6					.word	COMMAND_Stop                  ; "stop"     ($00ad)
>e05c	6d e7					.word	SyntaxError                   ; "step"     ($00ae)
>e05e	6d e7					.word	SyntaxError                   ; "then"     ($00af)
>e060	0b e6					.word	UNARY_Top                     ; "top"      ($00b0)
>e062	6d e7					.word	SyntaxError                   ; "to"       ($00b1)
>e064	69 e3					.word	BFUNC_Or                      ; "|"        ($00b2)
>e066	6e e5					.word	BFUNC_StringCompare           ; "~"        ($00b3)
.e068					TokenText:
>e068	a1					.byte $a1                             ; $0080 !
>e069	a2					.byte $a2                             ; $0081 "
>e06a	a3					.byte $a3                             ; $0082 #
>e06b	a4					.byte $a4                             ; $0083 $
>e06c	a5					.byte $a5                             ; $0084 %
>e06d	a6					.byte $a6                             ; $0085 &
>e06e	a7					.byte $a7                             ; $0086 '
>e06f	a8					.byte $a8                             ; $0087 (
>e070	a9					.byte $a9                             ; $0088 )
>e071	aa					.byte $aa                             ; $0089 *
>e072	ab					.byte $ab                             ; $008a +
>e073	ad					.byte $ad                             ; $008b -
>e074	af					.byte $af                             ; $008c /
>e075	ba					.byte $ba                             ; $008d :
>e076	bb					.byte $bb                             ; $008e ;
>e077	3c bd					.byte $3c,$bd                         ; $008f <=
>e079	3c be					.byte $3c,$be                         ; $0090 <>
>e07b	bc					.byte $bc                             ; $0091 <
>e07c	bd					.byte $bd                             ; $0092 =
>e07d	3e bd					.byte $3e,$bd                         ; $0093 >=
>e07f	be					.byte $be                             ; $0094 >
>e080	bf					.byte $bf                             ; $0095 ?
>e081	de					.byte $de                             ; $0096 ^
>e082	61 73 73 65 72 f4			.byte $61,$73,$73,$65,$72,$f4         ; $0097 assert
>e088	61 62 f3				.byte $61,$62,$f3                     ; $0098 abs
>e08b	63 6c 65 61 f2				.byte $63,$6c,$65,$61,$f2             ; $0099 clear
>e090	63 e8					.byte $63,$e8                         ; $009a ch
>e092	64 ef					.byte $64,$ef                         ; $009b do
>e094	65 6e e4				.byte $65,$6e,$e4                     ; $009c end
>e097	66 6f f2				.byte $66,$6f,$f2                     ; $009d for
>e09a	67 6f 73 75 e2				.byte $67,$6f,$73,$75,$e2             ; $009e gosub
>e09f	67 6f 74 ef				.byte $67,$6f,$74,$ef                 ; $009f goto
>e0a3	69 6e 70 75 f4				.byte $69,$6e,$70,$75,$f4             ; $00a0 input
>e0a8	69 e6					.byte $69,$e6                         ; $00a1 if
>e0aa	6c 69 73 f4				.byte $6c,$69,$73,$f4                 ; $00a2 list
>e0ae	6c 6f 6f f0				.byte $6c,$6f,$6f,$f0                 ; $00a3 loop
>e0b2	6c 69 6e eb				.byte $6c,$69,$6e,$eb                 ; $00a4 link
>e0b6	6c 65 f4				.byte $6c,$65,$f4                     ; $00a5 let
>e0b9	6c 65 ee				.byte $6c,$65,$ee                     ; $00a6 len
>e0bc	6e 65 78 f4				.byte $6e,$65,$78,$f4                 ; $00a7 next
>e0c0	6e 65 f7				.byte $6e,$65,$f7                     ; $00a8 new
>e0c3	6f 6c e4				.byte $6f,$6c,$e4                     ; $00a9 old
>e0c6	70 72 69 6e f4				.byte $70,$72,$69,$6e,$f4             ; $00aa print
>e0cb	72 65 ed				.byte $72,$65,$ed                     ; $00ab rem
>e0ce	72 6e e4				.byte $72,$6e,$e4                     ; $00ac rnd
>e0d1	73 74 6f f0				.byte $73,$74,$6f,$f0                 ; $00ad stop
>e0d5	73 74 65 f0				.byte $73,$74,$65,$f0                 ; $00ae step
>e0d9	74 68 65 ee				.byte $74,$68,$65,$ee                 ; $00af then
>e0dd	74 6f f0				.byte $74,$6f,$f0                     ; $00b0 top
>e0e0	74 ef					.byte $74,$ef                         ; $00b1 to
>e0e2	fc					.byte $fc                             ; $00b2 |
>e0e3	fe					.byte $fe                             ; $00b3 ~
>e0e4	00					.byte $00
.e0e5					TokenTypeInformation:
>e0e5	04					.byte $04                             ; $0080 !
>e0e6	0a					.byte $0a                             ; $0081 "
>e0e7	0a					.byte $0a                             ; $0082 #
>e0e8	04					.byte $04                             ; $0083 $
>e0e9	03					.byte $03                             ; $0084 %
>e0ea	00					.byte $00                             ; $0085 &
>e0eb	0a					.byte $0a                             ; $0086 '
>e0ec	0a					.byte $0a                             ; $0087 (
>e0ed	0a					.byte $0a                             ; $0088 )
>e0ee	03					.byte $03                             ; $0089 *
>e0ef	02					.byte $02                             ; $008a +
>e0f0	02					.byte $02                             ; $008b -
>e0f1	03					.byte $03                             ; $008c /
>e0f2	0a					.byte $0a                             ; $008d :
>e0f3	0a					.byte $0a                             ; $008e ;
>e0f4	01					.byte $01                             ; $008f <=
>e0f5	01					.byte $01                             ; $0090 <>
>e0f6	01					.byte $01                             ; $0091 <
>e0f7	01					.byte $01                             ; $0092 =
>e0f8	01					.byte $01                             ; $0093 >=
>e0f9	01					.byte $01                             ; $0094 >
>e0fa	04					.byte $04                             ; $0095 ?
>e0fb	00					.byte $00                             ; $0096 ^
>e0fc	04					.byte $04                             ; $0097 assert
>e0fd	09					.byte $09                             ; $0098 abs
>e0fe	04					.byte $04                             ; $0099 clear
>e0ff	09					.byte $09                             ; $009a ch
>e100	04					.byte $04                             ; $009b do
>e101	04					.byte $04                             ; $009c end
>e102	04					.byte $04                             ; $009d for
>e103	04					.byte $04                             ; $009e gosub
>e104	04					.byte $04                             ; $009f goto
>e105	04					.byte $04                             ; $00a0 input
>e106	04					.byte $04                             ; $00a1 if
>e107	04					.byte $04                             ; $00a2 list
>e108	04					.byte $04                             ; $00a3 loop
>e109	04					.byte $04                             ; $00a4 link
>e10a	04					.byte $04                             ; $00a5 let
>e10b	09					.byte $09                             ; $00a6 len
>e10c	04					.byte $04                             ; $00a7 next
>e10d	04					.byte $04                             ; $00a8 new
>e10e	04					.byte $04                             ; $00a9 old
>e10f	04					.byte $04                             ; $00aa print
>e110	04					.byte $04                             ; $00ab rem
>e111	09					.byte $09                             ; $00ac rnd
>e112	04					.byte $04                             ; $00ad stop
>e113	04					.byte $04                             ; $00ae step
>e114	04					.byte $04                             ; $00af then
>e115	09					.byte $09                             ; $00b0 top
>e116	04					.byte $04                             ; $00b1 to
>e117	00					.byte $00                             ; $00b2 |
>e118	01					.byte $01                             ; $00b3 ~
=$00					KTYPE_PRECBASE = $00
=$08					KTYPE_COMMAND = $08
=$09					KTYPE_UNARYFN = $09
=$0a					KTYPE_SYNTAX = $0a
=$0080					KW_PLING = $0080
=$0081					KW_DQUOTE = $0081
=$0082					KW_HASH = $0082
=$0083					KW_DOLLAR = $0083
=$0084					KW_PERCENT = $0084
=$0085					KW_AMPERSAND = $0085
=$0086					KW_SQUOTE = $0086
=$0087					KW_LPAREN = $0087
=$0088					KW_RPAREN = $0088
=$0089					KW_STAR = $0089
=$008a					KW_PLUS = $008a
=$008b					KW_MINUS = $008b
=$008c					KW_FSLASH = $008c
=$008d					KW_COLON = $008d
=$008e					KW_SEMICOLON = $008e
=$008f					KW_LESSEQUAL = $008f
=$0090					KW_LESSGREATER = $0090
=$0091					KW_LESS = $0091
=$0092					KW_EQUAL = $0092
=$0093					KW_GREATEREQUAL = $0093
=$0094					KW_GREATER = $0094
=$0095					KW_QUESTION = $0095
=$0096					KW_HAT = $0096
=$0097					KW_ASSERT = $0097
=$0098					KW_ABS = $0098
=$0099					KW_CLEAR = $0099
=$009a					KW_CH = $009a
=$009b					KW_DO = $009b
=$009c					KW_END = $009c
=$009d					KW_FOR = $009d
=$009e					KW_GOSUB = $009e
=$009f					KW_GOTO = $009f
=$00a0					KW_INPUT = $00a0
=$00a1					KW_IF = $00a1
=$00a2					KW_LIST = $00a2
=$00a3					KW_LOOP = $00a3
=$00a4					KW_LINK = $00a4
=$00a5					KW_LET = $00a5
=$00a6					KW_LEN = $00a6
=$00a7					KW_NEXT = $00a7
=$00a8					KW_NEW = $00a8
=$00a9					KW_OLD = $00a9
=$00aa					KW_PRINT = $00aa
=$00ab					KW_REM = $00ab
=$00ac					KW_RND = $00ac
=$00ad					KW_STOP = $00ad
=$00ae					KW_STEP = $00ae
=$00af					KW_THEN = $00af
=$00b0					KW_TOP = $00b0
=$00b1					KW_TO = $00b1
=$00b2					KW_BAR = $00b2
=$00b3					KW_TILDE = $00b3

;******  Return to file: basic.asm


;******  Processing file: general/support.asm

.e119					CheckNextCharacter:
.e119	8d 6e 20	sta $206e			sta 	Temp1 						; save character to check
.e11c					_CNCLoop:
.e11c	b1 20		lda ($20),y			lda 	(zCurrentLine),y			; get next
.e11e	f0 0b		beq $e12b			beq 	_CNCFail 					; end of line, so no character
.e120	c8		iny				iny
.e121	c9 20		cmp #$20			cmp 	#' ' 						; skip spaces
.e123	f0 f7		beq $e11c			beq 	_CNCLoop
.e125	cd 6e 20	cmp $206e			cmp 	Temp1 						; fail if not what was wanted
.e128	d0 01		bne $e12b			bne 	_CNCFail
.e12a	60		rts				rts
.e12b					_CNCFail:
.e12b	20 72 e7	jsr $e772			jsr 	ReportError
>e12e	4d 69 73 73 69 6e 67 20				.text 	"Missing token",$00
>e136	74 6f 6b 65 6e 00

;******  Return to file: basic.asm


;******  Processing file: general/data.asm

=$e13c							currentPosData = *
>0020					zCurrentLine: 	.word 	?					; address of current line (offset word)
>0022					zBasicStack:	.word 	? 					; stack for BASIC.
>0024					zLowMemory:		.word	?					; next free space after program (arrays,vars etc.)
>0026					zTemp1:			.word 	?					; temporary vars
>0028					zTemp2:			.word 	?
>2000					FixedVariables:	.fill 	27*4 				; address of 26 x 4 byte fixed variables @A-Z
>206c					HighMemory:		.word 	?					; highest memory location available (2 bytes)
>206e					Temp1:			.dword	?					; 4 byte temporary stores.
>2072					SignCount:		.byte 	? 					; count of signs in divide.
>2073					StringBufferPos:.byte 	? 					; next free slot in string buffer
>2074					RandomSeed 		.word 	? 					; Random Number
>2076									.align	256
.2100					StringBuffer:
>2100									.byte ?
>2101									.align	256
.2200					BasicProgram:

;******  Return to file: basic.asm


;******  Processing file: general/evaluate.asm

.e13c					EvaluateSNError:
.e13c	4c 6d e7	jmp $e76d			jmp 	SyntaxError
.e13f					EvaluateMissingQuote:
.e13f	20 72 e7	jsr $e772			jsr 	ReportError
>e142	4d 69 73 73 69 6e 67 20				.text 	"Missing quote",$00
>e14a	71 75 6f 74 65 00
.e150					EvaluateStringFull:
.e150	20 72 e7	jsr $e772			jsr 	ReportError
>e153	53 74 72 69 6e 67 20 42				.text 	"String Buffer full",$00
>e15b	75 66 66 65 72 20 66 75 6c 6c 00
.e166					EvaluateBadHex:
.e166	20 72 e7	jsr $e772			jsr 	ReportError
>e169	42 61 64 20 48 65 78 00				.text 	"Bad Hex",$00
.e171					EvaluateAtomCurrentLevel:
.e171	a9 07		lda #$07			lda 	#7
.e173	80 04		bra $e179			bra 	EvaluateAtPrecedenceLevel
.e175					EvaluateBase:
.e175	a2 00		ldx #$00			ldx 	#0 							; reset the stack
.e177					EvaluateBaseCurrentLevel:
.e177	a9 00		lda #$00			lda 	#0 							; current precedence is zero
.e179					EvaluateAtPrecedenceLevel:
.e179	48		pha				pha 								; save precedence level
.e17a	a9 00		lda #$00			lda 	#0 							; zero the result.
.e17c	9d 00 04	sta $0400,x			sta 	evalStack+0,x
.e17f	9d 01 04	sta $0401,x			sta 	evalStack+1,x
.e182	9d 02 04	sta $0402,x			sta 	evalStack+2,x
.e185	9d 03 04	sta $0403,x			sta 	evalStack+3,x
.e188					_EVALSkipSpace1:
.e188	b1 20		lda ($20),y			lda 	(zCurrentLine),y 			; get next token, skipping over spaces.
.e18a	f0 b0		beq $e13c			beq 	EvaluateSNError 			; end of line, without token.
.e18c	c8		iny				iny
.e18d	c9 20		cmp #$20			cmp 	#32
.e18f	f0 f7		beq $e188			beq 	_EVALSkipSpace1
.e191	88		dey				dey 								; points at the token.
.e192	c9 81		cmp #$81			cmp 	#KW_DQUOTE					; is it opening quote ?
.e194	f0 14		beq $e1aa			beq 	_EVALString  				; if so load in a constant string
.e196	c9 82		cmp #$82			cmp 	#KW_HASH 					; is it a hash, e.g. hexadecimal.
.e198	f0 36		beq $e1d0			beq 	_EVALHexadecimal
.e19a	c9 30		cmp #$30			cmp 	#'0'						; is it in range 0-9
.e19c	90 04		bcc $e1a2			bcc		_EVALGoKeywordVariable 		; yes, it's a keyword or variable.
.e19e	c9 3a		cmp #$3a			cmp 	#'9'+1
.e1a0	90 03		bcc $e1a5			bcc 	_EVALDecimal
.e1a2					_EVALGoKeywordVariable:
.e1a2	4c 27 e2	jmp $e227			jmp 	_EVALKeywordVariable
.e1a5					_EVALDecimal:
.e1a5	20 4d e2	jsr $e24d			jsr 	EVALGetDecConstant 			; get decimal constant
.e1a8	80 34		bra $e1de			bra 	_EVALGotAtom 				; got atom.
.e1aa					_EVALString:
.e1aa	da		phx				phx 								; save X on stack
.e1ab	a9 21		lda #$21			lda 	#StringBuffer >> 8 			; set the address in the eval stack
.e1ad	9d 01 04	sta $0401,x			sta 	evalStack+1,x
.e1b0	ad 73 20	lda $2073			lda 	StringBufferPos 			; X = Buffer Position.
.e1b3	9d 00 04	sta $0400,x			sta 	evalStack+0,x 				; that's the address of the new string
.e1b6	aa		tax				tax 								; put in X to build the string.
.e1b7	c8		iny				iny 								; skip over opening quote character
.e1b8					_EVALStringCopy:
.e1b8	b1 20		lda ($20),y			lda 	(zCurrentLine),y 			; get next character.
.e1ba	c8		iny				iny
.e1bb	f0 82		beq $e13f			beq		EvaluateMissingQuote 		; if zero, then there was no closing quote.
.e1bd	9d 00 21	sta $2100,x			sta 	StringBuffer,x 				; copy into the buffer
.e1c0	e8		inx				inx 								; and bump that pointer.
.e1c1	f0 8d		beq $e150			beq 	EvaluateStringFull 			; buffer is full.
.e1c3	49 81		eor #$81			eor 	#KW_DQUOTE					; keep going if not closing quote.
.e1c5	d0 f1		bne $e1b8			bne 	_EVALStringCopy
.e1c7	8e 73 20	stx $2073			stx 	StringBufferPos 			; this is the new next free slot.
.e1ca	9d ff 20	sta $20ff,x			sta 	StringBuffer-1,x 			; write the zero (EOS) hence EOR to end string.
.e1cd	fa		plx				plx 								; restore X
.e1ce	80 0e		bra $e1de			bra 	_EVALGotAtom 				; got the atom.
.e1d0					_EVALHexaDecimal
.e1d0	c8		iny				iny 								; skip over the '#'
.e1d1	5a		phy				phy 								; save Y
.e1d2	20 b9 e2	jsr $e2b9			jsr 	EVALGetHexConstant 			; load in hexadecimal constant
.e1d5	8c 6e 20	sty $206e			sty 	Temp1 						; has Y changed ?
.e1d8	68		pla				pla
.e1d9	cd 6e 20	cmp $206e			cmp 	Temp1
.e1dc	f0 88		beq $e166			beq 	EvaluateBadHex 				; if not, error.
.e1de					_EVALGotAtom:
.e1de					_EVALGetOperator:
.e1de	b1 20		lda ($20),y			lda 	(zCurrentLine),y 			; get next token skip spaces.
.e1e0	c8		iny				iny 								; this should be binary operator
.e1e1	c9 20		cmp #$20			cmp 	#$20
.e1e3	f0 f9		beq $e1de			beq 	_EVALGetOperator
.e1e5	88		dey				dey
.e1e6	09 00		ora #$00			ora 	#0 							; to be a binary token must be -ve
.e1e8	10 3b		bpl $e225			bpl 	_EVALExitPullA 				; if +ve then exit now.
.e1ea	da		phx				phx 								; save X
.e1eb	aa		tax				tax 								; token in X
.e1ec	bd 65 e0	lda $e065,x			lda 	TokenTypeInformation-128,x 	; get the type info for it
.e1ef	8d 6e 20	sta $206e			sta 	Temp1 						; save precedence in Temp1
.e1f2	fa		plx				plx 								; restore X
.e1f3	c9 08		cmp #$08			cmp 	#8 							; if type >= 8, e.g. not binary, then exit.
.e1f5	b0 2e		bcs $e225			bcs 	_EVALExitPullA
.e1f7	68		pla				pla 								; get and save precedence level.
.e1f8	48		pha				pha
.e1f9	cd 6e 20	cmp $206e			cmp 	Temp1 						; compare operator precedence - keyword precedence level.
.e1fc	f0 02		beq $e200			beq 	_EVALDoCalc					; equal, do it.
.e1fe	b0 25		bcs $e225			bcs 	_EVALExitPullA				; too high, then exit.
.e200					_EVALDoCalc:
.e200	b1 20		lda ($20),y			lda 	(zCurrentLine),y 			; get the token, save on stack and skip it.
.e202	c8		iny				iny
.e203	48		pha				pha
.e204	da		phx				phx
.e205	e8		inx				inx 								; work out right hand side.
.e206	e8		inx				inx
.e207	e8		inx				inx
.e208	e8		inx				inx
.e209	ad 6e 20	lda $206e			lda 	Temp1 						; get current operator precedence level.
.e20c	1a		inc a				inc 	a 							; so work it out at the next level.
.e20d	20 79 e1	jsr $e179			jsr 	EvaluateAtPrecedenceLevel 	; work out the RHS.
.e210	fa		plx				plx 								; fix X back.
.e211	68		pla				pla 								; get keyword
.e212					_EVALExecuteA:
.e212	0a		asl a				asl 	a 							; shift left, drop bit 7
.e213	8d 6f 20	sta $206f			sta 	Temp1+1						; save in Temp1.1
.e216	a9 e0		lda #$e0			lda 	#KeywordVectorTable >> 8 	; set high byte of KVT
.e218	8d 70 20	sta $2070			sta 	Temp1+2 					; set at Temp1.2
.e21b	a9 6c		lda #$6c			lda 	#$6C 						; make JMP (xxxx)
.e21d	8d 6e 20	sta $206e			sta 	Temp1+0
.e220	20 6e 20	jsr $206e			jsr 	Temp1 						; call that routine.
.e223	80 b9		bra $e1de			bra 	_EVALGotAtom 				; and loop back again.
.e225					_EVALExitPullA:
.e225	68		pla				pla 								; restore precedence.
.e226	60		rts				rts
.e227					_EVALKeywordVariable:
.e227	09 00		ora #$00			ora 	#0 							; check bit 7
.e229	10 0f		bpl $e23a			bpl 	_EVALNotUnaryFunction 		; must be set for unary function
.e22b	da		phx				phx
.e22c	aa		tax				tax
.e22d	bd 65 e0	lda $e065,x			lda 	TokenTypeInformation-128,x 	; get the type info for it
.e230	fa		plx				plx
.e231	c9 09		cmp #$09			cmp 	#KTYPE_UNARYFN 				; is it a unary function
.e233	d0 05		bne $e23a			bne 	_EVALNotUnaryFunction
.e235	b1 20		lda ($20),y			lda 	(zCurrentLine),y 			; get the token back
.e237	c8		iny				iny 								; consume it
.e238	80 d8		bra $e212			bra 	_EVALExecuteA 				; execute TOS.
.e23a					_EVALNotUnaryFunction:
.e23a	b1 20		lda ($20),y			lda 	(zCurrentLine),y
.e23c	c9 87		cmp #$87			cmp 	#KW_LPAREN 					; check left bracket.
.e23e	d0 0b		bne $e24b			bne		_EVALCheckUnaryOperator
.e240	c8		iny				iny 								; skip left bracket.
.e241	20 77 e1	jsr $e177			jsr 	EvaluateBaseCurrentLevel 	; calculate what's in the bracket.
.e244	a9 88		lda #$88			lda 	#KW_RPAREN 					; check right bracket.
.e246	20 19 e1	jsr $e119			jsr 	CheckNextCharacter 			; check next character, after spaces.
.e249	80 93		bra $e1de			bra 	_EVALGotAtom
.e24b					_EVALCheckUnaryOperator:
.e24b	80 fe		bra $e24b			bra 	_EVALCheckUnaryOperator
.e24d					EVALGetDecConstant:
.e24d	b1 20		lda ($20),y			lda 	(zCurrentLine),y 			; get next
.e24f	c9 30		cmp #$30			cmp 	#'0'						; check in range 0-9.
.e251	90 04		bcc $e257			bcc 	_EVGDExit
.e253	c9 3a		cmp #$3a			cmp 	#'9'+1
.e255	90 01		bcc $e258			bcc 	_EVGDValue 					; if so has legal value
.e257					_EVGDExit:
.e257	60		rts				rts
.e258					_EVGDValue:
.e258	48		pha				pha 								; save value, Y on stack
.e259	5a		phy				phy
.e25a	a0 03		ldy #$03			ldy 	#3 							; 3 shifts.
.e25c	bd 03 04	lda $0403,x			lda 	evalStack+3,x 				; push x1 value on stack.
.e25f	48		pha				pha
.e260	bd 02 04	lda $0402,x			lda 	evalStack+2,x
.e263	48		pha				pha
.e264	bd 01 04	lda $0401,x			lda 	evalStack+1,x
.e267	48		pha				pha
.e268	bd 00 04	lda $0400,x			lda 	evalStack+0,x
.e26b	48		pha				pha
.e26c					_EVGDLoop:
.e26c	1e 00 04	asl $0400,x			asl 	evalStack+0,x 				; rotate left once.
.e26f	3e 01 04	rol $0401,x			rol 	evalStack+1,x
.e272	3e 02 04	rol $0402,x			rol 	evalStack+2,x
.e275	3e 03 04	rol $0403,x			rol 	evalStack+3,x
.e278	c0 02		cpy #$02			cpy 	#2 							; if done it twice now
.e27a	d0 1d		bne $e299			bne 	_EVGDNoAdd
.e27c	18		clc				clc 								; then it will be x 4, adding +1 => x 5
.e27d	68		pla				pla
.e27e	7d 00 04	adc $0400,x			adc 	evalStack+0,x
.e281	9d 00 04	sta $0400,x			sta 	evalStack+0,x
.e284	68		pla				pla
.e285	7d 01 04	adc $0401,x			adc 	evalStack+1,x
.e288	9d 01 04	sta $0401,x			sta 	evalStack+1,x
.e28b	68		pla				pla
.e28c	7d 02 04	adc $0402,x			adc 	evalStack+2,x
.e28f	9d 02 04	sta $0402,x			sta 	evalStack+2,x
.e292	68		pla				pla
.e293	7d 03 04	adc $0403,x			adc 	evalStack+3,x
.e296	9d 03 04	sta $0403,x			sta 	evalStack+3,x
.e299					_EVGDNoAdd:
.e299	88		dey				dey
.e29a	d0 d0		bne $e26c			bne 	_EVGDLoop
.e29c	7a		ply				ply 								; restore YA
.e29d	68		pla				pla
.e29e	c8		iny				iny 								; next character
.e29f	29 0f		and #$0f			and 	#15 						; force into range and put in.
.e2a1	18		clc				clc
.e2a2	7d 00 04	adc $0400,x			adc 	evalStack+0,x 				; add digit in
.e2a5	9d 00 04	sta $0400,x			sta 	evalStack+0,x
.e2a8	90 a3		bcc $e24d			bcc 	EVALGetDecConstant 			; propogate constant through
.e2aa	fe 01 04	inc $0401,x			inc 	evalStack+1,x
.e2ad	d0 9e		bne $e24d			bne 	EVALGetDecConstant
.e2af	fe 02 04	inc $0402,x			inc 	evalStack+2,x
.e2b2	d0 99		bne $e24d			bne 	EVALGetDecConstant
.e2b4	fe 03 04	inc $0403,x			inc 	evalStack+3,x
.e2b7	80 94		bra $e24d			bra 	EVALGetDecConstant 			; go back and try again.
.e2b9					EVALGetHexConstant:
.e2b9	b1 20		lda ($20),y			lda 	(zCurrentLine),y 			; get next
.e2bb	20 ed e2	jsr $e2ed			jsr 	EVALToUpper 				; make upper case
.e2be	38		sec				sec
.e2bf	e9 30		sbc #$30			sbc 	#"0" 						; range 0-9
.e2c1	90 0a		bcc $e2cd			bcc 	_EVGHExit 					; exit if CC
.e2c3	c9 0a		cmp #$0a			cmp 	#9+1 						; if < 9 have a legal value.
.e2c5	90 07		bcc $e2ce			bcc 	_EVGHValue
.e2c7	e9 07		sbc #$07			sbc 	#7 							; now in range 10-15 if okay.
.e2c9	c9 10		cmp #$10			cmp 	#15+1
.e2cb	90 01		bcc $e2ce			bcc 	_EVGHValue
.e2cd					_EVGHExit:
.e2cd	60		rts				rts
.e2ce					_EVGHValue:
.e2ce	5a		phy				phy 								; save Y and new digit.
.e2cf	48		pha				pha
.e2d0	a0 04		ldy #$04			ldy 	#4 							; rotate left 4
.e2d2					_EVGHRotate:
.e2d2	1e 00 04	asl $0400,x			asl 	evalStack+0,x
.e2d5	3e 01 04	rol $0401,x			rol 	evalStack+1,x
.e2d8	3e 02 04	rol $0402,x			rol 	evalStack+2,x
.e2db	3e 03 04	rol $0403,x			rol 	evalStack+3,x
.e2de	88		dey				dey
.e2df	d0 f1		bne $e2d2			bne 	_EVGHRotate
.e2e1	68		pla				pla 								; restore digit and X
.e2e2	7a		ply				ply
.e2e3	c8		iny				iny 								; next character
.e2e4	18		clc				clc
.e2e5	1d 00 04	ora $0400,x			ora 	evalStack+0,x 				; add digit in
.e2e8	9d 00 04	sta $0400,x			sta 	evalStack+0,x
.e2eb	80 cc		bra $e2b9			bra 	EVALGetHexConstant 			; go back and try again.
.e2ed					EVALToUpper:
.e2ed	c9 61		cmp #$61			cmp 	#'a'
.e2ef	90 06		bcc $e2f7			bcc 	_EVTUExit
.e2f1	c9 7b		cmp #$7b			cmp 	#'z'+1
.e2f3	b0 02		bcs $e2f7			bcs 	_EVTUExit
.e2f5	49 20		eor #$20			eor 	#32
.e2f7					_EVTUExit:
.e2f7	60		rts				rts

;******  Return to file: basic.asm


;******  Processing file: binary/arithmetic.asm

.e2f8					BFUNC_Add:
.e2f8	18		clc				clc
.e2f9	bd 00 04	lda $0400,x			lda 	evalStack+0,x
.e2fc	7d 04 04	adc $0404,x			adc 	evalStack+4,x
.e2ff	9d 00 04	sta $0400,x			sta 	evalStack+0,x
.e302	bd 01 04	lda $0401,x			lda 	evalStack+1,x
.e305	7d 05 04	adc $0405,x			adc 	evalStack+5,x
.e308	9d 01 04	sta $0401,x			sta 	evalStack+1,x
.e30b	bd 02 04	lda $0402,x			lda 	evalStack+2,x
.e30e	7d 06 04	adc $0406,x			adc 	evalStack+6,x
.e311	9d 02 04	sta $0402,x			sta 	evalStack+2,x
.e314	bd 03 04	lda $0403,x			lda 	evalStack+3,x
.e317	7d 07 04	adc $0407,x			adc 	evalStack+7,x
.e31a	9d 03 04	sta $0403,x			sta 	evalStack+3,x
.e31d	60		rts				rts
.e31e					BFUNC_Subtract:
.e31e	38		sec				sec
.e31f	bd 00 04	lda $0400,x			lda 	evalStack+0,x
.e322	fd 04 04	sbc $0404,x			sbc 	evalStack+4,x
.e325	9d 00 04	sta $0400,x			sta 	evalStack+0,x
.e328	bd 01 04	lda $0401,x			lda 	evalStack+1,x
.e32b	fd 05 04	sbc $0405,x			sbc 	evalStack+5,x
.e32e	9d 01 04	sta $0401,x			sta 	evalStack+1,x
.e331	bd 02 04	lda $0402,x			lda 	evalStack+2,x
.e334	fd 06 04	sbc $0406,x			sbc 	evalStack+6,x
.e337	9d 02 04	sta $0402,x			sta 	evalStack+2,x
.e33a	bd 03 04	lda $0403,x			lda 	evalStack+3,x
.e33d	fd 07 04	sbc $0407,x			sbc 	evalStack+7,x
.e340	9d 03 04	sta $0403,x			sta 	evalStack+3,x
.e343	60		rts				rts

;******  Return to file: basic.asm


;******  Processing file: binary/binary.asm

.e344					BFUNC_And:
.e344	bd 00 04	lda $0400,x			lda 	evalStack+0,x
.e347	3d 04 04	and $0404,x			and 	evalStack+4,x
.e34a	9d 00 04	sta $0400,x			sta 	evalStack+0,x
.e34d	bd 01 04	lda $0401,x			lda 	evalStack+1,x
.e350	3d 05 04	and $0405,x			and 	evalStack+5,x
.e353	9d 01 04	sta $0401,x			sta 	evalStack+1,x
.e356	bd 02 04	lda $0402,x			lda 	evalStack+2,x
.e359	3d 06 04	and $0406,x			and 	evalStack+6,x
.e35c	9d 02 04	sta $0402,x			sta 	evalStack+2,x
.e35f	bd 03 04	lda $0403,x			lda 	evalStack+3,x
.e362	3d 07 04	and $0407,x			and 	evalStack+7,x
.e365	9d 03 04	sta $0403,x			sta 	evalStack+3,x
.e368	60		rts				rts
.e369					BFUNC_Or:
.e369	bd 00 04	lda $0400,x			lda 	evalStack+0,x
.e36c	1d 04 04	ora $0404,x			ora 	evalStack+4,x
.e36f	9d 00 04	sta $0400,x			sta 	evalStack+0,x
.e372	bd 01 04	lda $0401,x			lda 	evalStack+1,x
.e375	1d 05 04	ora $0405,x			ora 	evalStack+5,x
.e378	9d 01 04	sta $0401,x			sta 	evalStack+1,x
.e37b	bd 02 04	lda $0402,x			lda 	evalStack+2,x
.e37e	1d 06 04	ora $0406,x			ora 	evalStack+6,x
.e381	9d 02 04	sta $0402,x			sta 	evalStack+2,x
.e384	bd 03 04	lda $0403,x			lda 	evalStack+3,x
.e387	1d 07 04	ora $0407,x			ora 	evalStack+7,x
.e38a	9d 03 04	sta $0403,x			sta 	evalStack+3,x
.e38d	60		rts				rts
.e38e					BFUNC_Xor:
.e38e	bd 00 04	lda $0400,x			lda 	evalStack+0,x
.e391	5d 04 04	eor $0404,x			eor 	evalStack+4,x
.e394	9d 00 04	sta $0400,x			sta 	evalStack+0,x
.e397	bd 01 04	lda $0401,x			lda 	evalStack+1,x
.e39a	5d 05 04	eor $0405,x			eor 	evalStack+5,x
.e39d	9d 01 04	sta $0401,x			sta 	evalStack+1,x
.e3a0	bd 02 04	lda $0402,x			lda 	evalStack+2,x
.e3a3	5d 06 04	eor $0406,x			eor 	evalStack+6,x
.e3a6	9d 02 04	sta $0402,x			sta 	evalStack+2,x
.e3a9	bd 03 04	lda $0403,x			lda 	evalStack+3,x
.e3ac	5d 07 04	eor $0407,x			eor 	evalStack+7,x
.e3af	9d 03 04	sta $0403,x			sta 	evalStack+3,x
.e3b2	60		rts				rts

;******  Return to file: basic.asm


;******  Processing file: binary/multiply.asm

.e3b3					BFUNC_Multiply:
.e3b3	bd 00 04	lda $0400,x			lda 	evalStack+0,x				; copy +0 to +8
.e3b6	9d 08 04	sta $0408,x			sta 	evalStack+8,x
.e3b9	bd 01 04	lda $0401,x			lda 	evalStack+1,x
.e3bc	9d 09 04	sta $0409,x			sta 	evalStack+9,x
.e3bf	bd 02 04	lda $0402,x			lda 	evalStack+2,x
.e3c2	9d 0a 04	sta $040a,x			sta 	evalStack+10,x
.e3c5	bd 03 04	lda $0403,x			lda 	evalStack+3,x
.e3c8	9d 0b 04	sta $040b,x			sta 	evalStack+11,x
.e3cb	a9 00		lda #$00			lda 	#0
.e3cd	9d 00 04	sta $0400,x			sta 	evalStack+0,x 				; zero +0
.e3d0	9d 01 04	sta $0401,x			sta 	evalStack+1,x
.e3d3	9d 02 04	sta $0402,x			sta 	evalStack+2,x
.e3d6	9d 03 04	sta $0403,x			sta 	evalStack+3,x
.e3d9					_BFMMultiply:
.e3d9	bd 08 04	lda $0408,x			lda 	evalStack+8,x 				; get LSBit of 8-11
.e3dc	29 01		and #$01			and 	#1
.e3de	f0 03		beq $e3e3			beq 	_BFMNoAdd
.e3e0	20 f8 e2	jsr $e2f8			jsr 	BFunc_Add 					; if bit set, add 4 to 0.
.e3e3					_BFMNoAdd:
.e3e3	1e 04 04	asl $0404,x			asl 	evalStack+4,x 				; shift +4 left
.e3e6	3e 05 04	rol $0405,x			rol 	evalStack+5,x
.e3e9	3e 06 04	rol $0406,x			rol 	evalStack+6,x
.e3ec	3e 07 04	rol $0407,x			rol 	evalStack+7,x
.e3ef	5e 0b 04	lsr $040b,x			lsr 	evalStack+11,x 				; shift +8 right
.e3f2	7e 0a 04	ror $040a,x			ror 	evalStack+10,x
.e3f5	7e 09 04	ror $0409,x			ror 	evalStack+9,x
.e3f8	7e 08 04	ror $0408,x			ror 	evalStack+8,x
.e3fb	bd 08 04	lda $0408,x			lda 	evalStack+8,x 				; continue if +8 is nonzero
.e3fe	1d 09 04	ora $0409,x			ora 	evalStack+9,x
.e401	1d 0a 04	ora $040a,x			ora 	evalStack+10,x
.e404	1d 0b 04	ora $040b,x			ora 	evalStack+11,x
.e407	d0 d0		bne $e3d9			bne 	_BFMMultiply
.e409	60		rts				rts

;******  Return to file: basic.asm


;******  Processing file: binary/divide.asm

.e40a					BFUNC_Divide:
.e40a	bd 04 04	lda $0404,x			lda 	evalStack+4,x 				; check for /0
.e40d	1d 05 04	ora $0405,x			ora 	evalStack+5,x
.e410	1d 06 04	ora $0406,x			ora 	evalStack+6,x
.e413	1d 07 04	ora $0407,x			ora 	evalStack+7,x
.e416	d0 13		bne $e42b			bne 	_BFDOkay
.e418	20 72 e7	jsr $e772			jsr 	ReportError
>e41b	44 69 76 69 73 6f 6e 20				.text 	"Divison by Zero",$00
>e423	62 79 20 5a 65 72 6f 00
.e42b					_BFDOkay:
.e42b	a9 00		lda #$00			lda 	#0 							; Temp1 is 'A' (and holds the remainder)
.e42d	8d 6e 20	sta $206e			sta 	Temp1 						; Q/Dividend/Left in +0
.e430	8d 6f 20	sta $206f			sta 	Temp1+1 					; M/Divisor/Right in +4
.e433	8d 70 20	sta $2070			sta 	Temp1+2
.e436	8d 71 20	sta $2071			sta 	Temp1+3
.e439	8d 72 20	sta $2072			sta 	SignCount 					; Count of signs.
.e43c	20 a7 e4	jsr $e4a7			jsr 	BFUNC_Negate 				; negate (and bump sign count)
.e43f	da		phx				phx
.e440	e8		inx				inx
.e441	e8		inx				inx
.e442	e8		inx				inx
.e443	e8		inx				inx
.e444	20 a7 e4	jsr $e4a7			jsr 	BFUNC_Negate
.e447	fa		plx				plx
.e448	5a		phy				phy 								; Y is the counter
.e449	a0 20		ldy #$20			ldy 	#32 						; 32 iterations of the loop.
.e44b					_BFDLoop:
.e44b	1e 00 04	asl $0400,x			asl 	evalStack+0,x 				; shift AQ left.
.e44e	3e 01 04	rol $0401,x			rol 	evalStack+1,x
.e451	3e 02 04	rol $0402,x			rol 	evalStack+2,x
.e454	3e 03 04	rol $0403,x			rol 	evalStack+3,x
.e457	2e 6e 20	rol $206e			rol 	Temp1
.e45a	2e 6f 20	rol $206f			rol 	Temp1+1
.e45d	2e 70 20	rol $2070			rol 	Temp1+2
.e460	2e 71 20	rol $2071			rol 	Temp1+3
.e463	38		sec				sec
.e464	ad 6e 20	lda $206e			lda 	Temp1+0 					; Calculate A-M on stack.
.e467	fd 04 04	sbc $0404,x			sbc 	evalStack+4,x
.e46a	48		pha				pha
.e46b	ad 6f 20	lda $206f			lda 	Temp1+1
.e46e	fd 05 04	sbc $0405,x			sbc 	evalStack+5,x
.e471	48		pha				pha
.e472	ad 70 20	lda $2070			lda 	Temp1+2
.e475	fd 06 04	sbc $0406,x			sbc 	evalStack+6,x
.e478	48		pha				pha
.e479	ad 71 20	lda $2071			lda 	Temp1+3
.e47c	fd 07 04	sbc $0407,x			sbc 	evalStack+7,x
.e47f	90 19		bcc $e49a			bcc 	_BFDNoAdd
.e481	8d 71 20	sta $2071			sta 	Temp1+3 					; update A
.e484	68		pla				pla
.e485	8d 70 20	sta $2070			sta 	Temp1+2
.e488	68		pla				pla
.e489	8d 6f 20	sta $206f			sta 	Temp1+1
.e48c	68		pla				pla
.e48d	8d 6e 20	sta $206e			sta 	Temp1+0
.e490	bd 00 04	lda $0400,x			lda 	evalStack+0,x 				; set Q bit 1.
.e493	09 01		ora #$01			ora 	#1
.e495	9d 00 04	sta $0400,x			sta 	evalStack+0,x
.e498	80 03		bra $e49d			bra 	_BFDNext
.e49a					_BFDNoAdd:
.e49a	68		pla				pla 								; Throw away the intermediate calculations
.e49b	68		pla				pla
.e49c	68		pla				pla
.e49d					_BFDNext:
.e49d	88		dey				dey
.e49e	d0 ab		bne $e44b			bne 	_BFDLoop
.e4a0	7a		ply				ply 								; restore Y and exit
.e4a1	4e 72 20	lsr $2072			lsr 	SignCount 					; if sign count odd,
.e4a4	b0 06		bcs $e4ac			bcs		BFUNC_NegateAlways 			; negate the result
.e4a6	60		rts				rts
.e4a7					BFUNC_Negate:
.e4a7	bd 03 04	lda $0403,x			lda 	evalStack+3,x
.e4aa	10 24		bpl $e4d0			bpl 	BFNExit
.e4ac					BFUNC_NegateAlways:
.e4ac	38		sec				sec
.e4ad	a9 00		lda #$00			lda 	#0
.e4af	fd 00 04	sbc $0400,x			sbc 	evalStack+0,x
.e4b2	9d 00 04	sta $0400,x			sta 	evalStack+0,x
.e4b5	a9 00		lda #$00			lda 	#0
.e4b7	fd 01 04	sbc $0401,x			sbc 	evalStack+1,x
.e4ba	9d 01 04	sta $0401,x			sta 	evalStack+1,x
.e4bd	a9 00		lda #$00			lda 	#0
.e4bf	fd 02 04	sbc $0402,x			sbc 	evalStack+2,x
.e4c2	9d 02 04	sta $0402,x			sta 	evalStack+2,x
.e4c5	a9 00		lda #$00			lda 	#0
.e4c7	fd 03 04	sbc $0403,x			sbc 	evalStack+3,x
.e4ca	9d 03 04	sta $0403,x			sta 	evalStack+3,x
.e4cd	ee 72 20	inc $2072			inc 	SignCount
.e4d0					BFNExit:
.e4d0	60		rts				rts
.e4d1					BFUNC_Modulus:
.e4d1	20 0a e4	jsr $e40a			jsr 	BFUNC_Divide 				; start with division.
.e4d4	ad 6e 20	lda $206e			lda 	Temp1+0 					; copy remainder
.e4d7	9d 00 04	sta $0400,x			sta 	evalStack+0,x
.e4da	ad 6f 20	lda $206f			lda 	Temp1+1
.e4dd	9d 01 04	sta $0401,x			sta 	evalStack+1,x
.e4e0	ad 70 20	lda $2070			lda 	Temp1+2
.e4e3	9d 02 04	sta $0402,x			sta 	evalStack+2,x
.e4e6	ad 71 20	lda $2071			lda 	Temp1+3
.e4e9	9d 03 04	sta $0403,x			sta 	evalStack+3,x
.e4ec	60		rts				rts

;******  Return to file: basic.asm


;******  Processing file: binary/compare.asm

.e4ed					BFUNC_Equals:
.e4ed	18		clc				clc
.e4ee	80 01		bra $e4f1			bra 	BFUNC_EqualCheck
.e4f0					BFUNC_NotEquals:
.e4f0	38		sec				sec
.e4f1					BFUNC_EqualCheck:
.e4f1	08		php				php									; save invert flag
.e4f2	ad 00 04	lda $0400			lda 	evalStack+0 				; check equality
.e4f5	cd 04 04	cmp $0404			cmp 	evalStack+4
.e4f8	d0 1c		bne $e516			bne 	COMP_Fail
.e4fa	ad 01 04	lda $0401			lda 	evalStack+1
.e4fd	cd 05 04	cmp $0405			cmp 	evalStack+5
.e500	d0 14		bne $e516			bne 	COMP_Fail
.e502	ad 02 04	lda $0402			lda 	evalStack+2
.e505	cd 06 04	cmp $0406			cmp 	evalStack+6
.e508	d0 0c		bne $e516			bne 	COMP_Fail
.e50a	ad 03 04	lda $0403			lda 	evalStack+3
.e50d	cd 07 04	cmp $0407			cmp 	evalStack+7
.e510	d0 04		bne $e516			bne 	COMP_Fail
.e512					COMP_Succeed:
.e512	a9 ff		lda #$ff			lda 	#$FF
.e514	80 02		bra $e518			bra 	COMP_SetResult
.e516					COMP_Fail:
.e516	a9 00		lda #$00			lda 	#0 							; here return 0
.e518					COMP_SetResult:
.e518	28		plp				plp 								; but if CS
.e519	90 02		bcc $e51d			bcc 	COMP_Accept
.e51b	49 ff		eor #$ff			eor 	#$FF 						; invert that
.e51d					COMP_Accept:
.e51d	9d 00 04	sta $0400,x			sta 	evalStack+0,x 				; write to result.
.e520	9d 01 04	sta $0401,x			sta 	evalStack+1,x
.e523	9d 02 04	sta $0402,x			sta 	evalStack+2,x
.e526	9d 03 04	sta $0403,x			sta 	evalStack+3,x
.e529	60		rts				rts
.e52a					BFUNC_Less:
.e52a	18		clc				clc
.e52b	80 01		bra $e52e			bra 	BFUNC_LessCheck
.e52d					BFUNC_GreaterEqual:
.e52d	38		sec				sec
.e52e					BFUNC_LessCheck:
.e52e	08		php				php
.e52f	38		sec				sec
.e530	ad 00 04	lda $0400			lda 	evalStack+0 				; compare using direct subtraction
.e533	ed 04 04	sbc $0404			sbc 	evalStack+4
.e536	ad 01 04	lda $0401			lda 	evalStack+1
.e539	ed 05 04	sbc $0405			sbc 	evalStack+5
.e53c	ad 02 04	lda $0402			lda 	evalStack+2
.e53f	ed 06 04	sbc $0406			sbc 	evalStack+6
.e542	ad 03 04	lda $0403			lda 	evalStack+3
.e545	ed 07 04	sbc $0407			sbc 	evalStack+7
.e548	30 c8		bmi $e512			bmi 	COMP_Succeed
.e54a	80 ca		bra $e516			bra 	COMP_Fail
.e54c					BFUNC_Greater:
.e54c	18		clc				clc
.e54d	80 01		bra $e550			bra 	BFUNC_GreaterCheck
.e54f					BFUNC_LessEqual:
.e54f	38		sec				sec
.e550					BFUNC_GreaterCheck:
.e550	08		php				php
.e551	38		sec				sec
.e552	ad 04 04	lda $0404			lda 	evalStack+4 				; compare using direct subtraction
.e555	ed 00 04	sbc $0400			sbc 	evalStack+0
.e558	ad 05 04	lda $0405			lda 	evalStack+5
.e55b	ed 01 04	sbc $0401			sbc 	evalStack+1
.e55e	ad 06 04	lda $0406			lda 	evalStack+6
.e561	ed 02 04	sbc $0402			sbc 	evalStack+2
.e564	ad 07 04	lda $0407			lda 	evalStack+7
.e567	ed 03 04	sbc $0403			sbc 	evalStack+3
.e56a	30 a6		bmi $e512			bmi 	COMP_Succeed
.e56c	80 a8		bra $e516			bra 	COMP_Fail

;******  Return to file: basic.asm


;******  Processing file: binary/scompare.asm

.e56e					BFUNC_StringCompare:
.e56e	bd 00 04	lda $0400,x			lda 	evalStack+0,x 				; get address into temporaries.
.e571	85 26		sta $26				sta 	zTemp1
.e573	bd 01 04	lda $0401,x			lda 	evalStack+1,x
.e576	85 27		sta $27				sta 	zTemp1+1
.e578	bd 04 04	lda $0404,x			lda 	evalStack+4,x
.e57b	85 28		sta $28				sta 	zTemp2
.e57d	bd 05 04	lda $0405,x			lda 	evalStack+5,x
.e580	85 29		sta $29				sta 	zTemp2+1
.e582	a0 00		ldy #$00			ldy 	#0
.e584					_BFSCLoop:
.e584	b1 26		lda ($26),y			lda 	(zTemp1),y 					; comparison
.e586	38		sec				sec
.e587	d1 28		cmp ($28),y			cmp 	(zTemp2),y
.e589	d0 14		bne $e59f			bne		_BFSCDifferent 				; return different result.
.e58b	c8		iny				iny
.e58c	c9 00		cmp #$00			cmp 	#0							; until both EOS.
.e58e	d0 f4		bne $e584			bne 	_BFSCLoop
.e590	a9 00		lda #$00			lda 	#0
.e592					_BFSCSetAll:
.e592	9d 00 04	sta $0400,x			sta 	evalStack+0,x
.e595	9d 01 04	sta $0401,x			sta 	evalStack+1,x
.e598	9d 02 04	sta $0402,x			sta 	evalStack+2,x
.e59b	9d 03 04	sta $0403,x			sta 	evalStack+3,x
.e59e	60		rts				rts
.e59f					_BFSCDifferent:
.e59f	a9 ff		lda #$ff			lda 	#255 						; if CC set all as <
.e5a1	90 ef		bcc $e592			bcc 	_BFSCSetAll
.e5a3	a9 00		lda #$00			lda 	#0 							; set all zero
.e5a5	20 92 e5	jsr $e592			jsr 	_BFSCSetAll
.e5a8	fe 00 04	inc $0400,x			inc 	evalStack+0,x 				; and make it one.
.e5ab	60		rts				rts

;******  Return to file: basic.asm


;******  Processing file: unary/unary.asm

.e5ac					UNARY_Len:
.e5ac	20 71 e1	jsr $e171			jsr 	EvaluateAtomCurrentLevel 	; get the string to measure the length of.
.e5af	bd 00 04	lda $0400,x			lda 	evalStack+0,x 				; copy string address to zTemp1
.e5b2	85 26		sta $26				sta 	zTemp1
.e5b4	bd 01 04	lda $0401,x			lda 	evalStack+1,x
.e5b7	85 27		sta $27				sta 	zTemp1+1
.e5b9	5a		phy				phy
.e5ba	a0 00		ldy #$00			ldy 	#0 							; now figure out its length.
.e5bc					_ULGetLength:
.e5bc	b1 26		lda ($26),y			lda 	(zTemp1),y 					; read character
.e5be	f0 1d		beq $e5dd			beq 	_ULFoundEOL 				; found end of line.
.e5c0	c8		iny				iny
.e5c1	d0 f9		bne $e5bc			bne 	_ULGetLength 				; scan 256 only.
.e5c3	20 72 e7	jsr $e772			jsr 	ReportError
>e5c6	43 61 6e 6e 6f 74 20 66				.text 	"Cannot find string end",$00
>e5ce	69 6e 64 20 73 74 72 69 6e 67 20 65 6e 64 00
.e5dd					_ULFoundEOL:
.e5dd	98		tya				tya 								; length in A, restore Y
.e5de	7a		ply				ply
.e5df					UNARY_ReturnByte:
.e5df	9d 00 04	sta $0400,x			sta 	evalStack+0,x
.e5e2	a9 00		lda #$00			lda 	#0 							; clear the rests
.e5e4	9d 01 04	sta $0401,x			sta 	evalStack+1,x
.e5e7	9d 02 04	sta $0402,x			sta 	evalStack+2,x
.e5ea	9d 03 04	sta $0403,x			sta 	evalStack+3,x
.e5ed	60		rts				rts
.e5ee					UNARY_Ch:
.e5ee	20 71 e1	jsr $e171			jsr 	EvaluateAtomCurrentLevel 	; get the string to measure the length of.
.e5f1	bd 00 04	lda $0400,x			lda 	evalStack+0,x 				; copy string address to zTemp1
.e5f4	85 26		sta $26				sta 	zTemp1
.e5f6	bd 01 04	lda $0401,x			lda 	evalStack+1,x
.e5f9	85 27		sta $27				sta 	zTemp1+1
.e5fb	5a		phy				phy
.e5fc	a0 00		ldy #$00			ldy 	#0 							; now get first character
.e5fe	b1 26		lda ($26),y			lda 	(zTemp1),y
.e600	7a		ply				ply
.e601	80 dc		bra $e5df			bra 	UNARY_ReturnByte 			; return that byte.
.e603					UNARY_Abs:
.e603	ea		nop				nop
.e604	20 71 e1	jsr $e171			jsr 	EvaluateAtomCurrentLevel 	; get the string to measure the length of.
.e607	20 a7 e4	jsr $e4a7			jsr 	BFUNC_Negate 				; there's an ABS routine in divide
.e60a	60		rts				rts
.e60b					UNARY_Top:
.e60b	ad 6c 20	lda $206c			lda 	highMemory
.e60e	9d 00 04	sta $0400,x			sta 	evalStack+0,x
.e611	ad 6d 20	lda $206d			lda 	highMemory+1
.e614	9d 01 04	sta $0401,x			sta 	evalStack+1,x
.e617	a9 00		lda #$00			lda 	#0
.e619	9d 02 04	sta $0402,x			sta 	evalStack+2,x
.e61c	9d 03 04	sta $0403,x			sta 	evalStack+3,x
.e61f	60		rts				rts
.e620					UNARY_Rnd:
.e620	20 2b e6	jsr $e62b			jsr 	Random16 					; call 16 bit RNG twice
.e623	e8		inx				inx
.e624	e8		inx				inx
.e625	20 2b e6	jsr $e62b			jsr 	Random16
.e628	ca		dex				dex
.e629	ca		dex				dex
.e62a	60		rts				rts
.e62b					Random16:
.e62b	ad 74 20	lda $2074			lda 	RandomSeed 					; initialise if nonzero
.e62e	0d 75 20	ora $2075			ora 	RandomSeed+1
.e631	d0 0d		bne $e640			bne 	_R16_NoInit
.e633	ee 74 20	inc $2074			inc 	RandomSeed 					; by setting low to 1
.e636	5a		phy				phy
.e637	a0 14		ldy #$14			ldy 	#20 						; call it 20 times to get it started
.e639					_R16_Setup:
.e639	20 2b e6	jsr $e62b			jsr 	Random16
.e63c	88		dey				dey
.e63d	d0 fa		bne $e639			bne 	_R16_Setup
.e63f	7a		ply				ply
.e640					_R16_NoInit:
.e640	4e 75 20	lsr $2075			lsr 	RandomSeed+1				; shift seed right
.e643	6e 74 20	ror $2074			ror 	RandomSeed
.e646	90 08		bcc $e650			bcc 	_R16_NoXor
.e648	ad 75 20	lda $2075			lda 	RandomSeed+1				; xor MSB with $B4 if bit set.
.e64b	49 b4		eor #$b4			eor 	#$B4 						; like the Wikipedia one.
.e64d	8d 75 20	sta $2075			sta 	RandomSeed+1
.e650					_R16_NoXor:
.e650	ad 74 20	lda $2074			lda 	RandomSeed					; copy result to evaluate stack.
.e653	9d 00 04	sta $0400,x			sta 	evalStack+0,x
.e656	ad 75 20	lda $2075			lda 	RandomSeed+1
.e659	9d 01 04	sta $0401,x			sta 	evalStack+1,x
.e65c	60		rts				rts

;******  Return to file: basic.asm


;******  Processing file: commands/execute.asm

.e65d					COMMAND_Run:
.e65d	20 f1 e6	jsr $e6f1			jsr 	COMMAND_Clear 				; clear everything for a new run.
.e660	a2 00		ldx #$00			ldx 	#BasicProgram & 255 		; start from here
.e662	a0 22		ldy #$22			ldy 	#BasicProgram >> 8
.e664	86 20		stx $20				stx 	zCurrentLine 				; set current line.
.e666	84 21		sty $21				sty 	zCurrentLine+1
.e668					CRUNNewLine:
.e668	a0 00		ldy #$00			ldy 	#0 							; look at the offset, end of program
.e66a	b1 20		lda ($20),y			lda 	(zCurrentLine),y
.e66c	f0 3e		beq $e6ac			beq 	COMMAND_End 				; if zero, off end of program so stop.
.e66e	a0 03		ldy #$03			ldy 	#3 							; offset to first token.
.e670					CRUNNextInstruction:
.e670	b1 20		lda ($20),y			lda 	(zCurrentLine),y 			; get next token
.e672	f0 07		beq $e67b			beq 	CRUNNextLine 				; if zero, then end of line.
.e674					CRUNNotEndOfLine:
.e674	c9 8d		cmp #$8d			cmp 	#KW_Colon 					; check for a colon first.
.e676	d0 12		bne $e68a			bne 	CRUNExecuteOne 				; if not that, execute the token.
.e678	c8		iny				iny		 							; if colon, skip it and loop round.
.e679	80 f5		bra $e670			bra 	CRUNNextInstruction
.e67b					CRUNNextLine:
.e67b	a0 00		ldy #$00			ldy 	#0 							; add offset from line to line pointer
.e67d	b1 20		lda ($20),y			lda 	(zCurrentLine),y
.e67f	18		clc				clc
.e680	65 20		adc $20				adc 	zCurrentLine
.e682	85 20		sta $20				sta 	zCurrentLine
.e684	90 e2		bcc $e668			bcc 	CRUNNewLine
.e686	e6 21		inc $21				inc 	zCurrentLine+1
.e688	80 de		bra $e668			bra 	CRUNNewLine
.e68a					CRUNExecuteOne:
.e68a	c8		iny				iny 								; skip over loaded token
.e68b	0a		asl a				asl 	a 							; double lower keyword byte, clears bit 7.
.e68c	8d 6f 20	sta $206f			sta 	Temp1+1 					; this is the low byte into the KVT
.e68f	8a		txa				txa
.e690	a9 e0		lda #$e0			lda 	#KeywordVectorTable >> 8 	; set high byte of KVT
.e692	8d 70 20	sta $2070			sta 	Temp1+2
.e695	a9 6c		lda #$6c			lda 	#$6C 						; make it jump indirect
.e697	8d 6e 20	sta $206e			sta 	Temp1+0
.e69a	a9 00		lda #$00			lda 	#0 							; reset the string buffer position
.e69c	8d 73 20	sta $2073			sta 	StringBufferPos
.e69f	20 6e 20	jsr $206e			jsr 	Temp1 						; call instruction
.e6a2	80 cc		bra $e670			bra 	CRUNNextInstruction 		; do next instruction.
.e6a4					COMMAND_Stop:
.e6a4	20 72 e7	jsr $e772			jsr 	ReportError
>e6a7	53 74 6f 70 00					.text 	"Stop",$00
.e6ac					COMMAND_End:
>e6ac	02						.byte 	2
.e6ad	4c 67 e7	jmp $e767			jmp 	WarmStart

;******  Return to file: basic.asm


;******  Processing file: commands/miscellany.asm

.e6b0					COMMAND_Assert:
.e6b0	20 75 e1	jsr $e175			jsr 	EvaluateBase 				; evaluate the expression
.e6b3	bd 00 04	lda $0400,x			lda 	evalStack+0,x 				; check non zero
.e6b6	1d 01 04	ora $0401,x			ora 	evalStack+1,x
.e6b9	1d 02 04	ora $0402,x			ora 	evalStack+2,x
.e6bc	1d 03 04	ora $0403,x			ora 	evalStack+3,x
.e6bf	d0 12		bne $e6d3			bne 	_CMDAExit
.e6c1	ea		nop				nop
.e6c2	20 72 e7	jsr $e772			jsr 	ReportError
>e6c5	41 73 73 65 72 74 20 66				.text 	"Assert failed",$00
>e6cd	61 69 6c 65 64 00
.e6d3					_CMDAExit:
.e6d3	60		rts				rts
.e6d4					COMMAND_Rem:
.e6d4	b1 20		lda ($20),y			lda 	(zCurrentLine),y 			; get next character token.
.e6d6	f0 05		beq $e6dd			beq 	_CREMExit 					; End of line, then exit.
.e6d8	c8		iny				iny 								; something to skip
.e6d9	c9 8d		cmp #$8d			cmp 	#KW_COLON 					; if not a colon
.e6db	d0 f7		bne $e6d4			bne 	COMMAND_Rem 				; keep searching
.e6dd					_CREMExit:
.e6dd	60		rts				rts
.e6de					COMMAND_New:
.e6de	a9 00		lda #$00			lda 	#0 							; erase the actual program.
.e6e0	8d 00 22	sta $2200			sta 	BasicProgram 				; by zeroing the initial offset.
.e6e3	20 f1 e6	jsr $e6f1			jsr 	COMMAND_Clear 				; clear non fixed variable, reset stack and low mem pointer
.e6e6	a9 00		lda #$00			lda 	#endMemory & $FF 			; reset high memory pointer.
.e6e8	8d 6c 20	sta $206c			sta 	HighMemory
.e6eb	a9 80		lda #$80			lda 	#endMemory >> 8
.e6ed	8d 6d 20	sta $206d			sta 	HighMemory+1
.e6f0	60		rts				rts
.e6f1					COMMAND_Clear:
.e6f1	a2 00		ldx #$00			ldx 	#0	 						; clear variables @A-Z
.e6f3					_CCClearVar:
.e6f3	a9 00		lda #$00			lda 	#$00
.e6f5	9d 00 20	sta $2000,x			sta 	FixedVariables,x
.e6f8	e8		inx				inx
.e6f9	e0 6c		cpx #$6c			cpx 	#27*4
.e6fb	10 f6		bpl $e6f3			bpl 	_CCClearVar
.e6fd	a9 00		lda #$00			lda 	#basicStack & $FF 			; reset BASIC stack
.e6ff	85 22		sta $22				sta 	zBasicStack
.e701	a9 02		lda #$02			lda 	#basicStack >> 8
.e703	85 23		sta $23				sta 	zBasicStack+1
.e705	a9 00		lda #$00			lda 	#BasicProgram & $FF 		; now find where the program ends.
.e707	85 24		sta $24				sta 	zLowMemory
.e709	a9 22		lda #$22			lda 	#BasicProgram >> 8
.e70b	85 25		sta $25				sta 	zLowMemory+1
.e70d					_CCFindEnd:
.e70d	a0 00		ldy #$00			ldy 	#0 							; look at next offset
.e70f	b1 24		lda ($24),y			lda 	(zLowMemory),y 				; if zero, reached the end.
.e711	f0 0b		beq $e71e			beq 	_CCFoundEnd
.e713	18		clc				clc 								; go to next line.
.e714	65 24		adc $24				adc 	zLowMemory
.e716	85 24		sta $24				sta 	zLowMemory
.e718	90 f3		bcc $e70d			bcc 	_CCFindEnd
.e71a	e6 25		inc $25				inc 	zLowMemory+1
.e71c	80 ef		bra $e70d			bra 	_CCFindEnd
.e71e					_CCFoundEnd:
.e71e	e6 24		inc $24				inc 	zLowMemory 					; variables etc. start after end of program.
.e720	d0 02		bne $e724			bne 	_CCNoCarry 					; skip over zero end offset.
.e722	e6 25		inc $25				inc 	zLowMemory+1
.e724					_CCNoCarry:
.e724	60		rts				rts
.e725					COMMAND_Old:
.e725	a9 00		lda #$00			lda 	#BasicProgram & $FF 		; point zLowMemory to the first line.
.e727	85 24		sta $24				sta 	zLowMemory
.e729	a9 22		lda #$22			lda 	#BasicProgram >> 8
.e72b	85 25		sta $25				sta 	zLowMemory+1
.e72d	a0 03		ldy #$03			ldy 	#3 							; look for the $00 end of line marker.
.e72f					_COScan:
.e72f	b1 24		lda ($24),y			lda 	(zLowMemory),y 				; look at next byte pair
.e731	c8		iny				iny
.e732	f0 0d		beq $e741			beq 	_COFail 					; can't find marker, corrupted maybe ?
.e734	c9 00		cmp #$00			cmp 	#0 							; until $00 found.
.e736	d0 f7		bne $e72f			bne 	_COScan
.e738	98		tya				tya 								; Y is the new offset to the next instruction
.e739	a0 00		ldy #$00			ldy 	#0 							; overwrite the old one
.e73b	91 24		sta ($24),y			sta 	(zLowMemory),y
.e73d	20 f1 e6	jsr $e6f1			jsr 	COMMAND_Clear 				; reset variables, stacks and pointers.
.e740	60		rts				rts
.e741					_COFail:
.e741	20 72 e7	jsr $e772			jsr 	ReportError
>e744	43 61 6e 6e 6f 74 20 72				.text 	"Cannot recover program",$00
>e74c	65 63 6f 76 65 72 20 70 72 6f 67 72 61 6d 00

;******  Return to file: basic.asm

.e75b					Start:
.e75b	20 7f a0	jsr $a07f			jsr 	IOInitialise 				; set up porting stuff.
.e75e	a2 ff		ldx #$ff		ldx 	#$FF 							; reset 6502 stack.
.e760	9a		txs			txs
.e761	20 de e6	jsr $e6de			jsr 	COMMAND_New 				; do a new
.e764	20 25 e7	jsr $e725			jsr 	COMMAND_Old 				; get back the old program as we're deving.
.e767					WarmStart:
.e767	a2 ff		ldx #$ff		ldx 	#$FF 							; reset 6502 stack.
.e769	9a		txs			txs
.e76a	4c 5d e6	jmp $e65d			jmp 	COMMAND_Run 				; RUN current program.
.e76d					SyntaxError:
.e76d	a9 01		lda #$01			lda 	#1
.e76f	ea		nop				nop
.e770	80 fb		bra $e76d			bra 	SyntaxError
.e772					ReportError:
.e772	a9 02		lda #$02			lda 	#2
.e774	ea		nop				nop
.e775	80 fb		bra $e772			bra 	ReportError

;******  Processing file: include/basic_generated.inc

>2200	20 01 00 97 20 33 37 36			.byte $20,$01,$00,$97,$20,$33,$37,$36,$33,$35,$34,$37,$31,$8a,$33,$37,$36,$33,$35,$34,$37,$31,$92,$37,$35,$32,$37,$30,$39,$34,$32,$00,$19,$02,$00,$97,$20,$33,$37,$36,$33,$35,$34,$37,$31,$8c,$33,$37,$36,$33,$35,$34,$37,$31,$92,$31,$00,$19,$03,$00,$97,$20,$33,$37,$36,$33,$35,$34,$37,$31,$84,$33,$37,$36,$33,$35,$34,$37,$31,$92,$30,$00,$22,$04,$00,$97,$20,$87,$33,$37,$36,$33,$35,$34,$37,$31,$85,$33,$37,$36,$33,$35,$34,$37,$31,$88,$92,$33,$37,$36,$33,$35,$34,$37,$31,$00,$1b,$05,$00,$97,$20,$87,$33,$37,$36,$33,$35,$34,$37,$31,$96,$33,$37,$36,$33,$35,$34,$37,$31,$88,$92,$30,$00,$22,$06,$00,$97,$20,$87,$33,$37,$36,$33,$35,$34,$37,$31,$b2,$33,$37,$36,$33,$35,$34,$37,$31,$88,$92,$33,$37,$36,$33,$35,$34,$37,$31,$00,$23,$07,$00,$97,$20,$87,$33,$37,$36,$33,$35,$34,$37,$31,$92,$33,$37,$36,$33,$35,$34,$37,$31,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1b,$08,$00,$97,$20,$87,$33,$37,$36,$33,$35,$34,$37,$31,$90,$33,$37,$36,$33,$35,$34,$37,$31,$88,$92,$30,$00,$1b,$09,$00,$97,$20,$87,$33,$37,$36,$33,$35,$34,$37,$31,$91,$33,$37,$36,$33,$35,$34,$37,$31,$88,$92,$30,$00,$23,$0a,$00,$97,$20,$87,$33,$37,$36,$33,$35,$34,$37,$31,$8f,$33,$37,$36,$33,$35,$34,$37,$31,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1b,$0b,$00,$97,$20,$87,$33,$37,$36,$33,$35,$34,$37,$31,$94,$33,$37,$36,$33,$35,$34,$37,$31,$88,$92,$30,$00,$23,$0c,$00,$97,$20,$87,$33,$37,$36,$33,$35,$34,$37,$31,$93,$33,$37,$36,$33,$35,$34,$37,$31,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$22,$0d,$00,$97,$20,$37,$34,$31,$33,$33,$33,$39,$32,$35,$8a,$35,$36,$33,$38,$32,$37,$33,$37,$92,$37,$39,$37,$37,$31,$36,$36,$36,$32,$00,$22,$0e,$00,$97,$20,$37,$34,$31,$33,$33,$33,$39,$32,$35,$8b,$35,$36,$33,$38,$32,$37,$33,$37,$92,$36,$38,$34,$39,$35,$31,$31,$38,$38,$00,$1b,$0f,$00,$97,$20,$37,$34,$31,$33,$33,$33,$39,$32,$35,$8c,$35,$36,$33,$38,$32,$37,$33,$37,$92,$31,$33,$00,$20,$10,$00,$97,$20,$37,$34,$31,$33,$33,$33,$39,$32,$35,$84,$35,$36,$33,$38,$32,$37,$33,$37,$92,$38,$33,$35,$38,$33,$34,$34,$00,$21,$11,$00,$97,$20,$87,$37,$34,$31,$33,$33,$33,$39,$32,$35,$85,$35,$36,$33,$38,$32,$37,$33,$37,$88,$92,$38,$30,$37,$31,$36,$39,$00,$24,$12,$00,$97,$20,$87,$37,$34,$31,$33,$33,$33,$39,$32,$35,$96,$35,$36,$33,$38,$32,$37,$33,$37,$88,$92,$37,$39,$36,$31,$30,$32,$33,$32,$34,$00,$24,$13,$00,$97,$20,$87,$37,$34,$31,$33,$33,$33,$39,$32,$35,$b2,$35,$36,$33,$38,$32,$37,$33,$37,$88,$92,$37,$39,$36,$39,$30,$39,$34,$39,$33,$00,$1c,$14,$00,$97,$20,$87,$37,$34,$31,$33,$33,$33,$39,$32,$35,$92,$35,$36,$33,$38,$32,$37,$33,$37,$88,$92,$30,$00,$24,$15,$00,$97,$20,$87,$37,$34,$31,$33,$33,$33,$39,$32,$35,$90,$35,$36,$33,$38,$32,$37,$33,$37,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1c,$16,$00,$97,$20,$87,$37,$34,$31,$33,$33,$33,$39,$32,$35,$91,$35,$36,$33,$38,$32,$37,$33,$37,$88,$92,$30,$00,$1c,$17,$00,$97,$20,$87,$37,$34,$31,$33,$33,$33,$39,$32,$35,$8f,$35,$36,$33,$38,$32,$37,$33,$37,$88,$92,$30,$00,$24,$18,$00,$97,$20,$87,$37,$34,$31,$33,$33,$33,$39,$32,$35,$94,$35,$36,$33,$38,$32,$37,$33,$37,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$24,$19,$00,$97,$20,$87,$37,$34,$31,$33,$33,$33,$39,$32,$35,$93,$35,$36,$33,$38,$32,$37,$33,$37,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$0c,$1a,$00,$97,$20,$35,$8a,$35,$92,$31,$30,$00,$0c,$1b,$00,$97,$20,$35,$89,$35,$92,$32,$35,$00,$0b,$1c,$00,$97,$20,$35,$8c,$35,$92,$31,$00,$0b,$1d,$00,$97,$20,$35,$84,$35,$92,$30,$00,$0d,$1e,$00,$97,$20,$87,$35,$85,$35,$88,$92,$35,$00,$0d,$1f,$00,$97,$20,$87,$35,$96,$35,$88,$92,$30,$00,$0d,$20,$00,$97,$20,$87,$35,$b2,$35,$88,$92,$35,$00,$15,$21,$00,$97,$20,$87,$35,$92,$35,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$0d,$22,$00,$97,$20,$87,$35,$90,$35,$88,$92,$30,$00,$0d,$23,$00,$97,$20,$87,$35,$91,$35,$88,$92,$30,$00,$15,$24,$00,$97,$20,$87,$35,$8f,$35,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$0d,$25,$00,$97,$20,$87,$35,$94,$35,$88,$92,$30,$00,$15,$26,$00,$97,$20,$87,$35,$93,$35,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1b,$27,$00,$97,$20,$32,$32,$38,$36,$32,$38,$32,$35,$8a,$39,$38,$39,$92,$32,$32,$38,$36,$33,$38,$31,$34,$00,$1b,$28,$00,$97,$20,$32,$32,$38,$36,$32,$38,$32,$35,$8b,$39,$38,$39,$92,$32,$32,$38,$36,$31,$38,$33,$36,$00,$18,$29,$00,$97,$20,$32,$32,$38,$36,$32,$38,$32,$35,$8c,$39,$38,$39,$92,$32,$33,$31,$31,$37,$00,$16,$2a,$00,$97,$20,$32,$32,$38,$36,$32,$38,$32,$35,$84,$39,$38,$39,$92,$31,$31,$32,$00,$18,$2b,$00,$97,$20,$87,$32,$32,$38,$36,$32,$38,$32,$35,$85,$39,$38,$39,$88,$92,$39,$36,$39,$00,$1d,$2c,$00,$97,$20,$87,$32,$32,$38,$36,$32,$38,$32,$35,$96,$39,$38,$39,$88,$92,$32,$32,$38,$36,$31,$38,$37,$36,$00,$1d,$2d,$00,$97,$20,$87,$32,$32,$38,$36,$32,$38,$32,$35,$b2,$39,$38,$39,$88,$92,$32,$32,$38,$36,$32,$38,$34,$35,$00,$16,$2e,$00,$97,$20,$87,$32,$32,$38,$36,$32,$38,$32,$35,$92,$39,$38,$39,$88,$92,$30,$00,$1e,$2f,$00,$97,$20,$87,$32,$32,$38,$36,$32,$38,$32,$35,$90,$39,$38,$39,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$16,$30,$00,$97,$20,$87,$32,$32,$38,$36,$32,$38,$32,$35,$91,$39,$38,$39,$88,$92,$30,$00,$16,$31,$00,$97,$20,$87,$32,$32,$38,$36,$32,$38,$32,$35,$8f,$39,$38,$39,$88,$92,$30,$00,$1e,$32,$00,$97,$20,$87,$32,$32,$38,$36,$32,$38,$32,$35,$94,$39,$38,$39,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1e,$33,$00,$97,$20,$87,$32,$32,$38,$36,$32,$38,$32,$35,$93,$39,$38,$39,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$34,$00,$97,$20,$31,$30,$31,$34,$32,$37,$30,$30,$32,$38,$8a,$33,$92,$31,$30,$31,$34,$32,$37,$30,$30,$33,$31,$00,$1d,$35,$00,$97,$20,$31,$30,$31,$34,$32,$37,$30,$30,$32,$38,$8b,$33,$92,$31,$30,$31,$34,$32,$37,$30,$30,$32,$35,$00,$1c,$36,$00,$97,$20,$31,$30,$31,$34,$32,$37,$30,$30,$32,$38,$8c,$33,$92,$33,$33,$38,$30,$39,$30,$30,$30,$39,$00,$14,$37,$00,$97,$20,$31,$30,$31,$34,$32,$37,$30,$30,$32,$38,$84,$33,$92,$31,$00,$16,$38,$00,$97,$20,$87,$31,$30,$31,$34,$32,$37,$30,$30,$32,$38,$85,$33,$88,$92,$30,$00,$1f,$39,$00,$97,$20,$87,$31,$30,$31,$34,$32,$37,$30,$30,$32,$38,$96,$33,$88,$92,$31,$30,$31,$34,$32,$37,$30,$30,$33,$31,$00,$1f,$3a,$00,$97,$20,$87,$31,$30,$31,$34,$32,$37,$30,$30,$32,$38,$b2,$33,$88,$92,$31,$30,$31,$34,$32,$37,$30,$30,$33,$31,$00,$16,$3b,$00,$97,$20,$87,$31,$30,$31,$34,$32,$37,$30,$30,$32,$38,$92,$33,$88,$92,$30,$00,$1e,$3c,$00,$97,$20,$87,$31,$30,$31,$34,$32,$37,$30,$30,$32,$38,$90,$33,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$16,$3d,$00,$97,$20,$87,$31,$30,$31,$34,$32,$37,$30,$30,$32,$38,$91,$33,$88,$92,$30,$00,$16,$3e,$00,$97,$20,$87,$31,$30,$31,$34,$32,$37,$30,$30,$32,$38,$8f,$33,$88,$92,$30,$00,$1e,$3f,$00,$97,$20,$87,$31,$30,$31,$34,$32,$37,$30,$30,$32,$38,$94,$33,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1e,$40,$00,$97,$20,$87,$31,$30,$31,$34,$32,$37,$30,$30,$32,$38,$93,$33,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$41,$00,$97,$20,$36,$33,$37,$8a,$39,$30,$33,$36,$37,$30,$36,$34,$32,$92,$39,$30,$33,$36,$37,$31,$32,$37,$39,$00,$15,$42,$00,$97,$20,$36,$33,$37,$8c,$39,$30,$33,$36,$37,$30,$36,$34,$32,$92,$30,$00,$17,$43,$00,$97,$20,$36,$33,$37,$84,$39,$30,$33,$36,$37,$30,$36,$34,$32,$92,$36,$33,$37,$00,$19,$44,$00,$97,$20,$87,$36,$33,$37,$85,$39,$30,$33,$36,$37,$30,$36,$34,$32,$88,$92,$36,$32,$34,$00,$1f,$45,$00,$97,$20,$87,$36,$33,$37,$96,$39,$30,$33,$36,$37,$30,$36,$34,$32,$88,$92,$39,$30,$33,$36,$37,$30,$30,$33,$31,$00,$1f,$46,$00,$97,$20,$87,$36,$33,$37,$b2,$39,$30,$33,$36,$37,$30,$36,$34,$32,$88,$92,$39,$30,$33,$36,$37,$30,$36,$35,$35,$00,$17,$47,$00,$97,$20,$87,$36,$33,$37,$92,$39,$30,$33,$36,$37,$30,$36,$34,$32,$88,$92,$30,$00,$1f,$48,$00,$97,$20,$87,$36,$33,$37,$90,$39,$30,$33,$36,$37,$30,$36,$34,$32,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1f,$49,$00,$97,$20,$87,$36,$33,$37,$91,$39,$30,$33,$36,$37,$30,$36,$34,$32,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1f,$4a,$00,$97,$20,$87,$36,$33,$37,$8f,$39,$30,$33,$36,$37,$30,$36,$34,$32,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$17,$4b,$00,$97,$20,$87,$36,$33,$37,$94,$39,$30,$33,$36,$37,$30,$36,$34,$32,$88,$92,$30,$00,$17,$4c,$00,$97,$20,$87,$36,$33,$37,$93,$39,$30,$33,$36,$37,$30,$36,$34,$32,$88,$92,$30,$00,$0b,$4d,$00,$97,$20,$34,$8a,$30,$92,$34,$00,$0b,$4e,$00,$97,$20,$34,$8b,$30,$92,$34,$00,$0b,$4f,$00,$97,$20,$34,$89,$30,$92,$30,$00,$0d,$50,$00,$97,$20,$87,$34,$85,$30,$88,$92,$30,$00,$0d,$51,$00,$97,$20,$87,$34,$96,$30,$88,$92,$34,$00,$0d,$52,$00,$97,$20,$87,$34,$b2,$30,$88,$92,$34,$00,$0d,$53,$00,$97,$20,$87,$34,$92,$30,$88,$92,$30,$00,$15,$54,$00,$97,$20,$87,$34,$90,$30,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$0d,$55,$00,$97,$20,$87,$34,$91,$30,$88,$92,$30,$00,$0d,$56,$00,$97,$20,$87,$34,$8f,$30,$88,$92,$30,$00,$15,$57,$00,$97,$20,$87,$34,$94,$30,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$15,$58,$00,$97,$20,$87,$34,$93,$30,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$0f,$59,$00,$97,$20,$30,$8a,$34,$32,$38,$92,$34,$32,$38,$00,$0d,$5a,$00,$97,$20,$30,$89,$34,$32,$38,$92,$30,$00,$0d,$5b,$00,$97,$20,$30,$8c,$34,$32,$38,$92,$30,$00,$0d,$5c,$00,$97,$20,$30,$84,$34,$32,$38,$92,$30,$00,$0f,$5d,$00,$97,$20,$87,$30,$85,$34,$32,$38,$88,$92,$30,$00,$11,$5e,$00,$97,$20,$87,$30,$96,$34,$32,$38,$88,$92,$34,$32,$38,$00,$11,$5f,$00,$97,$20,$87,$30,$b2,$34,$32,$38,$88,$92,$34,$32,$38,$00,$0f,$60,$00,$97,$20,$87,$30,$92,$34,$32,$38,$88,$92,$30,$00,$17,$61,$00,$97,$20,$87,$30,$90,$34,$32,$38,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$17,$62,$00,$97,$20,$87,$30,$91,$34,$32,$38,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$17,$63,$00,$97,$20,$87,$30,$8f,$34,$32,$38,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$0f,$64,$00,$97,$20,$87,$30,$94,$34,$32,$38,$88,$92,$30,$00,$0f,$65,$00,$97,$20,$87,$30,$93,$34,$32,$38,$88,$92,$30,$00,$1b,$66,$00,$97,$20,$31,$8a,$32,$32,$31,$39,$33,$34,$31,$30,$31,$92,$32,$32,$31,$39,$33,$34,$31,$30,$32,$00,$1b,$67,$00,$97,$20,$31,$89,$32,$32,$31,$39,$33,$34,$31,$30,$31,$92,$32,$32,$31,$39,$33,$34,$31,$30,$31,$00,$13,$68,$00,$97,$20,$31,$8c,$32,$32,$31,$39,$33,$34,$31,$30,$31,$92,$30,$00,$13,$69,$00,$97,$20,$31,$84,$32,$32,$31,$39,$33,$34,$31,$30,$31,$92,$31,$00,$15,$6a,$00,$97,$20,$87,$31,$85,$32,$32,$31,$39,$33,$34,$31,$30,$31,$88,$92,$31,$00,$1d,$6b,$00,$97,$20,$87,$31,$96,$32,$32,$31,$39,$33,$34,$31,$30,$31,$88,$92,$32,$32,$31,$39,$33,$34,$31,$30,$30,$00,$1d,$6c,$00,$97,$20,$87,$31,$b2,$32,$32,$31,$39,$33,$34,$31,$30,$31,$88,$92,$32,$32,$31,$39,$33,$34,$31,$30,$31,$00,$15,$6d,$00,$97,$20,$87,$31,$92,$32,$32,$31,$39,$33,$34,$31,$30,$31,$88,$92,$30,$00,$1d,$6e,$00,$97,$20,$87,$31,$90,$32,$32,$31,$39,$33,$34,$31,$30,$31,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$6f,$00,$97,$20,$87,$31,$91,$32,$32,$31,$39,$33,$34,$31,$30,$31,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$70,$00,$97,$20,$87,$31,$8f,$32,$32,$31,$39,$33,$34,$31,$30,$31,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$15,$71,$00,$97,$20,$87,$31,$94,$32,$32,$31,$39,$33,$34,$31,$30,$31,$88,$92,$30,$00,$15,$72,$00,$97,$20,$87,$31,$93,$32,$32,$31,$39,$33,$34,$31,$30,$31,$88,$92,$30,$00,$1d,$73,$00,$97,$20,$37,$35,$35,$8a,$35,$35,$30,$39,$31,$37,$34,$33,$37,$92,$35,$35,$30,$39,$31,$38,$31,$39,$32,$00,$15,$74,$00,$97,$20,$37,$35,$35,$8c,$35,$35,$30,$39,$31,$37,$34,$33,$37,$92,$30,$00,$17,$75,$00,$97,$20,$37,$35,$35,$84,$35,$35,$30,$39,$31,$37,$34,$33,$37,$92,$37,$35,$35,$00,$18,$76,$00,$97,$20,$87,$37,$35,$35,$85,$35,$35,$30,$39,$31,$37,$34,$33,$37,$88,$92,$34,$39,$00,$1f,$77,$00,$97,$20,$87,$37,$35,$35,$96,$35,$35,$30,$39,$31,$37,$34,$33,$37,$88,$92,$35,$35,$30,$39,$31,$38,$30,$39,$34,$00,$1f,$78,$00,$97,$20,$87,$37,$35,$35,$b2,$35,$35,$30,$39,$31,$37,$34,$33,$37,$88,$92,$35,$35,$30,$39,$31,$38,$31,$34,$33,$00,$17,$79,$00,$97,$20,$87,$37,$35,$35,$92,$35,$35,$30,$39,$31,$37,$34,$33,$37,$88,$92,$30,$00,$1f,$7a,$00,$97,$20,$87,$37,$35,$35,$90,$35,$35,$30,$39,$31,$37,$34,$33,$37,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1f,$7b,$00,$97,$20,$87,$37,$35,$35,$91,$35,$35,$30,$39,$31,$37,$34,$33,$37,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1f,$7c,$00,$97,$20,$87,$37,$35,$35,$8f,$35,$35,$30,$39,$31,$37,$34,$33,$37,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$17,$7d,$00,$97,$20,$87,$37,$35,$35,$94,$35,$35,$30,$39,$31,$37,$34,$33,$37,$88,$92,$30,$00,$17,$7e,$00,$97,$20,$87,$37,$35,$35,$93,$35,$35,$30,$39,$31,$37,$34,$33,$37,$88,$92,$30,$00,$23,$7f,$00,$97,$20,$36,$37,$36,$39,$33,$30,$34,$39,$34,$8a,$32,$38,$33,$31,$34,$34,$33,$32,$32,$92,$39,$36,$30,$30,$37,$34,$38,$31,$36,$00,$23,$80,$00,$97,$20,$36,$37,$36,$39,$33,$30,$34,$39,$34,$8b,$32,$38,$33,$31,$34,$34,$33,$32,$32,$92,$33,$39,$33,$37,$38,$36,$31,$37,$32,$00,$1b,$81,$00,$97,$20,$36,$37,$36,$39,$33,$30,$34,$39,$34,$8c,$32,$38,$33,$31,$34,$34,$33,$32,$32,$92,$32,$00,$23,$82,$00,$97,$20,$36,$37,$36,$39,$33,$30,$34,$39,$34,$84,$32,$38,$33,$31,$34,$34,$33,$32,$32,$92,$31,$31,$30,$36,$34,$31,$38,$35,$30,$00,$23,$83,$00,$97,$20,$87,$36,$37,$36,$39,$33,$30,$34,$39,$34,$85,$32,$38,$33,$31,$34,$34,$33,$32,$32,$88,$92,$34,$32,$30,$32,$36,$32,$36,$00,$25,$84,$00,$97,$20,$87,$36,$37,$36,$39,$33,$30,$34,$39,$34,$96,$32,$38,$33,$31,$34,$34,$33,$32,$32,$88,$92,$39,$35,$31,$36,$36,$39,$35,$36,$34,$00,$25,$85,$00,$97,$20,$87,$36,$37,$36,$39,$33,$30,$34,$39,$34,$b2,$32,$38,$33,$31,$34,$34,$33,$32,$32,$88,$92,$39,$35,$35,$38,$37,$32,$31,$39,$30,$00,$1d,$86,$00,$97,$20,$87,$36,$37,$36,$39,$33,$30,$34,$39,$34,$92,$32,$38,$33,$31,$34,$34,$33,$32,$32,$88,$92,$30,$00,$25,$87,$00,$97,$20,$87,$36,$37,$36,$39,$33,$30,$34,$39,$34,$90,$32,$38,$33,$31,$34,$34,$33,$32,$32,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$88,$00,$97,$20,$87,$36,$37,$36,$39,$33,$30,$34,$39,$34,$91,$32,$38,$33,$31,$34,$34,$33,$32,$32,$88,$92,$30,$00,$1d,$89,$00,$97,$20,$87,$36,$37,$36,$39,$33,$30,$34,$39,$34,$8f,$32,$38,$33,$31,$34,$34,$33,$32,$32,$88,$92,$30,$00,$25,$8a,$00,$97,$20,$87,$36,$37,$36,$39,$33,$30,$34,$39,$34,$94,$32,$38,$33,$31,$34,$34,$33,$32,$32,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$25,$8b,$00,$97,$20,$87,$36,$37,$36,$39,$33,$30,$34,$39,$34,$93,$32,$38,$33,$31,$34,$34,$33,$32,$32,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$24,$8c,$00,$97,$20,$39,$35,$38,$39,$35,$32,$38,$30,$36,$8a,$31,$35,$39,$33,$33,$32,$33,$30,$33,$92,$31,$31,$31,$38,$32,$38,$35,$31,$30,$39,$00,$23,$8d,$00,$97,$20,$39,$35,$38,$39,$35,$32,$38,$30,$36,$8b,$31,$35,$39,$33,$33,$32,$33,$30,$33,$92,$37,$39,$39,$36,$32,$30,$35,$30,$33,$00,$1b,$8e,$00,$97,$20,$39,$35,$38,$39,$35,$32,$38,$30,$36,$8c,$31,$35,$39,$33,$33,$32,$33,$30,$33,$92,$36,$00,$21,$8f,$00,$97,$20,$39,$35,$38,$39,$35,$32,$38,$30,$36,$84,$31,$35,$39,$33,$33,$32,$33,$30,$33,$92,$32,$39,$35,$38,$39,$38,$38,$00,$25,$90,$00,$97,$20,$87,$39,$35,$38,$39,$35,$32,$38,$30,$36,$85,$31,$35,$39,$33,$33,$32,$33,$30,$33,$88,$92,$31,$35,$33,$36,$33,$30,$30,$32,$32,$00,$25,$91,$00,$97,$20,$87,$39,$35,$38,$39,$35,$32,$38,$30,$36,$96,$31,$35,$39,$33,$33,$32,$33,$30,$33,$88,$92,$38,$31,$31,$30,$32,$35,$30,$36,$35,$00,$25,$92,$00,$97,$20,$87,$39,$35,$38,$39,$35,$32,$38,$30,$36,$b2,$31,$35,$39,$33,$33,$32,$33,$30,$33,$88,$92,$39,$36,$34,$36,$35,$35,$30,$38,$37,$00,$1d,$93,$00,$97,$20,$87,$39,$35,$38,$39,$35,$32,$38,$30,$36,$92,$31,$35,$39,$33,$33,$32,$33,$30,$33,$88,$92,$30,$00,$25,$94,$00,$97,$20,$87,$39,$35,$38,$39,$35,$32,$38,$30,$36,$90,$31,$35,$39,$33,$33,$32,$33,$30,$33,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$95,$00,$97,$20,$87,$39,$35,$38,$39,$35,$32,$38,$30,$36,$91,$31,$35,$39,$33,$33,$32,$33,$30,$33,$88,$92,$30,$00,$1d,$96,$00,$97,$20,$87,$39,$35,$38,$39,$35,$32,$38,$30,$36,$8f,$31,$35,$39,$33,$33,$32,$33,$30,$33,$88,$92,$30,$00,$25,$97,$00,$97,$20,$87,$39,$35,$38,$39,$35,$32,$38,$30,$36,$94,$31,$35,$39,$33,$33,$32,$33,$30,$33,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$25,$98,$00,$97,$20,$87,$39,$35,$38,$39,$35,$32,$38,$30,$36,$93,$31,$35,$39,$33,$33,$32,$33,$30,$33,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$24,$99,$00,$97,$20,$37,$39,$32,$34,$31,$30,$35,$37,$38,$8a,$38,$34,$35,$32,$39,$32,$31,$33,$39,$92,$31,$36,$33,$37,$37,$30,$32,$37,$31,$37,$00,$1b,$9a,$00,$97,$20,$37,$39,$32,$34,$31,$30,$35,$37,$38,$8c,$38,$34,$35,$32,$39,$32,$31,$33,$39,$92,$30,$00,$23,$9b,$00,$97,$20,$37,$39,$32,$34,$31,$30,$35,$37,$38,$84,$38,$34,$35,$32,$39,$32,$31,$33,$39,$92,$37,$39,$32,$34,$31,$30,$35,$37,$38,$00,$25,$9c,$00,$97,$20,$87,$37,$39,$32,$34,$31,$30,$35,$37,$38,$85,$38,$34,$35,$32,$39,$32,$31,$33,$39,$88,$92,$35,$37,$32,$36,$36,$31,$38,$32,$36,$00,$25,$9d,$00,$97,$20,$87,$37,$39,$32,$34,$31,$30,$35,$37,$38,$96,$38,$34,$35,$32,$39,$32,$31,$33,$39,$88,$92,$34,$39,$32,$33,$37,$39,$30,$36,$35,$00,$26,$9e,$00,$97,$20,$87,$37,$39,$32,$34,$31,$30,$35,$37,$38,$b2,$38,$34,$35,$32,$39,$32,$31,$33,$39,$88,$92,$31,$30,$36,$35,$30,$34,$30,$38,$39,$31,$00,$1d,$9f,$00,$97,$20,$87,$37,$39,$32,$34,$31,$30,$35,$37,$38,$92,$38,$34,$35,$32,$39,$32,$31,$33,$39,$88,$92,$30,$00,$25,$a0,$00,$97,$20,$87,$37,$39,$32,$34,$31,$30,$35,$37,$38,$90,$38,$34,$35,$32,$39,$32,$31,$33,$39,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$25,$a1,$00,$97,$20,$87,$37,$39,$32,$34,$31,$30,$35,$37,$38,$91,$38,$34,$35,$32,$39,$32,$31,$33,$39,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$25,$a2,$00,$97,$20,$87,$37,$39,$32,$34,$31,$30,$35,$37,$38,$8f,$38,$34,$35,$32,$39,$32,$31,$33,$39,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$a3,$00,$97,$20,$87,$37,$39,$32,$34,$31,$30,$35,$37,$38,$94,$38,$34,$35,$32,$39,$32,$31,$33,$39,$88,$92,$30,$00,$1d,$a4,$00,$97,$20,$87,$37,$39,$32,$34,$31,$30,$35,$37,$38,$93,$38,$34,$35,$32,$39,$32,$31,$33,$39,$88,$92,$30,$00,$1b,$a5,$00,$97,$20,$30,$8a,$38,$31,$34,$35,$37,$39,$31,$34,$34,$92,$38,$31,$34,$35,$37,$39,$31,$34,$34,$00,$13,$a6,$00,$97,$20,$30,$89,$38,$31,$34,$35,$37,$39,$31,$34,$34,$92,$30,$00,$13,$a7,$00,$97,$20,$30,$8c,$38,$31,$34,$35,$37,$39,$31,$34,$34,$92,$30,$00,$13,$a8,$00,$97,$20,$30,$84,$38,$31,$34,$35,$37,$39,$31,$34,$34,$92,$30,$00,$15,$a9,$00,$97,$20,$87,$30,$85,$38,$31,$34,$35,$37,$39,$31,$34,$34,$88,$92,$30,$00,$1d,$aa,$00,$97,$20,$87,$30,$96,$38,$31,$34,$35,$37,$39,$31,$34,$34,$88,$92,$38,$31,$34,$35,$37,$39,$31,$34,$34,$00,$1d,$ab,$00,$97,$20,$87,$30,$b2,$38,$31,$34,$35,$37,$39,$31,$34,$34,$88,$92,$38,$31,$34,$35,$37,$39,$31,$34,$34,$00,$15,$ac,$00,$97,$20,$87,$30,$92,$38,$31,$34,$35,$37,$39,$31,$34,$34,$88,$92,$30,$00,$1d,$ad,$00,$97,$20,$87,$30,$90,$38,$31,$34,$35,$37,$39,$31,$34,$34,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$ae,$00,$97,$20,$87,$30,$91,$38,$31,$34,$35,$37,$39,$31,$34,$34,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$af,$00,$97,$20,$87,$30,$8f,$38,$31,$34,$35,$37,$39,$31,$34,$34,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$15,$b0,$00,$97,$20,$87,$30,$94,$38,$31,$34,$35,$37,$39,$31,$34,$34,$88,$92,$30,$00,$15,$b1,$00,$97,$20,$87,$30,$93,$38,$31,$34,$35,$37,$39,$31,$34,$34,$88,$92,$30,$00,$1b,$b2,$00,$97,$20,$38,$34,$32,$36,$38,$36,$39,$30,$35,$8a,$31,$92,$38,$34,$32,$36,$38,$36,$39,$30,$36,$00,$1b,$b3,$00,$97,$20,$38,$34,$32,$36,$38,$36,$39,$30,$35,$8b,$31,$92,$38,$34,$32,$36,$38,$36,$39,$30,$34,$00,$1b,$b4,$00,$97,$20,$38,$34,$32,$36,$38,$36,$39,$30,$35,$89,$31,$92,$38,$34,$32,$36,$38,$36,$39,$30,$35,$00,$1b,$b5,$00,$97,$20,$38,$34,$32,$36,$38,$36,$39,$30,$35,$8c,$31,$92,$38,$34,$32,$36,$38,$36,$39,$30,$35,$00,$13,$b6,$00,$97,$20,$38,$34,$32,$36,$38,$36,$39,$30,$35,$84,$31,$92,$30,$00,$15,$b7,$00,$97,$20,$87,$38,$34,$32,$36,$38,$36,$39,$30,$35,$85,$31,$88,$92,$31,$00,$1d,$b8,$00,$97,$20,$87,$38,$34,$32,$36,$38,$36,$39,$30,$35,$96,$31,$88,$92,$38,$34,$32,$36,$38,$36,$39,$30,$34,$00,$1d,$b9,$00,$97,$20,$87,$38,$34,$32,$36,$38,$36,$39,$30,$35,$b2,$31,$88,$92,$38,$34,$32,$36,$38,$36,$39,$30,$35,$00,$15,$ba,$00,$97,$20,$87,$38,$34,$32,$36,$38,$36,$39,$30,$35,$92,$31,$88,$92,$30,$00,$1d,$bb,$00,$97,$20,$87,$38,$34,$32,$36,$38,$36,$39,$30,$35,$90,$31,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$15,$bc,$00,$97,$20,$87,$38,$34,$32,$36,$38,$36,$39,$30,$35,$91,$31,$88,$92,$30,$00,$15,$bd,$00,$97,$20,$87,$38,$34,$32,$36,$38,$36,$39,$30,$35,$8f,$31,$88,$92,$30,$00,$1d,$be,$00,$97,$20,$87,$38,$34,$32,$36,$38,$36,$39,$30,$35,$94,$31,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$bf,$00,$97,$20,$87,$38,$34,$32,$36,$38,$36,$39,$30,$35,$93,$31,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$24,$c0,$00,$97,$20,$38,$34,$37,$37,$32,$31,$33,$35,$38,$8a,$34,$32,$36,$35,$34,$31,$36,$38,$35,$92,$31,$32,$37,$34,$32,$36,$33,$30,$34,$33,$00,$23,$c1,$00,$97,$20,$38,$34,$37,$37,$32,$31,$33,$35,$38,$8b,$34,$32,$36,$35,$34,$31,$36,$38,$35,$92,$34,$32,$31,$31,$37,$39,$36,$37,$33,$00,$1b,$c2,$00,$97,$20,$38,$34,$37,$37,$32,$31,$33,$35,$38,$8c,$34,$32,$36,$35,$34,$31,$36,$38,$35,$92,$31,$00,$23,$c3,$00,$97,$20,$38,$34,$37,$37,$32,$31,$33,$35,$38,$84,$34,$32,$36,$35,$34,$31,$36,$38,$35,$92,$34,$32,$31,$31,$37,$39,$36,$37,$33,$00,$25,$c4,$00,$97,$20,$87,$38,$34,$37,$37,$32,$31,$33,$35,$38,$85,$34,$32,$36,$35,$34,$31,$36,$38,$35,$88,$92,$32,$36,$38,$36,$39,$38,$31,$31,$36,$00,$25,$c5,$00,$97,$20,$87,$38,$34,$37,$37,$32,$31,$33,$35,$38,$96,$34,$32,$36,$35,$34,$31,$36,$38,$35,$88,$92,$37,$33,$36,$38,$36,$36,$38,$31,$31,$00,$26,$c6,$00,$97,$20,$87,$38,$34,$37,$37,$32,$31,$33,$35,$38,$b2,$34,$32,$36,$35,$34,$31,$36,$38,$35,$88,$92,$31,$30,$30,$35,$35,$36,$34,$39,$32,$37,$00,$1d,$c7,$00,$97,$20,$87,$38,$34,$37,$37,$32,$31,$33,$35,$38,$92,$34,$32,$36,$35,$34,$31,$36,$38,$35,$88,$92,$30,$00,$25,$c8,$00,$97,$20,$87,$38,$34,$37,$37,$32,$31,$33,$35,$38,$90,$34,$32,$36,$35,$34,$31,$36,$38,$35,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$c9,$00,$97,$20,$87,$38,$34,$37,$37,$32,$31,$33,$35,$38,$91,$34,$32,$36,$35,$34,$31,$36,$38,$35,$88,$92,$30,$00,$1d,$ca,$00,$97,$20,$87,$38,$34,$37,$37,$32,$31,$33,$35,$38,$8f,$34,$32,$36,$35,$34,$31,$36,$38,$35,$88,$92,$30,$00,$25,$cb,$00,$97,$20,$87,$38,$34,$37,$37,$32,$31,$33,$35,$38,$94,$34,$32,$36,$35,$34,$31,$36,$38,$35,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$25,$cc,$00,$97,$20,$87,$38,$34,$37,$37,$32,$31,$33,$35,$38,$93,$34,$32,$36,$35,$34,$31,$36,$38,$35,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1b,$cd,$00,$97,$20,$39,$37,$30,$39,$31,$35,$31,$39,$32,$8a,$34,$92,$39,$37,$30,$39,$31,$35,$31,$39,$36,$00,$1b,$ce,$00,$97,$20,$39,$37,$30,$39,$31,$35,$31,$39,$32,$8b,$34,$92,$39,$37,$30,$39,$31,$35,$31,$38,$38,$00,$1b,$cf,$00,$97,$20,$39,$37,$30,$39,$31,$35,$31,$39,$32,$8c,$34,$92,$32,$34,$32,$37,$32,$38,$37,$39,$38,$00,$13,$d0,$00,$97,$20,$39,$37,$30,$39,$31,$35,$31,$39,$32,$84,$34,$92,$30,$00,$15,$d1,$00,$97,$20,$87,$39,$37,$30,$39,$31,$35,$31,$39,$32,$85,$34,$88,$92,$30,$00,$1d,$d2,$00,$97,$20,$87,$39,$37,$30,$39,$31,$35,$31,$39,$32,$96,$34,$88,$92,$39,$37,$30,$39,$31,$35,$31,$39,$36,$00,$1d,$d3,$00,$97,$20,$87,$39,$37,$30,$39,$31,$35,$31,$39,$32,$b2,$34,$88,$92,$39,$37,$30,$39,$31,$35,$31,$39,$36,$00,$15,$d4,$00,$97,$20,$87,$39,$37,$30,$39,$31,$35,$31,$39,$32,$92,$34,$88,$92,$30,$00,$1d,$d5,$00,$97,$20,$87,$39,$37,$30,$39,$31,$35,$31,$39,$32,$90,$34,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$15,$d6,$00,$97,$20,$87,$39,$37,$30,$39,$31,$35,$31,$39,$32,$91,$34,$88,$92,$30,$00,$15,$d7,$00,$97,$20,$87,$39,$37,$30,$39,$31,$35,$31,$39,$32,$8f,$34,$88,$92,$30,$00,$1d,$d8,$00,$97,$20,$87,$39,$37,$30,$39,$31,$35,$31,$39,$32,$94,$34,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$d9,$00,$97,$20,$87,$39,$37,$30,$39,$31,$35,$31,$39,$32,$93,$34,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$24,$da,$00,$97,$20,$37,$34,$33,$33,$37,$32,$36,$39,$33,$8a,$37,$33,$30,$33,$30,$35,$36,$38,$37,$92,$31,$34,$37,$33,$36,$37,$38,$33,$38,$30,$00,$22,$db,$00,$97,$20,$37,$34,$33,$33,$37,$32,$36,$39,$33,$8b,$37,$33,$30,$33,$30,$35,$36,$38,$37,$92,$31,$33,$30,$36,$37,$30,$30,$36,$00,$1b,$dc,$00,$97,$20,$37,$34,$33,$33,$37,$32,$36,$39,$33,$8c,$37,$33,$30,$33,$30,$35,$36,$38,$37,$92,$31,$00,$22,$dd,$00,$97,$20,$37,$34,$33,$33,$37,$32,$36,$39,$33,$84,$37,$33,$30,$33,$30,$35,$36,$38,$37,$92,$31,$33,$30,$36,$37,$30,$30,$36,$00,$25,$de,$00,$97,$20,$87,$37,$34,$33,$33,$37,$32,$36,$39,$33,$85,$37,$33,$30,$33,$30,$35,$36,$38,$37,$88,$92,$36,$37,$31,$35,$31,$39,$38,$39,$33,$00,$25,$df,$00,$97,$20,$87,$37,$34,$33,$33,$37,$32,$36,$39,$33,$96,$37,$33,$30,$33,$30,$35,$36,$38,$37,$88,$92,$31,$33,$30,$36,$33,$38,$35,$39,$34,$00,$25,$e0,$00,$97,$20,$87,$37,$34,$33,$33,$37,$32,$36,$39,$33,$b2,$37,$33,$30,$33,$30,$35,$36,$38,$37,$88,$92,$38,$30,$32,$31,$35,$38,$34,$38,$37,$00,$1d,$e1,$00,$97,$20,$87,$37,$34,$33,$33,$37,$32,$36,$39,$33,$92,$37,$33,$30,$33,$30,$35,$36,$38,$37,$88,$92,$30,$00,$25,$e2,$00,$97,$20,$87,$37,$34,$33,$33,$37,$32,$36,$39,$33,$90,$37,$33,$30,$33,$30,$35,$36,$38,$37,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$e3,$00,$97,$20,$87,$37,$34,$33,$33,$37,$32,$36,$39,$33,$91,$37,$33,$30,$33,$30,$35,$36,$38,$37,$88,$92,$30,$00,$1d,$e4,$00,$97,$20,$87,$37,$34,$33,$33,$37,$32,$36,$39,$33,$8f,$37,$33,$30,$33,$30,$35,$36,$38,$37,$88,$92,$30,$00,$25,$e5,$00,$97,$20,$87,$37,$34,$33,$33,$37,$32,$36,$39,$33,$94,$37,$33,$30,$33,$30,$35,$36,$38,$37,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$25,$e6,$00,$97,$20,$87,$37,$34,$33,$33,$37,$32,$36,$39,$33,$93,$37,$33,$30,$33,$30,$35,$36,$38,$37,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$24,$e7,$00,$97,$20,$36,$36,$35,$34,$37,$33,$38,$33,$34,$8a,$38,$32,$31,$37,$37,$30,$33,$39,$35,$92,$31,$34,$38,$37,$32,$34,$34,$32,$32,$39,$00,$1b,$e8,$00,$97,$20,$36,$36,$35,$34,$37,$33,$38,$33,$34,$8c,$38,$32,$31,$37,$37,$30,$33,$39,$35,$92,$30,$00,$23,$e9,$00,$97,$20,$36,$36,$35,$34,$37,$33,$38,$33,$34,$84,$38,$32,$31,$37,$37,$30,$33,$39,$35,$92,$36,$36,$35,$34,$37,$33,$38,$33,$34,$00,$25,$ea,$00,$97,$20,$87,$36,$36,$35,$34,$37,$33,$38,$33,$34,$85,$38,$32,$31,$37,$37,$30,$33,$39,$35,$88,$92,$35,$34,$38,$30,$31,$36,$31,$33,$38,$00,$25,$eb,$00,$97,$20,$87,$36,$36,$35,$34,$37,$33,$38,$33,$34,$96,$38,$32,$31,$37,$37,$30,$33,$39,$35,$88,$92,$33,$39,$31,$32,$31,$31,$39,$35,$33,$00,$25,$ec,$00,$97,$20,$87,$36,$36,$35,$34,$37,$33,$38,$33,$34,$b2,$38,$32,$31,$37,$37,$30,$33,$39,$35,$88,$92,$39,$33,$39,$32,$32,$38,$30,$39,$31,$00,$1d,$ed,$00,$97,$20,$87,$36,$36,$35,$34,$37,$33,$38,$33,$34,$92,$38,$32,$31,$37,$37,$30,$33,$39,$35,$88,$92,$30,$00,$25,$ee,$00,$97,$20,$87,$36,$36,$35,$34,$37,$33,$38,$33,$34,$90,$38,$32,$31,$37,$37,$30,$33,$39,$35,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$25,$ef,$00,$97,$20,$87,$36,$36,$35,$34,$37,$33,$38,$33,$34,$91,$38,$32,$31,$37,$37,$30,$33,$39,$35,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$25,$f0,$00,$97,$20,$87,$36,$36,$35,$34,$37,$33,$38,$33,$34,$8f,$38,$32,$31,$37,$37,$30,$33,$39,$35,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$f1,$00,$97,$20,$87,$36,$36,$35,$34,$37,$33,$38,$33,$34,$94,$38,$32,$31,$37,$37,$30,$33,$39,$35,$88,$92,$30,$00,$1d,$f2,$00,$97,$20,$87,$36,$36,$35,$34,$37,$33,$38,$33,$34,$93,$38,$32,$31,$37,$37,$30,$33,$39,$35,$88,$92,$30,$00,$0f,$f3,$00,$97,$20,$35,$8a,$35,$35,$37,$92,$35,$36,$32,$00,$10,$f4,$00,$97,$20,$35,$89,$35,$35,$37,$92,$32,$37,$38,$35,$00,$0d,$f5,$00,$97,$20,$35,$8c,$35,$35,$37,$92,$30,$00,$0d,$f6,$00,$97,$20,$35,$84,$35,$35,$37,$92,$35,$00,$0f,$f7,$00,$97,$20,$87,$35,$85,$35,$35,$37,$88,$92,$35,$00,$11,$f8,$00,$97,$20,$87,$35,$96,$35,$35,$37,$88,$92,$35,$35,$32,$00,$11,$f9,$00,$97,$20,$87,$35,$b2,$35,$35,$37,$88,$92,$35,$35,$37,$00,$0f,$fa,$00,$97,$20,$87,$35,$92,$35,$35,$37,$88,$92,$30,$00,$17,$fb,$00,$97,$20,$87,$35,$90,$35,$35,$37,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$17,$fc,$00,$97,$20,$87,$35,$91,$35,$35,$37,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$17,$fd,$00,$97,$20,$87,$35,$8f,$35,$35,$37,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$0f,$fe,$00,$97,$20,$87,$35,$94,$35,$35,$37,$88,$92,$30,$00,$0f,$ff,$00,$97,$20,$87,$35,$93,$35,$35,$37,$88,$92,$30,$00,$24,$00,$01,$97,$20,$34,$39,$39,$31,$34,$31,$30,$30,$36,$8a,$38,$39,$30,$34,$39,$31,$33,$32,$38,$92,$31,$33,$38,$39,$36,$33,$32,$33,$33,$34,$00,$1b,$01,$01,$97,$20,$34,$39,$39,$31,$34,$31,$30,$30,$36,$8c,$38,$39,$30,$34,$39,$31,$33,$32,$38,$92,$30,$00,$23,$02,$01,$97,$20,$34,$39,$39,$31,$34,$31,$30,$30,$36,$84,$38,$39,$30,$34,$39,$31,$33,$32,$38,$92,$34,$39,$39,$31,$34,$31,$30,$30,$36,$00,$25,$03,$01,$97,$20,$87,$34,$39,$39,$31,$34,$31,$30,$30,$36,$85,$38,$39,$30,$34,$39,$31,$33,$32,$38,$88,$92,$33,$35,$32,$33,$33,$38,$33,$30,$34,$00,$25,$04,$01,$97,$20,$87,$34,$39,$39,$31,$34,$31,$30,$30,$36,$96,$38,$39,$30,$34,$39,$31,$33,$32,$38,$88,$92,$36,$38,$34,$39,$35,$35,$37,$32,$36,$00,$26,$05,$01,$97,$20,$87,$34,$39,$39,$31,$34,$31,$30,$30,$36,$b2,$38,$39,$30,$34,$39,$31,$33,$32,$38,$88,$92,$31,$30,$33,$37,$32,$39,$34,$30,$33,$30,$00,$1d,$06,$01,$97,$20,$87,$34,$39,$39,$31,$34,$31,$30,$30,$36,$92,$38,$39,$30,$34,$39,$31,$33,$32,$38,$88,$92,$30,$00,$25,$07,$01,$97,$20,$87,$34,$39,$39,$31,$34,$31,$30,$30,$36,$90,$38,$39,$30,$34,$39,$31,$33,$32,$38,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$25,$08,$01,$97,$20,$87,$34,$39,$39,$31,$34,$31,$30,$30,$36,$91,$38,$39,$30,$34,$39,$31,$33,$32,$38,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$25,$09,$01,$97,$20,$87,$34,$39,$39,$31,$34,$31,$30,$30,$36,$8f,$38,$39,$30,$34,$39,$31,$33,$32,$38,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$0a,$01,$97,$20,$87,$34,$39,$39,$31,$34,$31,$30,$30,$36,$94,$38,$39,$30,$34,$39,$31,$33,$32,$38,$88,$92,$30,$00,$1d,$0b,$01,$97,$20,$87,$34,$39,$39,$31,$34,$31,$30,$30,$36,$93,$38,$39,$30,$34,$39,$31,$33,$32,$38,$88,$92,$30,$00,$0f,$0c,$01,$97,$20,$35,$8a,$37,$38,$31,$92,$37,$38,$36,$00,$10,$0d,$01,$97,$20,$35,$89,$37,$38,$31,$92,$33,$39,$30,$35,$00,$0d,$0e,$01,$97,$20,$35,$8c,$37,$38,$31,$92,$30,$00,$0d,$0f,$01,$97,$20,$35,$84,$37,$38,$31,$92,$35,$00,$0f,$10,$01,$97,$20,$87,$35,$85,$37,$38,$31,$88,$92,$35,$00,$11,$11,$01,$97,$20,$87,$35,$96,$37,$38,$31,$88,$92,$37,$37,$36,$00,$11,$12,$01,$97,$20,$87,$35,$b2,$37,$38,$31,$88,$92,$37,$38,$31,$00,$0f,$13,$01,$97,$20,$87,$35,$92,$37,$38,$31,$88,$92,$30,$00,$17,$14,$01,$97,$20,$87,$35,$90,$37,$38,$31,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$17,$15,$01,$97,$20,$87,$35,$91,$37,$38,$31,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$17,$16,$01,$97,$20,$87,$35,$8f,$37,$38,$31,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$0f,$17,$01,$97,$20,$87,$35,$94,$37,$38,$31,$88,$92,$30,$00,$0f,$18,$01,$97,$20,$87,$35,$93,$37,$38,$31,$88,$92,$30,$00,$1b,$19,$01,$97,$20,$30,$8a,$38,$39,$39,$32,$33,$34,$30,$38,$38,$92,$38,$39,$39,$32,$33,$34,$30,$38,$38,$00,$13,$1a,$01,$97,$20,$30,$89,$38,$39,$39,$32,$33,$34,$30,$38,$38,$92,$30,$00,$13,$1b,$01,$97,$20,$30,$8c,$38,$39,$39,$32,$33,$34,$30,$38,$38,$92,$30,$00,$13,$1c,$01,$97,$20,$30,$84,$38,$39,$39,$32,$33,$34,$30,$38,$38,$92,$30,$00,$15,$1d,$01,$97,$20,$87,$30,$85,$38,$39,$39,$32,$33,$34,$30,$38,$38,$88,$92,$30,$00,$1d,$1e,$01,$97,$20,$87,$30,$96,$38,$39,$39,$32,$33,$34,$30,$38,$38,$88,$92,$38,$39,$39,$32,$33,$34,$30,$38,$38,$00,$1d,$1f,$01,$97,$20,$87,$30,$b2,$38,$39,$39,$32,$33,$34,$30,$38,$38,$88,$92,$38,$39,$39,$32,$33,$34,$30,$38,$38,$00,$15,$20,$01,$97,$20,$87,$30,$92,$38,$39,$39,$32,$33,$34,$30,$38,$38,$88,$92,$30,$00,$1d,$21,$01,$97,$20,$87,$30,$90,$38,$39,$39,$32,$33,$34,$30,$38,$38,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$22,$01,$97,$20,$87,$30,$91,$38,$39,$39,$32,$33,$34,$30,$38,$38,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$23,$01,$97,$20,$87,$30,$8f,$38,$39,$39,$32,$33,$34,$30,$38,$38,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$15,$24,$01,$97,$20,$87,$30,$94,$38,$39,$39,$32,$33,$34,$30,$38,$38,$88,$92,$30,$00,$15,$25,$01,$97,$20,$87,$30,$93,$38,$39,$39,$32,$33,$34,$30,$38,$38,$88,$92,$30,$00,$1d,$26,$01,$97,$20,$38,$31,$32,$8a,$35,$32,$32,$32,$38,$31,$37,$31,$37,$92,$35,$32,$32,$32,$38,$32,$35,$32,$39,$00,$15,$27,$01,$97,$20,$38,$31,$32,$8c,$35,$32,$32,$32,$38,$31,$37,$31,$37,$92,$30,$00,$17,$28,$01,$97,$20,$38,$31,$32,$84,$35,$32,$32,$32,$38,$31,$37,$31,$37,$92,$38,$31,$32,$00,$19,$29,$01,$97,$20,$87,$38,$31,$32,$85,$35,$32,$32,$32,$38,$31,$37,$31,$37,$88,$92,$35,$34,$38,$00,$1f,$2a,$01,$97,$20,$87,$38,$31,$32,$96,$35,$32,$32,$32,$38,$31,$37,$31,$37,$88,$92,$35,$32,$32,$32,$38,$31,$34,$33,$33,$00,$1f,$2b,$01,$97,$20,$87,$38,$31,$32,$b2,$35,$32,$32,$32,$38,$31,$37,$31,$37,$88,$92,$35,$32,$32,$32,$38,$31,$39,$38,$31,$00,$17,$2c,$01,$97,$20,$87,$38,$31,$32,$92,$35,$32,$32,$32,$38,$31,$37,$31,$37,$88,$92,$30,$00,$1f,$2d,$01,$97,$20,$87,$38,$31,$32,$90,$35,$32,$32,$32,$38,$31,$37,$31,$37,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1f,$2e,$01,$97,$20,$87,$38,$31,$32,$91,$35,$32,$32,$32,$38,$31,$37,$31,$37,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1f,$2f,$01,$97,$20,$87,$38,$31,$32,$8f,$35,$32,$32,$32,$38,$31,$37,$31,$37,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$17,$30,$01,$97,$20,$87,$38,$31,$32,$94,$35,$32,$32,$32,$38,$31,$37,$31,$37,$88,$92,$30,$00,$17,$31,$01,$97,$20,$87,$38,$31,$32,$93,$35,$32,$32,$32,$38,$31,$37,$31,$37,$88,$92,$30,$00,$0b,$32,$01,$97,$20,$30,$8a,$30,$92,$30,$00,$0b,$33,$01,$97,$20,$30,$89,$30,$92,$30,$00,$0d,$34,$01,$97,$20,$87,$30,$85,$30,$88,$92,$30,$00,$0d,$35,$01,$97,$20,$87,$30,$96,$30,$88,$92,$30,$00,$0d,$36,$01,$97,$20,$87,$30,$b2,$30,$88,$92,$30,$00,$15,$37,$01,$97,$20,$87,$30,$92,$30,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$0d,$38,$01,$97,$20,$87,$30,$90,$30,$88,$92,$30,$00,$0d,$39,$01,$97,$20,$87,$30,$91,$30,$88,$92,$30,$00,$15,$3a,$01,$97,$20,$87,$30,$8f,$30,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$0d,$3b,$01,$97,$20,$87,$30,$94,$30,$88,$92,$30,$00,$15,$3c,$01,$97,$20,$87,$30,$93,$30,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$0f,$3d,$01,$97,$20,$34,$8a,$38,$39,$31,$92,$38,$39,$35,$00,$10,$3e,$01,$97,$20,$34,$89,$38,$39,$31,$92,$33,$35,$36,$34,$00,$0d,$3f,$01,$97,$20,$34,$8c,$38,$39,$31,$92,$30,$00,$0d,$40,$01,$97,$20,$34,$84,$38,$39,$31,$92,$34,$00,$0f,$41,$01,$97,$20,$87,$34,$85,$38,$39,$31,$88,$92,$30,$00,$11,$42,$01,$97,$20,$87,$34,$96,$38,$39,$31,$88,$92,$38,$39,$35,$00,$11,$43,$01,$97,$20,$87,$34,$b2,$38,$39,$31,$88,$92,$38,$39,$35,$00,$0f,$44,$01,$97,$20,$87,$34,$92,$38,$39,$31,$88,$92,$30,$00,$17,$45,$01,$97,$20,$87,$34,$90,$38,$39,$31,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$17,$46,$01,$97,$20,$87,$34,$91,$38,$39,$31,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$17,$47,$01,$97,$20,$87,$34,$8f,$38,$39,$31,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$0f,$48,$01,$97,$20,$87,$34,$94,$38,$39,$31,$88,$92,$30,$00,$0f,$49,$01,$97,$20,$87,$34,$93,$38,$39,$31,$88,$92,$30,$00,$23,$4a,$01,$97,$20,$36,$34,$39,$39,$35,$34,$30,$31,$33,$8a,$31,$36,$37,$30,$31,$36,$33,$32,$36,$92,$38,$31,$36,$39,$37,$30,$33,$33,$39,$00,$23,$4b,$01,$97,$20,$36,$34,$39,$39,$35,$34,$30,$31,$33,$8b,$31,$36,$37,$30,$31,$36,$33,$32,$36,$92,$34,$38,$32,$39,$33,$37,$36,$38,$37,$00,$1b,$4c,$01,$97,$20,$36,$34,$39,$39,$35,$34,$30,$31,$33,$8c,$31,$36,$37,$30,$31,$36,$33,$32,$36,$92,$33,$00,$23,$4d,$01,$97,$20,$36,$34,$39,$39,$35,$34,$30,$31,$33,$84,$31,$36,$37,$30,$31,$36,$33,$32,$36,$92,$31,$34,$38,$39,$30,$35,$30,$33,$35,$00,$24,$4e,$01,$97,$20,$87,$36,$34,$39,$39,$35,$34,$30,$31,$33,$85,$31,$36,$37,$30,$31,$36,$33,$32,$36,$88,$92,$31,$31,$37,$39,$37,$31,$32,$34,$00,$25,$4f,$01,$97,$20,$87,$36,$34,$39,$39,$35,$34,$30,$31,$33,$96,$31,$36,$37,$30,$31,$36,$33,$32,$36,$88,$92,$37,$39,$33,$33,$37,$36,$30,$39,$31,$00,$25,$50,$01,$97,$20,$87,$36,$34,$39,$39,$35,$34,$30,$31,$33,$b2,$31,$36,$37,$30,$31,$36,$33,$32,$36,$88,$92,$38,$30,$35,$31,$37,$33,$32,$31,$35,$00,$1d,$51,$01,$97,$20,$87,$36,$34,$39,$39,$35,$34,$30,$31,$33,$92,$31,$36,$37,$30,$31,$36,$33,$32,$36,$88,$92,$30,$00,$25,$52,$01,$97,$20,$87,$36,$34,$39,$39,$35,$34,$30,$31,$33,$90,$31,$36,$37,$30,$31,$36,$33,$32,$36,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$53,$01,$97,$20,$87,$36,$34,$39,$39,$35,$34,$30,$31,$33,$91,$31,$36,$37,$30,$31,$36,$33,$32,$36,$88,$92,$30,$00,$1d,$54,$01,$97,$20,$87,$36,$34,$39,$39,$35,$34,$30,$31,$33,$8f,$31,$36,$37,$30,$31,$36,$33,$32,$36,$88,$92,$30,$00,$25,$55,$01,$97,$20,$87,$36,$34,$39,$39,$35,$34,$30,$31,$33,$94,$31,$36,$37,$30,$31,$36,$33,$32,$36,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$25,$56,$01,$97,$20,$87,$36,$34,$39,$39,$35,$34,$30,$31,$33,$93,$31,$36,$37,$30,$31,$36,$33,$32,$36,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$24,$57,$01,$97,$20,$36,$32,$34,$36,$35,$35,$36,$37,$32,$8a,$36,$38,$32,$34,$33,$33,$38,$35,$37,$92,$31,$33,$30,$37,$30,$38,$39,$35,$32,$39,$00,$1b,$58,$01,$97,$20,$36,$32,$34,$36,$35,$35,$36,$37,$32,$8c,$36,$38,$32,$34,$33,$33,$38,$35,$37,$92,$30,$00,$23,$59,$01,$97,$20,$36,$32,$34,$36,$35,$35,$36,$37,$32,$84,$36,$38,$32,$34,$33,$33,$38,$35,$37,$92,$36,$32,$34,$36,$35,$35,$36,$37,$32,$00,$25,$5a,$01,$97,$20,$87,$36,$32,$34,$36,$35,$35,$36,$37,$32,$85,$36,$38,$32,$34,$33,$33,$38,$35,$37,$88,$92,$35,$33,$39,$35,$36,$35,$33,$31,$32,$00,$25,$5b,$01,$97,$20,$87,$36,$32,$34,$36,$35,$35,$36,$37,$32,$96,$36,$38,$32,$34,$33,$33,$38,$35,$37,$88,$92,$32,$32,$37,$39,$35,$38,$39,$30,$35,$00,$25,$5c,$01,$97,$20,$87,$36,$32,$34,$36,$35,$35,$36,$37,$32,$b2,$36,$38,$32,$34,$33,$33,$38,$35,$37,$88,$92,$37,$36,$37,$35,$32,$34,$32,$31,$37,$00,$1d,$5d,$01,$97,$20,$87,$36,$32,$34,$36,$35,$35,$36,$37,$32,$92,$36,$38,$32,$34,$33,$33,$38,$35,$37,$88,$92,$30,$00,$25,$5e,$01,$97,$20,$87,$36,$32,$34,$36,$35,$35,$36,$37,$32,$90,$36,$38,$32,$34,$33,$33,$38,$35,$37,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$25,$5f,$01,$97,$20,$87,$36,$32,$34,$36,$35,$35,$36,$37,$32,$91,$36,$38,$32,$34,$33,$33,$38,$35,$37,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$25,$60,$01,$97,$20,$87,$36,$32,$34,$36,$35,$35,$36,$37,$32,$8f,$36,$38,$32,$34,$33,$33,$38,$35,$37,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$61,$01,$97,$20,$87,$36,$32,$34,$36,$35,$35,$36,$37,$32,$94,$36,$38,$32,$34,$33,$33,$38,$35,$37,$88,$92,$30,$00,$1d,$62,$01,$97,$20,$87,$36,$32,$34,$36,$35,$35,$36,$37,$32,$93,$36,$38,$32,$34,$33,$33,$38,$35,$37,$88,$92,$30,$00,$1b,$63,$01,$97,$20,$36,$8a,$38,$38,$31,$32,$36,$31,$39,$34,$38,$92,$38,$38,$31,$32,$36,$31,$39,$35,$34,$00,$13,$64,$01,$97,$20,$36,$8c,$38,$38,$31,$32,$36,$31,$39,$34,$38,$92,$30,$00,$13,$65,$01,$97,$20,$36,$84,$38,$38,$31,$32,$36,$31,$39,$34,$38,$92,$36,$00,$15,$66,$01,$97,$20,$87,$36,$85,$38,$38,$31,$32,$36,$31,$39,$34,$38,$88,$92,$34,$00,$1d,$67,$01,$97,$20,$87,$36,$96,$38,$38,$31,$32,$36,$31,$39,$34,$38,$88,$92,$38,$38,$31,$32,$36,$31,$39,$34,$36,$00,$1d,$68,$01,$97,$20,$87,$36,$b2,$38,$38,$31,$32,$36,$31,$39,$34,$38,$88,$92,$38,$38,$31,$32,$36,$31,$39,$35,$30,$00,$15,$69,$01,$97,$20,$87,$36,$92,$38,$38,$31,$32,$36,$31,$39,$34,$38,$88,$92,$30,$00,$1d,$6a,$01,$97,$20,$87,$36,$90,$38,$38,$31,$32,$36,$31,$39,$34,$38,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$6b,$01,$97,$20,$87,$36,$91,$38,$38,$31,$32,$36,$31,$39,$34,$38,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$6c,$01,$97,$20,$87,$36,$8f,$38,$38,$31,$32,$36,$31,$39,$34,$38,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$15,$6d,$01,$97,$20,$87,$36,$94,$38,$38,$31,$32,$36,$31,$39,$34,$38,$88,$92,$30,$00,$15,$6e,$01,$97,$20,$87,$36,$93,$38,$38,$31,$32,$36,$31,$39,$34,$38,$88,$92,$30,$00,$23,$6f,$01,$97,$20,$34,$33,$31,$31,$39,$35,$36,$32,$30,$8a,$32,$37,$33,$32,$35,$37,$32,$30,$37,$92,$37,$30,$34,$34,$35,$32,$38,$32,$37,$00,$23,$70,$01,$97,$20,$34,$33,$31,$31,$39,$35,$36,$32,$30,$8b,$32,$37,$33,$32,$35,$37,$32,$30,$37,$92,$31,$35,$37,$39,$33,$38,$34,$31,$33,$00,$1b,$71,$01,$97,$20,$34,$33,$31,$31,$39,$35,$36,$32,$30,$8c,$32,$37,$33,$32,$35,$37,$32,$30,$37,$92,$31,$00,$23,$72,$01,$97,$20,$34,$33,$31,$31,$39,$35,$36,$32,$30,$84,$32,$37,$33,$32,$35,$37,$32,$30,$37,$92,$31,$35,$37,$39,$33,$38,$34,$31,$33,$00,$25,$73,$01,$97,$20,$87,$34,$33,$31,$31,$39,$35,$36,$32,$30,$85,$32,$37,$33,$32,$35,$37,$32,$30,$37,$88,$92,$32,$36,$38,$35,$33,$33,$39,$38,$38,$00,$25,$74,$01,$97,$20,$87,$34,$33,$31,$31,$39,$35,$36,$32,$30,$96,$32,$37,$33,$32,$35,$37,$32,$30,$37,$88,$92,$31,$36,$37,$33,$38,$34,$38,$35,$31,$00,$25,$75,$01,$97,$20,$87,$34,$33,$31,$31,$39,$35,$36,$32,$30,$b2,$32,$37,$33,$32,$35,$37,$32,$30,$37,$88,$92,$34,$33,$35,$39,$31,$38,$38,$33,$39,$00,$1d,$76,$01,$97,$20,$87,$34,$33,$31,$31,$39,$35,$36,$32,$30,$92,$32,$37,$33,$32,$35,$37,$32,$30,$37,$88,$92,$30,$00,$25,$77,$01,$97,$20,$87,$34,$33,$31,$31,$39,$35,$36,$32,$30,$90,$32,$37,$33,$32,$35,$37,$32,$30,$37,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$78,$01,$97,$20,$87,$34,$33,$31,$31,$39,$35,$36,$32,$30,$91,$32,$37,$33,$32,$35,$37,$32,$30,$37,$88,$92,$30,$00,$1d,$79,$01,$97,$20,$87,$34,$33,$31,$31,$39,$35,$36,$32,$30,$8f,$32,$37,$33,$32,$35,$37,$32,$30,$37,$88,$92,$30,$00,$25,$7a,$01,$97,$20,$87,$34,$33,$31,$31,$39,$35,$36,$32,$30,$94,$32,$37,$33,$32,$35,$37,$32,$30,$37,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$25,$7b,$01,$97,$20,$87,$34,$33,$31,$31,$39,$35,$36,$32,$30,$93,$32,$37,$33,$32,$35,$37,$32,$30,$37,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1c,$7c,$01,$97,$20,$39,$35,$36,$31,$37,$34,$31,$39,$39,$8a,$35,$33,$92,$39,$35,$36,$31,$37,$34,$32,$35,$32,$00,$1c,$7d,$01,$97,$20,$39,$35,$36,$31,$37,$34,$31,$39,$39,$8b,$35,$33,$92,$39,$35,$36,$31,$37,$34,$31,$34,$36,$00,$1b,$7e,$01,$97,$20,$39,$35,$36,$31,$37,$34,$31,$39,$39,$8c,$35,$33,$92,$31,$38,$30,$34,$31,$30,$32,$32,$00,$15,$7f,$01,$97,$20,$39,$35,$36,$31,$37,$34,$31,$39,$39,$84,$35,$33,$92,$33,$33,$00,$17,$80,$01,$97,$20,$87,$39,$35,$36,$31,$37,$34,$31,$39,$39,$85,$35,$33,$88,$92,$35,$33,$00,$1e,$81,$01,$97,$20,$87,$39,$35,$36,$31,$37,$34,$31,$39,$39,$96,$35,$33,$88,$92,$39,$35,$36,$31,$37,$34,$31,$34,$36,$00,$1e,$82,$01,$97,$20,$87,$39,$35,$36,$31,$37,$34,$31,$39,$39,$b2,$35,$33,$88,$92,$39,$35,$36,$31,$37,$34,$31,$39,$39,$00,$16,$83,$01,$97,$20,$87,$39,$35,$36,$31,$37,$34,$31,$39,$39,$92,$35,$33,$88,$92,$30,$00,$1e,$84,$01,$97,$20,$87,$39,$35,$36,$31,$37,$34,$31,$39,$39,$90,$35,$33,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$16,$85,$01,$97,$20,$87,$39,$35,$36,$31,$37,$34,$31,$39,$39,$91,$35,$33,$88,$92,$30,$00,$16,$86,$01,$97,$20,$87,$39,$35,$36,$31,$37,$34,$31,$39,$39,$8f,$35,$33,$88,$92,$30,$00,$1e,$87,$01,$97,$20,$87,$39,$35,$36,$31,$37,$34,$31,$39,$39,$94,$35,$33,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1e,$88,$01,$97,$20,$87,$39,$35,$36,$31,$37,$34,$31,$39,$39,$93,$35,$33,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$89,$01,$97,$20,$37,$39,$35,$8a,$34,$36,$38,$30,$32,$36,$31,$36,$38,$92,$34,$36,$38,$30,$32,$36,$39,$36,$33,$00,$15,$8a,$01,$97,$20,$37,$39,$35,$8c,$34,$36,$38,$30,$32,$36,$31,$36,$38,$92,$30,$00,$17,$8b,$01,$97,$20,$37,$39,$35,$84,$34,$36,$38,$30,$32,$36,$31,$36,$38,$92,$37,$39,$35,$00,$19,$8c,$01,$97,$20,$87,$37,$39,$35,$85,$34,$36,$38,$30,$32,$36,$31,$36,$38,$88,$92,$37,$39,$32,$00,$1f,$8d,$01,$97,$20,$87,$37,$39,$35,$96,$34,$36,$38,$30,$32,$36,$31,$36,$38,$88,$92,$34,$36,$38,$30,$32,$35,$33,$37,$39,$00,$1f,$8e,$01,$97,$20,$87,$37,$39,$35,$b2,$34,$36,$38,$30,$32,$36,$31,$36,$38,$88,$92,$34,$36,$38,$30,$32,$36,$31,$37,$31,$00,$17,$8f,$01,$97,$20,$87,$37,$39,$35,$92,$34,$36,$38,$30,$32,$36,$31,$36,$38,$88,$92,$30,$00,$1f,$90,$01,$97,$20,$87,$37,$39,$35,$90,$34,$36,$38,$30,$32,$36,$31,$36,$38,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1f,$91,$01,$97,$20,$87,$37,$39,$35,$91,$34,$36,$38,$30,$32,$36,$31,$36,$38,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1f,$92,$01,$97,$20,$87,$37,$39,$35,$8f,$34,$36,$38,$30,$32,$36,$31,$36,$38,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$17,$93,$01,$97,$20,$87,$37,$39,$35,$94,$34,$36,$38,$30,$32,$36,$31,$36,$38,$88,$92,$30,$00,$17,$94,$01,$97,$20,$87,$37,$39,$35,$93,$34,$36,$38,$30,$32,$36,$31,$36,$38,$88,$92,$30,$00,$1d,$95,$01,$97,$20,$32,$37,$34,$8a,$33,$37,$39,$37,$37,$37,$34,$37,$36,$92,$33,$37,$39,$37,$37,$37,$37,$35,$30,$00,$15,$96,$01,$97,$20,$32,$37,$34,$8c,$33,$37,$39,$37,$37,$37,$34,$37,$36,$92,$30,$00,$17,$97,$01,$97,$20,$32,$37,$34,$84,$33,$37,$39,$37,$37,$37,$34,$37,$36,$92,$32,$37,$34,$00,$19,$98,$01,$97,$20,$87,$32,$37,$34,$85,$33,$37,$39,$37,$37,$37,$34,$37,$36,$88,$92,$32,$35,$36,$00,$1f,$99,$01,$97,$20,$87,$32,$37,$34,$96,$33,$37,$39,$37,$37,$37,$34,$37,$36,$88,$92,$33,$37,$39,$37,$37,$37,$32,$33,$38,$00,$1f,$9a,$01,$97,$20,$87,$32,$37,$34,$b2,$33,$37,$39,$37,$37,$37,$34,$37,$36,$88,$92,$33,$37,$39,$37,$37,$37,$34,$39,$34,$00,$17,$9b,$01,$97,$20,$87,$32,$37,$34,$92,$33,$37,$39,$37,$37,$37,$34,$37,$36,$88,$92,$30,$00,$1f,$9c,$01,$97,$20,$87,$32,$37,$34,$90,$33,$37,$39,$37,$37,$37,$34,$37,$36,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1f,$9d,$01,$97,$20,$87,$32,$37,$34,$91,$33,$37,$39,$37,$37,$37,$34,$37,$36,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1f,$9e,$01,$97,$20,$87,$32,$37,$34,$8f,$33,$37,$39,$37,$37,$37,$34,$37,$36,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$17,$9f,$01,$97,$20,$87,$32,$37,$34,$94,$33,$37,$39,$37,$37,$37,$34,$37,$36,$88,$92,$30,$00,$17,$a0,$01,$97,$20,$87,$32,$37,$34,$93,$33,$37,$39,$37,$37,$37,$34,$37,$36,$88,$92,$30,$00,$1b,$a1,$01,$97,$20,$32,$32,$39,$38,$39,$37,$31,$31,$35,$8a,$31,$92,$32,$32,$39,$38,$39,$37,$31,$31,$36,$00,$1b,$a2,$01,$97,$20,$32,$32,$39,$38,$39,$37,$31,$31,$35,$8b,$31,$92,$32,$32,$39,$38,$39,$37,$31,$31,$34,$00,$1b,$a3,$01,$97,$20,$32,$32,$39,$38,$39,$37,$31,$31,$35,$89,$31,$92,$32,$32,$39,$38,$39,$37,$31,$31,$35,$00,$1b,$a4,$01,$97,$20,$32,$32,$39,$38,$39,$37,$31,$31,$35,$8c,$31,$92,$32,$32,$39,$38,$39,$37,$31,$31,$35,$00,$13,$a5,$01,$97,$20,$32,$32,$39,$38,$39,$37,$31,$31,$35,$84,$31,$92,$30,$00,$15,$a6,$01,$97,$20,$87,$32,$32,$39,$38,$39,$37,$31,$31,$35,$85,$31,$88,$92,$31,$00,$1d,$a7,$01,$97,$20,$87,$32,$32,$39,$38,$39,$37,$31,$31,$35,$96,$31,$88,$92,$32,$32,$39,$38,$39,$37,$31,$31,$34,$00,$1d,$a8,$01,$97,$20,$87,$32,$32,$39,$38,$39,$37,$31,$31,$35,$b2,$31,$88,$92,$32,$32,$39,$38,$39,$37,$31,$31,$35,$00,$15,$a9,$01,$97,$20,$87,$32,$32,$39,$38,$39,$37,$31,$31,$35,$92,$31,$88,$92,$30,$00,$1d,$aa,$01,$97,$20,$87,$32,$32,$39,$38,$39,$37,$31,$31,$35,$90,$31,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$15,$ab,$01,$97,$20,$87,$32,$32,$39,$38,$39,$37,$31,$31,$35,$91,$31,$88,$92,$30,$00,$15,$ac,$01,$97,$20,$87,$32,$32,$39,$38,$39,$37,$31,$31,$35,$8f,$31,$88,$92,$30,$00,$1d,$ad,$01,$97,$20,$87,$32,$32,$39,$38,$39,$37,$31,$31,$35,$94,$31,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$ae,$01,$97,$20,$87,$32,$32,$39,$38,$39,$37,$31,$31,$35,$93,$31,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$22,$af,$01,$97,$20,$31,$33,$33,$31,$34,$38,$39,$32,$30,$8a,$37,$34,$33,$30,$37,$33,$30,$35,$92,$32,$30,$37,$34,$35,$36,$32,$32,$35,$00,$21,$b0,$01,$97,$20,$31,$33,$33,$31,$34,$38,$39,$32,$30,$8b,$37,$34,$33,$30,$37,$33,$30,$35,$92,$35,$38,$38,$34,$31,$36,$31,$35,$00,$1a,$b1,$01,$97,$20,$31,$33,$33,$31,$34,$38,$39,$32,$30,$8c,$37,$34,$33,$30,$37,$33,$30,$35,$92,$31,$00,$21,$b2,$01,$97,$20,$31,$33,$33,$31,$34,$38,$39,$32,$30,$84,$37,$34,$33,$30,$37,$33,$30,$35,$92,$35,$38,$38,$34,$31,$36,$31,$35,$00,$23,$b3,$01,$97,$20,$87,$31,$33,$33,$31,$34,$38,$39,$32,$30,$85,$37,$34,$33,$30,$37,$33,$30,$35,$88,$92,$37,$34,$32,$38,$39,$33,$38,$34,$00,$23,$b4,$01,$97,$20,$87,$31,$33,$33,$31,$34,$38,$39,$32,$30,$96,$37,$34,$33,$30,$37,$33,$30,$35,$88,$92,$35,$38,$38,$37,$37,$34,$35,$37,$00,$24,$b5,$01,$97,$20,$87,$31,$33,$33,$31,$34,$38,$39,$32,$30,$b2,$37,$34,$33,$30,$37,$33,$30,$35,$88,$92,$31,$33,$33,$31,$36,$36,$38,$34,$31,$00,$1c,$b6,$01,$97,$20,$87,$31,$33,$33,$31,$34,$38,$39,$32,$30,$92,$37,$34,$33,$30,$37,$33,$30,$35,$88,$92,$30,$00,$24,$b7,$01,$97,$20,$87,$31,$33,$33,$31,$34,$38,$39,$32,$30,$90,$37,$34,$33,$30,$37,$33,$30,$35,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1c,$b8,$01,$97,$20,$87,$31,$33,$33,$31,$34,$38,$39,$32,$30,$91,$37,$34,$33,$30,$37,$33,$30,$35,$88,$92,$30,$00,$1c,$b9,$01,$97,$20,$87,$31,$33,$33,$31,$34,$38,$39,$32,$30,$8f,$37,$34,$33,$30,$37,$33,$30,$35,$88,$92,$30,$00,$24,$ba,$01,$97,$20,$87,$31,$33,$33,$31,$34,$38,$39,$32,$30,$94,$37,$34,$33,$30,$37,$33,$30,$35,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$24,$bb,$01,$97,$20,$87,$31,$33,$33,$31,$34,$38,$39,$32,$30,$93,$37,$34,$33,$30,$37,$33,$30,$35,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1b,$bc,$01,$97,$20,$37,$8a,$36,$30,$34,$38,$31,$33,$35,$33,$31,$92,$36,$30,$34,$38,$31,$33,$35,$33,$38,$00,$13,$bd,$01,$97,$20,$37,$8c,$36,$30,$34,$38,$31,$33,$35,$33,$31,$92,$30,$00,$13,$be,$01,$97,$20,$37,$84,$36,$30,$34,$38,$31,$33,$35,$33,$31,$92,$37,$00,$15,$bf,$01,$97,$20,$87,$37,$85,$36,$30,$34,$38,$31,$33,$35,$33,$31,$88,$92,$33,$00,$1d,$c0,$01,$97,$20,$87,$37,$96,$36,$30,$34,$38,$31,$33,$35,$33,$31,$88,$92,$36,$30,$34,$38,$31,$33,$35,$33,$32,$00,$1d,$c1,$01,$97,$20,$87,$37,$b2,$36,$30,$34,$38,$31,$33,$35,$33,$31,$88,$92,$36,$30,$34,$38,$31,$33,$35,$33,$35,$00,$15,$c2,$01,$97,$20,$87,$37,$92,$36,$30,$34,$38,$31,$33,$35,$33,$31,$88,$92,$30,$00,$1d,$c3,$01,$97,$20,$87,$37,$90,$36,$30,$34,$38,$31,$33,$35,$33,$31,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$c4,$01,$97,$20,$87,$37,$91,$36,$30,$34,$38,$31,$33,$35,$33,$31,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$c5,$01,$97,$20,$87,$37,$8f,$36,$30,$34,$38,$31,$33,$35,$33,$31,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$15,$c6,$01,$97,$20,$87,$37,$94,$36,$30,$34,$38,$31,$33,$35,$33,$31,$88,$92,$30,$00,$15,$c7,$01,$97,$20,$87,$37,$93,$36,$30,$34,$38,$31,$33,$35,$33,$31,$88,$92,$30,$00,$1f,$c8,$01,$97,$20,$33,$33,$33,$8a,$31,$30,$35,$31,$34,$36,$39,$36,$30,$38,$92,$31,$30,$35,$31,$34,$36,$39,$39,$34,$31,$00,$16,$c9,$01,$97,$20,$33,$33,$33,$8c,$31,$30,$35,$31,$34,$36,$39,$36,$30,$38,$92,$30,$00,$18,$ca,$01,$97,$20,$33,$33,$33,$84,$31,$30,$35,$31,$34,$36,$39,$36,$30,$38,$92,$33,$33,$33,$00,$1a,$cb,$01,$97,$20,$87,$33,$33,$33,$85,$31,$30,$35,$31,$34,$36,$39,$36,$30,$38,$88,$92,$32,$36,$34,$00,$21,$cc,$01,$97,$20,$87,$33,$33,$33,$96,$31,$30,$35,$31,$34,$36,$39,$36,$30,$38,$88,$92,$31,$30,$35,$31,$34,$36,$39,$34,$31,$33,$00,$21,$cd,$01,$97,$20,$87,$33,$33,$33,$b2,$31,$30,$35,$31,$34,$36,$39,$36,$30,$38,$88,$92,$31,$30,$35,$31,$34,$36,$39,$36,$37,$37,$00,$18,$ce,$01,$97,$20,$87,$33,$33,$33,$92,$31,$30,$35,$31,$34,$36,$39,$36,$30,$38,$88,$92,$30,$00,$20,$cf,$01,$97,$20,$87,$33,$33,$33,$90,$31,$30,$35,$31,$34,$36,$39,$36,$30,$38,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$20,$d0,$01,$97,$20,$87,$33,$33,$33,$91,$31,$30,$35,$31,$34,$36,$39,$36,$30,$38,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$20,$d1,$01,$97,$20,$87,$33,$33,$33,$8f,$31,$30,$35,$31,$34,$36,$39,$36,$30,$38,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$18,$d2,$01,$97,$20,$87,$33,$33,$33,$94,$31,$30,$35,$31,$34,$36,$39,$36,$30,$38,$88,$92,$30,$00,$18,$d3,$01,$97,$20,$87,$33,$33,$33,$93,$31,$30,$35,$31,$34,$36,$39,$36,$30,$38,$88,$92,$30,$00,$1b,$d4,$01,$97,$20,$31,$32,$31,$30,$35,$31,$30,$33,$35,$8a,$38,$92,$31,$32,$31,$30,$35,$31,$30,$34,$33,$00,$1b,$d5,$01,$97,$20,$31,$32,$31,$30,$35,$31,$30,$33,$35,$8b,$38,$92,$31,$32,$31,$30,$35,$31,$30,$32,$37,$00,$1b,$d6,$01,$97,$20,$31,$32,$31,$30,$35,$31,$30,$33,$35,$89,$38,$92,$39,$36,$38,$34,$30,$38,$32,$38,$30,$00,$1a,$d7,$01,$97,$20,$31,$32,$31,$30,$35,$31,$30,$33,$35,$8c,$38,$92,$31,$35,$31,$33,$31,$33,$37,$39,$00,$13,$d8,$01,$97,$20,$31,$32,$31,$30,$35,$31,$30,$33,$35,$84,$38,$92,$33,$00,$15,$d9,$01,$97,$20,$87,$31,$32,$31,$30,$35,$31,$30,$33,$35,$85,$38,$88,$92,$38,$00,$1d,$da,$01,$97,$20,$87,$31,$32,$31,$30,$35,$31,$30,$33,$35,$96,$38,$88,$92,$31,$32,$31,$30,$35,$31,$30,$32,$37,$00,$1d,$db,$01,$97,$20,$87,$31,$32,$31,$30,$35,$31,$30,$33,$35,$b2,$38,$88,$92,$31,$32,$31,$30,$35,$31,$30,$33,$35,$00,$15,$dc,$01,$97,$20,$87,$31,$32,$31,$30,$35,$31,$30,$33,$35,$92,$38,$88,$92,$30,$00,$1d,$dd,$01,$97,$20,$87,$31,$32,$31,$30,$35,$31,$30,$33,$35,$90,$38,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$15,$de,$01,$97,$20,$87,$31,$32,$31,$30,$35,$31,$30,$33,$35,$91,$38,$88,$92,$30,$00,$15,$df,$01,$97,$20,$87,$31,$32,$31,$30,$35,$31,$30,$33,$35,$8f,$38,$88,$92,$30,$00,$1d,$e0,$01,$97,$20,$87,$31,$32,$31,$30,$35,$31,$30,$33,$35,$94,$38,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$e1,$01,$97,$20,$87,$31,$32,$31,$30,$35,$31,$30,$33,$35,$93,$38,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1b,$e2,$01,$97,$20,$30,$8a,$32,$30,$33,$34,$33,$30,$31,$35,$37,$92,$32,$30,$33,$34,$33,$30,$31,$35,$37,$00,$13,$e3,$01,$97,$20,$30,$89,$32,$30,$33,$34,$33,$30,$31,$35,$37,$92,$30,$00,$13,$e4,$01,$97,$20,$30,$8c,$32,$30,$33,$34,$33,$30,$31,$35,$37,$92,$30,$00,$13,$e5,$01,$97,$20,$30,$84,$32,$30,$33,$34,$33,$30,$31,$35,$37,$92,$30,$00,$15,$e6,$01,$97,$20,$87,$30,$85,$32,$30,$33,$34,$33,$30,$31,$35,$37,$88,$92,$30,$00,$1d,$e7,$01,$97,$20,$87,$30,$96,$32,$30,$33,$34,$33,$30,$31,$35,$37,$88,$92,$32,$30,$33,$34,$33,$30,$31,$35,$37,$00,$1d,$e8,$01,$97,$20,$87,$30,$b2,$32,$30,$33,$34,$33,$30,$31,$35,$37,$88,$92,$32,$30,$33,$34,$33,$30,$31,$35,$37,$00,$15,$e9,$01,$97,$20,$87,$30,$92,$32,$30,$33,$34,$33,$30,$31,$35,$37,$88,$92,$30,$00,$1d,$ea,$01,$97,$20,$87,$30,$90,$32,$30,$33,$34,$33,$30,$31,$35,$37,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$eb,$01,$97,$20,$87,$30,$91,$32,$30,$33,$34,$33,$30,$31,$35,$37,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$ec,$01,$97,$20,$87,$30,$8f,$32,$30,$33,$34,$33,$30,$31,$35,$37,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$15,$ed,$01,$97,$20,$87,$30,$94,$32,$30,$33,$34,$33,$30,$31,$35,$37,$88,$92,$30,$00,$15,$ee,$01,$97,$20,$87,$30,$93,$32,$30,$33,$34,$33,$30,$31,$35,$37,$88,$92,$30,$00,$23,$ef,$01,$97,$20,$34,$38,$30,$35,$38,$30,$35,$31,$34,$8a,$34,$38,$30,$35,$38,$30,$35,$31,$34,$92,$39,$36,$31,$31,$36,$31,$30,$32,$38,$00,$1b,$f0,$01,$97,$20,$34,$38,$30,$35,$38,$30,$35,$31,$34,$8c,$34,$38,$30,$35,$38,$30,$35,$31,$34,$92,$31,$00,$1b,$f1,$01,$97,$20,$34,$38,$30,$35,$38,$30,$35,$31,$34,$84,$34,$38,$30,$35,$38,$30,$35,$31,$34,$92,$30,$00,$25,$f2,$01,$97,$20,$87,$34,$38,$30,$35,$38,$30,$35,$31,$34,$85,$34,$38,$30,$35,$38,$30,$35,$31,$34,$88,$92,$34,$38,$30,$35,$38,$30,$35,$31,$34,$00,$1d,$f3,$01,$97,$20,$87,$34,$38,$30,$35,$38,$30,$35,$31,$34,$96,$34,$38,$30,$35,$38,$30,$35,$31,$34,$88,$92,$30,$00,$25,$f4,$01,$97,$20,$87,$34,$38,$30,$35,$38,$30,$35,$31,$34,$b2,$34,$38,$30,$35,$38,$30,$35,$31,$34,$88,$92,$34,$38,$30,$35,$38,$30,$35,$31,$34,$00,$25,$f5,$01,$97,$20,$87,$34,$38,$30,$35,$38,$30,$35,$31,$34,$92,$34,$38,$30,$35,$38,$30,$35,$31,$34,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$f6,$01,$97,$20,$87,$34,$38,$30,$35,$38,$30,$35,$31,$34,$90,$34,$38,$30,$35,$38,$30,$35,$31,$34,$88,$92,$30,$00,$1d,$f7,$01,$97,$20,$87,$34,$38,$30,$35,$38,$30,$35,$31,$34,$91,$34,$38,$30,$35,$38,$30,$35,$31,$34,$88,$92,$30,$00,$25,$f8,$01,$97,$20,$87,$34,$38,$30,$35,$38,$30,$35,$31,$34,$8f,$34,$38,$30,$35,$38,$30,$35,$31,$34,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$f9,$01,$97,$20,$87,$34,$38,$30,$35,$38,$30,$35,$31,$34,$94,$34,$38,$30,$35,$38,$30,$35,$31,$34,$88,$92,$30,$00,$25,$fa,$01,$97,$20,$87,$34,$38,$30,$35,$38,$30,$35,$31,$34,$93,$34,$38,$30,$35,$38,$30,$35,$31,$34,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$25,$fb,$01,$97,$20,$36,$30,$36,$34,$38,$34,$38,$38,$33,$8a,$31,$30,$34,$37,$30,$37,$39,$31,$30,$39,$92,$31,$36,$35,$33,$35,$36,$33,$39,$39,$32,$00,$1c,$fc,$01,$97,$20,$36,$30,$36,$34,$38,$34,$38,$38,$33,$8c,$31,$30,$34,$37,$30,$37,$39,$31,$30,$39,$92,$30,$00,$24,$fd,$01,$97,$20,$36,$30,$36,$34,$38,$34,$38,$38,$33,$84,$31,$30,$34,$37,$30,$37,$39,$31,$30,$39,$92,$36,$30,$36,$34,$38,$34,$38,$38,$33,$00,$26,$fe,$01,$97,$20,$87,$36,$30,$36,$34,$38,$34,$38,$38,$33,$85,$31,$30,$34,$37,$30,$37,$39,$31,$30,$39,$88,$92,$36,$30,$36,$30,$38,$37,$32,$39,$37,$00,$26,$ff,$01,$97,$20,$87,$36,$30,$36,$34,$38,$34,$38,$38,$33,$96,$31,$30,$34,$37,$30,$37,$39,$31,$30,$39,$88,$92,$34,$34,$31,$33,$38,$39,$33,$39,$38,$00,$27,$00,$02,$97,$20,$87,$36,$30,$36,$34,$38,$34,$38,$38,$33,$b2,$31,$30,$34,$37,$30,$37,$39,$31,$30,$39,$88,$92,$31,$30,$34,$37,$34,$37,$36,$36,$39,$35,$00,$1e,$01,$02,$97,$20,$87,$36,$30,$36,$34,$38,$34,$38,$38,$33,$92,$31,$30,$34,$37,$30,$37,$39,$31,$30,$39,$88,$92,$30,$00,$26,$02,$02,$97,$20,$87,$36,$30,$36,$34,$38,$34,$38,$38,$33,$90,$31,$30,$34,$37,$30,$37,$39,$31,$30,$39,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$26,$03,$02,$97,$20,$87,$36,$30,$36,$34,$38,$34,$38,$38,$33,$91,$31,$30,$34,$37,$30,$37,$39,$31,$30,$39,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$26,$04,$02,$97,$20,$87,$36,$30,$36,$34,$38,$34,$38,$38,$33,$8f,$31,$30,$34,$37,$30,$37,$39,$31,$30,$39,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1e,$05,$02,$97,$20,$87,$36,$30,$36,$34,$38,$34,$38,$38,$33,$94,$31,$30,$34,$37,$30,$37,$39,$31,$30,$39,$88,$92,$30,$00,$1e,$06,$02,$97,$20,$87,$36,$30,$36,$34,$38,$34,$38,$38,$33,$93,$31,$30,$34,$37,$30,$37,$39,$31,$30,$39,$88,$92,$30,$00,$1b,$07,$02,$97,$20,$38,$33,$30,$38,$31,$30,$32,$30,$30,$8a,$30,$92,$38,$33,$30,$38,$31,$30,$32,$30,$30,$00,$1b,$08,$02,$97,$20,$38,$33,$30,$38,$31,$30,$32,$30,$30,$8b,$30,$92,$38,$33,$30,$38,$31,$30,$32,$30,$30,$00,$13,$09,$02,$97,$20,$38,$33,$30,$38,$31,$30,$32,$30,$30,$89,$30,$92,$30,$00,$15,$0a,$02,$97,$20,$87,$38,$33,$30,$38,$31,$30,$32,$30,$30,$85,$30,$88,$92,$30,$00,$1d,$0b,$02,$97,$20,$87,$38,$33,$30,$38,$31,$30,$32,$30,$30,$96,$30,$88,$92,$38,$33,$30,$38,$31,$30,$32,$30,$30,$00,$1d,$0c,$02,$97,$20,$87,$38,$33,$30,$38,$31,$30,$32,$30,$30,$b2,$30,$88,$92,$38,$33,$30,$38,$31,$30,$32,$30,$30,$00,$15,$0d,$02,$97,$20,$87,$38,$33,$30,$38,$31,$30,$32,$30,$30,$92,$30,$88,$92,$30,$00,$1d,$0e,$02,$97,$20,$87,$38,$33,$30,$38,$31,$30,$32,$30,$30,$90,$30,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$15,$0f,$02,$97,$20,$87,$38,$33,$30,$38,$31,$30,$32,$30,$30,$91,$30,$88,$92,$30,$00,$15,$10,$02,$97,$20,$87,$38,$33,$30,$38,$31,$30,$32,$30,$30,$8f,$30,$88,$92,$30,$00,$1d,$11,$02,$97,$20,$87,$38,$33,$30,$38,$31,$30,$32,$30,$30,$94,$30,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$12,$02,$97,$20,$87,$38,$33,$30,$38,$31,$30,$32,$30,$30,$93,$30,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1b,$13,$02,$97,$20,$36,$37,$34,$33,$33,$33,$30,$39,$37,$8a,$35,$92,$36,$37,$34,$33,$33,$33,$31,$30,$32,$00,$1b,$14,$02,$97,$20,$36,$37,$34,$33,$33,$33,$30,$39,$37,$8b,$35,$92,$36,$37,$34,$33,$33,$33,$30,$39,$32,$00,$1b,$15,$02,$97,$20,$36,$37,$34,$33,$33,$33,$30,$39,$37,$8c,$35,$92,$31,$33,$34,$38,$36,$36,$36,$31,$39,$00,$13,$16,$02,$97,$20,$36,$37,$34,$33,$33,$33,$30,$39,$37,$84,$35,$92,$32,$00,$15,$17,$02,$97,$20,$87,$36,$37,$34,$33,$33,$33,$30,$39,$37,$85,$35,$88,$92,$31,$00,$1d,$18,$02,$97,$20,$87,$36,$37,$34,$33,$33,$33,$30,$39,$37,$96,$35,$88,$92,$36,$37,$34,$33,$33,$33,$31,$30,$30,$00,$1d,$19,$02,$97,$20,$87,$36,$37,$34,$33,$33,$33,$30,$39,$37,$b2,$35,$88,$92,$36,$37,$34,$33,$33,$33,$31,$30,$31,$00,$15,$1a,$02,$97,$20,$87,$36,$37,$34,$33,$33,$33,$30,$39,$37,$92,$35,$88,$92,$30,$00,$1d,$1b,$02,$97,$20,$87,$36,$37,$34,$33,$33,$33,$30,$39,$37,$90,$35,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$15,$1c,$02,$97,$20,$87,$36,$37,$34,$33,$33,$33,$30,$39,$37,$91,$35,$88,$92,$30,$00,$15,$1d,$02,$97,$20,$87,$36,$37,$34,$33,$33,$33,$30,$39,$37,$8f,$35,$88,$92,$30,$00,$1d,$1e,$02,$97,$20,$87,$36,$37,$34,$33,$33,$33,$30,$39,$37,$94,$35,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$1f,$02,$97,$20,$87,$36,$37,$34,$33,$33,$33,$30,$39,$37,$93,$35,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$0b,$20,$02,$97,$20,$38,$8a,$30,$92,$38,$00,$0b,$21,$02,$97,$20,$38,$8b,$30,$92,$38,$00,$0b,$22,$02,$97,$20,$38,$89,$30,$92,$30,$00,$0d,$23,$02,$97,$20,$87,$38,$85,$30,$88,$92,$30,$00,$0d,$24,$02,$97,$20,$87,$38,$96,$30,$88,$92,$38,$00,$0d,$25,$02,$97,$20,$87,$38,$b2,$30,$88,$92,$38,$00,$0d,$26,$02,$97,$20,$87,$38,$92,$30,$88,$92,$30,$00,$15,$27,$02,$97,$20,$87,$38,$90,$30,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$0d,$28,$02,$97,$20,$87,$38,$91,$30,$88,$92,$30,$00,$0d,$29,$02,$97,$20,$87,$38,$8f,$30,$88,$92,$30,$00,$15,$2a,$02,$97,$20,$87,$38,$94,$30,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$15,$2b,$02,$97,$20,$87,$38,$93,$30,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$24,$2c,$02,$97,$20,$32,$35,$32,$39,$37,$34,$39,$35,$30,$8a,$38,$37,$39,$32,$32,$38,$31,$32,$35,$92,$31,$31,$33,$32,$32,$30,$33,$30,$37,$35,$00,$1b,$2d,$02,$97,$20,$32,$35,$32,$39,$37,$34,$39,$35,$30,$8c,$38,$37,$39,$32,$32,$38,$31,$32,$35,$92,$30,$00,$23,$2e,$02,$97,$20,$32,$35,$32,$39,$37,$34,$39,$35,$30,$84,$38,$37,$39,$32,$32,$38,$31,$32,$35,$92,$32,$35,$32,$39,$37,$34,$39,$35,$30,$00,$24,$2f,$02,$97,$20,$87,$32,$35,$32,$39,$37,$34,$39,$35,$30,$85,$38,$37,$39,$32,$32,$38,$31,$32,$35,$88,$92,$36,$37,$33,$37,$36,$31,$39,$36,$00,$25,$30,$02,$97,$20,$87,$32,$35,$32,$39,$37,$34,$39,$35,$30,$96,$38,$37,$39,$32,$32,$38,$31,$32,$35,$88,$92,$39,$39,$37,$34,$35,$30,$36,$38,$33,$00,$26,$31,$02,$97,$20,$87,$32,$35,$32,$39,$37,$34,$39,$35,$30,$b2,$38,$37,$39,$32,$32,$38,$31,$32,$35,$88,$92,$31,$30,$36,$34,$38,$32,$36,$38,$37,$39,$00,$1d,$32,$02,$97,$20,$87,$32,$35,$32,$39,$37,$34,$39,$35,$30,$92,$38,$37,$39,$32,$32,$38,$31,$32,$35,$88,$92,$30,$00,$25,$33,$02,$97,$20,$87,$32,$35,$32,$39,$37,$34,$39,$35,$30,$90,$38,$37,$39,$32,$32,$38,$31,$32,$35,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$25,$34,$02,$97,$20,$87,$32,$35,$32,$39,$37,$34,$39,$35,$30,$91,$38,$37,$39,$32,$32,$38,$31,$32,$35,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$25,$35,$02,$97,$20,$87,$32,$35,$32,$39,$37,$34,$39,$35,$30,$8f,$38,$37,$39,$32,$32,$38,$31,$32,$35,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$36,$02,$97,$20,$87,$32,$35,$32,$39,$37,$34,$39,$35,$30,$94,$38,$37,$39,$32,$32,$38,$31,$32,$35,$88,$92,$30,$00,$1d,$37,$02,$97,$20,$87,$32,$35,$32,$39,$37,$34,$39,$35,$30,$93,$38,$37,$39,$32,$32,$38,$31,$32,$35,$88,$92,$30,$00,$1b,$38,$02,$97,$20,$32,$35,$35,$36,$39,$36,$32,$33,$31,$8a,$31,$92,$32,$35,$35,$36,$39,$36,$32,$33,$32,$00,$1b,$39,$02,$97,$20,$32,$35,$35,$36,$39,$36,$32,$33,$31,$8b,$31,$92,$32,$35,$35,$36,$39,$36,$32,$33,$30,$00,$1b,$3a,$02,$97,$20,$32,$35,$35,$36,$39,$36,$32,$33,$31,$89,$31,$92,$32,$35,$35,$36,$39,$36,$32,$33,$31,$00,$1b,$3b,$02,$97,$20,$32,$35,$35,$36,$39,$36,$32,$33,$31,$8c,$31,$92,$32,$35,$35,$36,$39,$36,$32,$33,$31,$00,$13,$3c,$02,$97,$20,$32,$35,$35,$36,$39,$36,$32,$33,$31,$84,$31,$92,$30,$00,$15,$3d,$02,$97,$20,$87,$32,$35,$35,$36,$39,$36,$32,$33,$31,$85,$31,$88,$92,$31,$00,$1d,$3e,$02,$97,$20,$87,$32,$35,$35,$36,$39,$36,$32,$33,$31,$96,$31,$88,$92,$32,$35,$35,$36,$39,$36,$32,$33,$30,$00,$1d,$3f,$02,$97,$20,$87,$32,$35,$35,$36,$39,$36,$32,$33,$31,$b2,$31,$88,$92,$32,$35,$35,$36,$39,$36,$32,$33,$31,$00,$15,$40,$02,$97,$20,$87,$32,$35,$35,$36,$39,$36,$32,$33,$31,$92,$31,$88,$92,$30,$00,$1d,$41,$02,$97,$20,$87,$32,$35,$35,$36,$39,$36,$32,$33,$31,$90,$31,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$15,$42,$02,$97,$20,$87,$32,$35,$35,$36,$39,$36,$32,$33,$31,$91,$31,$88,$92,$30,$00,$15,$43,$02,$97,$20,$87,$32,$35,$35,$36,$39,$36,$32,$33,$31,$8f,$31,$88,$92,$30,$00,$1d,$44,$02,$97,$20,$87,$32,$35,$35,$36,$39,$36,$32,$33,$31,$94,$31,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$45,$02,$97,$20,$87,$32,$35,$35,$36,$39,$36,$32,$33,$31,$93,$31,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$0b,$46,$02,$97,$20,$37,$8a,$30,$92,$37,$00,$0b,$47,$02,$97,$20,$37,$8b,$30,$92,$37,$00,$0b,$48,$02,$97,$20,$37,$89,$30,$92,$30,$00,$0d,$49,$02,$97,$20,$87,$37,$85,$30,$88,$92,$30,$00,$0d,$4a,$02,$97,$20,$87,$37,$96,$30,$88,$92,$37,$00,$0d,$4b,$02,$97,$20,$87,$37,$b2,$30,$88,$92,$37,$00,$0d,$4c,$02,$97,$20,$87,$37,$92,$30,$88,$92,$30,$00,$15,$4d,$02,$97,$20,$87,$37,$90,$30,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$0d,$4e,$02,$97,$20,$87,$37,$91,$30,$88,$92,$30,$00,$0d,$4f,$02,$97,$20,$87,$37,$8f,$30,$88,$92,$30,$00,$15,$50,$02,$97,$20,$87,$37,$94,$30,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$15,$51,$02,$97,$20,$87,$37,$93,$30,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1b,$52,$02,$97,$20,$35,$34,$30,$34,$38,$34,$37,$37,$39,$8a,$38,$92,$35,$34,$30,$34,$38,$34,$37,$38,$37,$00,$1b,$53,$02,$97,$20,$35,$34,$30,$34,$38,$34,$37,$37,$39,$8b,$38,$92,$35,$34,$30,$34,$38,$34,$37,$37,$31,$00,$1a,$54,$02,$97,$20,$35,$34,$30,$34,$38,$34,$37,$37,$39,$8c,$38,$92,$36,$37,$35,$36,$30,$35,$39,$37,$00,$13,$55,$02,$97,$20,$35,$34,$30,$34,$38,$34,$37,$37,$39,$84,$38,$92,$33,$00,$15,$56,$02,$97,$20,$87,$35,$34,$30,$34,$38,$34,$37,$37,$39,$85,$38,$88,$92,$38,$00,$1d,$57,$02,$97,$20,$87,$35,$34,$30,$34,$38,$34,$37,$37,$39,$96,$38,$88,$92,$35,$34,$30,$34,$38,$34,$37,$37,$31,$00,$1d,$58,$02,$97,$20,$87,$35,$34,$30,$34,$38,$34,$37,$37,$39,$b2,$38,$88,$92,$35,$34,$30,$34,$38,$34,$37,$37,$39,$00,$15,$59,$02,$97,$20,$87,$35,$34,$30,$34,$38,$34,$37,$37,$39,$92,$38,$88,$92,$30,$00,$1d,$5a,$02,$97,$20,$87,$35,$34,$30,$34,$38,$34,$37,$37,$39,$90,$38,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$15,$5b,$02,$97,$20,$87,$35,$34,$30,$34,$38,$34,$37,$37,$39,$91,$38,$88,$92,$30,$00,$15,$5c,$02,$97,$20,$87,$35,$34,$30,$34,$38,$34,$37,$37,$39,$8f,$38,$88,$92,$30,$00,$1d,$5d,$02,$97,$20,$87,$35,$34,$30,$34,$38,$34,$37,$37,$39,$94,$38,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$5e,$02,$97,$20,$87,$35,$34,$30,$34,$38,$34,$37,$37,$39,$93,$38,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$5f,$02,$97,$20,$31,$38,$34,$8a,$36,$39,$38,$37,$35,$36,$35,$32,$33,$92,$36,$39,$38,$37,$35,$36,$37,$30,$37,$00,$15,$60,$02,$97,$20,$31,$38,$34,$8c,$36,$39,$38,$37,$35,$36,$35,$32,$33,$92,$30,$00,$17,$61,$02,$97,$20,$31,$38,$34,$84,$36,$39,$38,$37,$35,$36,$35,$32,$33,$92,$31,$38,$34,$00,$19,$62,$02,$97,$20,$87,$31,$38,$34,$85,$36,$39,$38,$37,$35,$36,$35,$32,$33,$88,$92,$31,$36,$38,$00,$1f,$63,$02,$97,$20,$87,$31,$38,$34,$96,$36,$39,$38,$37,$35,$36,$35,$32,$33,$88,$92,$36,$39,$38,$37,$35,$36,$33,$37,$31,$00,$1f,$64,$02,$97,$20,$87,$31,$38,$34,$b2,$36,$39,$38,$37,$35,$36,$35,$32,$33,$88,$92,$36,$39,$38,$37,$35,$36,$35,$33,$39,$00,$17,$65,$02,$97,$20,$87,$31,$38,$34,$92,$36,$39,$38,$37,$35,$36,$35,$32,$33,$88,$92,$30,$00,$1f,$66,$02,$97,$20,$87,$31,$38,$34,$90,$36,$39,$38,$37,$35,$36,$35,$32,$33,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1f,$67,$02,$97,$20,$87,$31,$38,$34,$91,$36,$39,$38,$37,$35,$36,$35,$32,$33,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1f,$68,$02,$97,$20,$87,$31,$38,$34,$8f,$36,$39,$38,$37,$35,$36,$35,$32,$33,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$17,$69,$02,$97,$20,$87,$31,$38,$34,$94,$36,$39,$38,$37,$35,$36,$35,$32,$33,$88,$92,$30,$00,$17,$6a,$02,$97,$20,$87,$31,$38,$34,$93,$36,$39,$38,$37,$35,$36,$35,$32,$33,$88,$92,$30,$00,$0f,$6b,$02,$97,$20,$37,$8a,$38,$35,$37,$92,$38,$36,$34,$00,$10,$6c,$02,$97,$20,$37,$89,$38,$35,$37,$92,$35,$39,$39,$39,$00,$0d,$6d,$02,$97,$20,$37,$8c,$38,$35,$37,$92,$30,$00,$0d,$6e,$02,$97,$20,$37,$84,$38,$35,$37,$92,$37,$00,$0f,$6f,$02,$97,$20,$87,$37,$85,$38,$35,$37,$88,$92,$31,$00,$11,$70,$02,$97,$20,$87,$37,$96,$38,$35,$37,$88,$92,$38,$36,$32,$00,$11,$71,$02,$97,$20,$87,$37,$b2,$38,$35,$37,$88,$92,$38,$36,$33,$00,$0f,$72,$02,$97,$20,$87,$37,$92,$38,$35,$37,$88,$92,$30,$00,$17,$73,$02,$97,$20,$87,$37,$90,$38,$35,$37,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$17,$74,$02,$97,$20,$87,$37,$91,$38,$35,$37,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$17,$75,$02,$97,$20,$87,$37,$8f,$38,$35,$37,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$0f,$76,$02,$97,$20,$87,$37,$94,$38,$35,$37,$88,$92,$30,$00,$0f,$77,$02,$97,$20,$87,$37,$93,$38,$35,$37,$88,$92,$30,$00,$1d,$78,$02,$97,$20,$39,$34,$30,$8a,$39,$33,$35,$38,$31,$31,$37,$37,$32,$92,$39,$33,$35,$38,$31,$32,$37,$31,$32,$00,$15,$79,$02,$97,$20,$39,$34,$30,$8c,$39,$33,$35,$38,$31,$31,$37,$37,$32,$92,$30,$00,$17,$7a,$02,$97,$20,$39,$34,$30,$84,$39,$33,$35,$38,$31,$31,$37,$37,$32,$92,$39,$34,$30,$00,$19,$7b,$02,$97,$20,$87,$39,$34,$30,$85,$39,$33,$35,$38,$31,$31,$37,$37,$32,$88,$92,$36,$38,$34,$00,$1f,$7c,$02,$97,$20,$87,$39,$34,$30,$96,$39,$33,$35,$38,$31,$31,$37,$37,$32,$88,$92,$39,$33,$35,$38,$31,$31,$33,$34,$34,$00,$1f,$7d,$02,$97,$20,$87,$39,$34,$30,$b2,$39,$33,$35,$38,$31,$31,$37,$37,$32,$88,$92,$39,$33,$35,$38,$31,$32,$30,$32,$38,$00,$17,$7e,$02,$97,$20,$87,$39,$34,$30,$92,$39,$33,$35,$38,$31,$31,$37,$37,$32,$88,$92,$30,$00,$1f,$7f,$02,$97,$20,$87,$39,$34,$30,$90,$39,$33,$35,$38,$31,$31,$37,$37,$32,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1f,$80,$02,$97,$20,$87,$39,$34,$30,$91,$39,$33,$35,$38,$31,$31,$37,$37,$32,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1f,$81,$02,$97,$20,$87,$39,$34,$30,$8f,$39,$33,$35,$38,$31,$31,$37,$37,$32,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$17,$82,$02,$97,$20,$87,$39,$34,$30,$94,$39,$33,$35,$38,$31,$31,$37,$37,$32,$88,$92,$30,$00,$17,$83,$02,$97,$20,$87,$39,$34,$30,$93,$39,$33,$35,$38,$31,$31,$37,$37,$32,$88,$92,$30,$00,$24,$84,$02,$97,$20,$39,$38,$35,$36,$38,$36,$30,$35,$33,$8a,$38,$36,$31,$31,$32,$33,$38,$37,$31,$92,$31,$38,$34,$36,$38,$30,$39,$39,$32,$34,$00,$23,$85,$02,$97,$20,$39,$38,$35,$36,$38,$36,$30,$35,$33,$8b,$38,$36,$31,$31,$32,$33,$38,$37,$31,$92,$31,$32,$34,$35,$36,$32,$31,$38,$32,$00,$1b,$86,$02,$97,$20,$39,$38,$35,$36,$38,$36,$30,$35,$33,$8c,$38,$36,$31,$31,$32,$33,$38,$37,$31,$92,$31,$00,$23,$87,$02,$97,$20,$39,$38,$35,$36,$38,$36,$30,$35,$33,$84,$38,$36,$31,$31,$32,$33,$38,$37,$31,$92,$31,$32,$34,$35,$36,$32,$31,$38,$32,$00,$25,$88,$02,$97,$20,$87,$39,$38,$35,$36,$38,$36,$30,$35,$33,$85,$38,$36,$31,$31,$32,$33,$38,$37,$31,$88,$92,$38,$34,$33,$30,$36,$33,$33,$30,$31,$00,$25,$89,$02,$97,$20,$87,$39,$38,$35,$36,$38,$36,$30,$35,$33,$96,$38,$36,$31,$31,$32,$33,$38,$37,$31,$88,$92,$31,$36,$30,$36,$38,$33,$33,$32,$32,$00,$26,$8a,$02,$97,$20,$87,$39,$38,$35,$36,$38,$36,$30,$35,$33,$b2,$38,$36,$31,$31,$32,$33,$38,$37,$31,$88,$92,$31,$30,$30,$33,$37,$34,$36,$36,$32,$33,$00,$1d,$8b,$02,$97,$20,$87,$39,$38,$35,$36,$38,$36,$30,$35,$33,$92,$38,$36,$31,$31,$32,$33,$38,$37,$31,$88,$92,$30,$00,$25,$8c,$02,$97,$20,$87,$39,$38,$35,$36,$38,$36,$30,$35,$33,$90,$38,$36,$31,$31,$32,$33,$38,$37,$31,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$8d,$02,$97,$20,$87,$39,$38,$35,$36,$38,$36,$30,$35,$33,$91,$38,$36,$31,$31,$32,$33,$38,$37,$31,$88,$92,$30,$00,$1d,$8e,$02,$97,$20,$87,$39,$38,$35,$36,$38,$36,$30,$35,$33,$8f,$38,$36,$31,$31,$32,$33,$38,$37,$31,$88,$92,$30,$00,$25,$8f,$02,$97,$20,$87,$39,$38,$35,$36,$38,$36,$30,$35,$33,$94,$38,$36,$31,$31,$32,$33,$38,$37,$31,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$25,$90,$02,$97,$20,$87,$39,$38,$35,$36,$38,$36,$30,$35,$33,$93,$38,$36,$31,$31,$32,$33,$38,$37,$31,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$0f,$91,$02,$97,$20,$31,$8a,$31,$33,$33,$92,$31,$33,$34,$00,$0f,$92,$02,$97,$20,$31,$89,$31,$33,$33,$92,$31,$33,$33,$00,$0d,$93,$02,$97,$20,$31,$8c,$31,$33,$33,$92,$30,$00,$0d,$94,$02,$97,$20,$31,$84,$31,$33,$33,$92,$31,$00,$0f,$95,$02,$97,$20,$87,$31,$85,$31,$33,$33,$88,$92,$31,$00,$11,$96,$02,$97,$20,$87,$31,$96,$31,$33,$33,$88,$92,$31,$33,$32,$00,$11,$97,$02,$97,$20,$87,$31,$b2,$31,$33,$33,$88,$92,$31,$33,$33,$00,$0f,$98,$02,$97,$20,$87,$31,$92,$31,$33,$33,$88,$92,$30,$00,$17,$99,$02,$97,$20,$87,$31,$90,$31,$33,$33,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$17,$9a,$02,$97,$20,$87,$31,$91,$31,$33,$33,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$17,$9b,$02,$97,$20,$87,$31,$8f,$31,$33,$33,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$0f,$9c,$02,$97,$20,$87,$31,$94,$31,$33,$33,$88,$92,$30,$00,$0f,$9d,$02,$97,$20,$87,$31,$93,$31,$33,$33,$88,$92,$30,$00,$23,$9e,$02,$97,$20,$31,$38,$37,$38,$35,$39,$34,$31,$30,$8a,$37,$36,$35,$37,$31,$36,$37,$33,$32,$92,$39,$35,$33,$35,$37,$36,$31,$34,$32,$00,$1b,$9f,$02,$97,$20,$31,$38,$37,$38,$35,$39,$34,$31,$30,$8c,$37,$36,$35,$37,$31,$36,$37,$33,$32,$92,$30,$00,$23,$a0,$02,$97,$20,$31,$38,$37,$38,$35,$39,$34,$31,$30,$84,$37,$36,$35,$37,$31,$36,$37,$33,$32,$92,$31,$38,$37,$38,$35,$39,$34,$31,$30,$00,$25,$a1,$02,$97,$20,$87,$31,$38,$37,$38,$35,$39,$34,$31,$30,$85,$37,$36,$35,$37,$31,$36,$37,$33,$32,$88,$92,$31,$35,$33,$32,$35,$36,$31,$34,$34,$00,$25,$a2,$02,$97,$20,$87,$31,$38,$37,$38,$35,$39,$34,$31,$30,$96,$37,$36,$35,$37,$31,$36,$37,$33,$32,$88,$92,$36,$34,$37,$30,$36,$33,$38,$35,$34,$00,$25,$a3,$02,$97,$20,$87,$31,$38,$37,$38,$35,$39,$34,$31,$30,$b2,$37,$36,$35,$37,$31,$36,$37,$33,$32,$88,$92,$38,$30,$30,$33,$31,$39,$39,$39,$38,$00,$1d,$a4,$02,$97,$20,$87,$31,$38,$37,$38,$35,$39,$34,$31,$30,$92,$37,$36,$35,$37,$31,$36,$37,$33,$32,$88,$92,$30,$00,$25,$a5,$02,$97,$20,$87,$31,$38,$37,$38,$35,$39,$34,$31,$30,$90,$37,$36,$35,$37,$31,$36,$37,$33,$32,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$25,$a6,$02,$97,$20,$87,$31,$38,$37,$38,$35,$39,$34,$31,$30,$91,$37,$36,$35,$37,$31,$36,$37,$33,$32,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$25,$a7,$02,$97,$20,$87,$31,$38,$37,$38,$35,$39,$34,$31,$30,$8f,$37,$36,$35,$37,$31,$36,$37,$33,$32,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$a8,$02,$97,$20,$87,$31,$38,$37,$38,$35,$39,$34,$31,$30,$94,$37,$36,$35,$37,$31,$36,$37,$33,$32,$88,$92,$30,$00,$1d,$a9,$02,$97,$20,$87,$31,$38,$37,$38,$35,$39,$34,$31,$30,$93,$37,$36,$35,$37,$31,$36,$37,$33,$32,$88,$92,$30,$00,$1b,$aa,$02,$97,$20,$30,$8a,$33,$31,$39,$31,$30,$36,$38,$33,$36,$92,$33,$31,$39,$31,$30,$36,$38,$33,$36,$00,$13,$ab,$02,$97,$20,$30,$89,$33,$31,$39,$31,$30,$36,$38,$33,$36,$92,$30,$00,$13,$ac,$02,$97,$20,$30,$8c,$33,$31,$39,$31,$30,$36,$38,$33,$36,$92,$30,$00,$13,$ad,$02,$97,$20,$30,$84,$33,$31,$39,$31,$30,$36,$38,$33,$36,$92,$30,$00,$15,$ae,$02,$97,$20,$87,$30,$85,$33,$31,$39,$31,$30,$36,$38,$33,$36,$88,$92,$30,$00,$1d,$af,$02,$97,$20,$87,$30,$96,$33,$31,$39,$31,$30,$36,$38,$33,$36,$88,$92,$33,$31,$39,$31,$30,$36,$38,$33,$36,$00,$1d,$b0,$02,$97,$20,$87,$30,$b2,$33,$31,$39,$31,$30,$36,$38,$33,$36,$88,$92,$33,$31,$39,$31,$30,$36,$38,$33,$36,$00,$15,$b1,$02,$97,$20,$87,$30,$92,$33,$31,$39,$31,$30,$36,$38,$33,$36,$88,$92,$30,$00,$1d,$b2,$02,$97,$20,$87,$30,$90,$33,$31,$39,$31,$30,$36,$38,$33,$36,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$b3,$02,$97,$20,$87,$30,$91,$33,$31,$39,$31,$30,$36,$38,$33,$36,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$b4,$02,$97,$20,$87,$30,$8f,$33,$31,$39,$31,$30,$36,$38,$33,$36,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$15,$b5,$02,$97,$20,$87,$30,$94,$33,$31,$39,$31,$30,$36,$38,$33,$36,$88,$92,$30,$00,$15,$b6,$02,$97,$20,$87,$30,$93,$33,$31,$39,$31,$30,$36,$38,$33,$36,$88,$92,$30,$00,$1b,$b7,$02,$97,$20,$30,$8a,$31,$30,$34,$31,$33,$31,$30,$32,$31,$92,$31,$30,$34,$31,$33,$31,$30,$32,$31,$00,$13,$b8,$02,$97,$20,$30,$89,$31,$30,$34,$31,$33,$31,$30,$32,$31,$92,$30,$00,$13,$b9,$02,$97,$20,$30,$8c,$31,$30,$34,$31,$33,$31,$30,$32,$31,$92,$30,$00,$13,$ba,$02,$97,$20,$30,$84,$31,$30,$34,$31,$33,$31,$30,$32,$31,$92,$30,$00,$15,$bb,$02,$97,$20,$87,$30,$85,$31,$30,$34,$31,$33,$31,$30,$32,$31,$88,$92,$30,$00,$1d,$bc,$02,$97,$20,$87,$30,$96,$31,$30,$34,$31,$33,$31,$30,$32,$31,$88,$92,$31,$30,$34,$31,$33,$31,$30,$32,$31,$00,$1d,$bd,$02,$97,$20,$87,$30,$b2,$31,$30,$34,$31,$33,$31,$30,$32,$31,$88,$92,$31,$30,$34,$31,$33,$31,$30,$32,$31,$00,$15,$be,$02,$97,$20,$87,$30,$92,$31,$30,$34,$31,$33,$31,$30,$32,$31,$88,$92,$30,$00,$1d,$bf,$02,$97,$20,$87,$30,$90,$31,$30,$34,$31,$33,$31,$30,$32,$31,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$c0,$02,$97,$20,$87,$30,$91,$31,$30,$34,$31,$33,$31,$30,$32,$31,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$c1,$02,$97,$20,$87,$30,$8f,$31,$30,$34,$31,$33,$31,$30,$32,$31,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$15,$c2,$02,$97,$20,$87,$30,$94,$31,$30,$34,$31,$33,$31,$30,$32,$31,$88,$92,$30,$00,$15,$c3,$02,$97,$20,$87,$30,$93,$31,$30,$34,$31,$33,$31,$30,$32,$31,$88,$92,$30,$00,$0f,$c4,$02,$97,$20,$39,$32,$31,$8a,$30,$92,$39,$32,$31,$00,$0f,$c5,$02,$97,$20,$39,$32,$31,$8b,$30,$92,$39,$32,$31,$00,$0d,$c6,$02,$97,$20,$39,$32,$31,$89,$30,$92,$30,$00,$0f,$c7,$02,$97,$20,$87,$39,$32,$31,$85,$30,$88,$92,$30,$00,$11,$c8,$02,$97,$20,$87,$39,$32,$31,$96,$30,$88,$92,$39,$32,$31,$00,$11,$c9,$02,$97,$20,$87,$39,$32,$31,$b2,$30,$88,$92,$39,$32,$31,$00,$0f,$ca,$02,$97,$20,$87,$39,$32,$31,$92,$30,$88,$92,$30,$00,$17,$cb,$02,$97,$20,$87,$39,$32,$31,$90,$30,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$0f,$cc,$02,$97,$20,$87,$39,$32,$31,$91,$30,$88,$92,$30,$00,$0f,$cd,$02,$97,$20,$87,$39,$32,$31,$8f,$30,$88,$92,$30,$00,$17,$ce,$02,$97,$20,$87,$39,$32,$31,$94,$30,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$17,$cf,$02,$97,$20,$87,$39,$32,$31,$93,$30,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$0b,$d0,$02,$97,$20,$38,$8a,$30,$92,$38,$00,$0b,$d1,$02,$97,$20,$38,$8b,$30,$92,$38,$00,$0b,$d2,$02,$97,$20,$38,$89,$30,$92,$30,$00,$0d,$d3,$02,$97,$20,$87,$38,$85,$30,$88,$92,$30,$00,$0d,$d4,$02,$97,$20,$87,$38,$96,$30,$88,$92,$38,$00,$0d,$d5,$02,$97,$20,$87,$38,$b2,$30,$88,$92,$38,$00,$0d,$d6,$02,$97,$20,$87,$38,$92,$30,$88,$92,$30,$00,$15,$d7,$02,$97,$20,$87,$38,$90,$30,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$0d,$d8,$02,$97,$20,$87,$38,$91,$30,$88,$92,$30,$00,$0d,$d9,$02,$97,$20,$87,$38,$8f,$30,$88,$92,$30,$00,$15,$da,$02,$97,$20,$87,$38,$94,$30,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$15,$db,$02,$97,$20,$87,$38,$93,$30,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$dc,$02,$97,$20,$39,$37,$36,$33,$32,$36,$31,$38,$34,$8a,$39,$33,$32,$92,$39,$37,$36,$33,$32,$37,$31,$31,$36,$00,$1d,$dd,$02,$97,$20,$39,$37,$36,$33,$32,$36,$31,$38,$34,$8b,$39,$33,$32,$92,$39,$37,$36,$33,$32,$35,$32,$35,$32,$00,$1b,$de,$02,$97,$20,$39,$37,$36,$33,$32,$36,$31,$38,$34,$8c,$39,$33,$32,$92,$31,$30,$34,$37,$35,$36,$30,$00,$17,$df,$02,$97,$20,$39,$37,$36,$33,$32,$36,$31,$38,$34,$84,$39,$33,$32,$92,$32,$36,$34,$00,$19,$e0,$02,$97,$20,$87,$39,$37,$36,$33,$32,$36,$31,$38,$34,$85,$39,$33,$32,$88,$92,$35,$34,$34,$00,$1f,$e1,$02,$97,$20,$87,$39,$37,$36,$33,$32,$36,$31,$38,$34,$96,$39,$33,$32,$88,$92,$39,$37,$36,$33,$32,$36,$30,$32,$38,$00,$1f,$e2,$02,$97,$20,$87,$39,$37,$36,$33,$32,$36,$31,$38,$34,$b2,$39,$33,$32,$88,$92,$39,$37,$36,$33,$32,$36,$35,$37,$32,$00,$17,$e3,$02,$97,$20,$87,$39,$37,$36,$33,$32,$36,$31,$38,$34,$92,$39,$33,$32,$88,$92,$30,$00,$1f,$e4,$02,$97,$20,$87,$39,$37,$36,$33,$32,$36,$31,$38,$34,$90,$39,$33,$32,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$17,$e5,$02,$97,$20,$87,$39,$37,$36,$33,$32,$36,$31,$38,$34,$91,$39,$33,$32,$88,$92,$30,$00,$17,$e6,$02,$97,$20,$87,$39,$37,$36,$33,$32,$36,$31,$38,$34,$8f,$39,$33,$32,$88,$92,$30,$00,$1f,$e7,$02,$97,$20,$87,$39,$37,$36,$33,$32,$36,$31,$38,$34,$94,$39,$33,$32,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1f,$e8,$02,$97,$20,$87,$39,$37,$36,$33,$32,$36,$31,$38,$34,$93,$39,$33,$32,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$24,$e9,$02,$97,$20,$31,$30,$33,$35,$32,$33,$38,$31,$34,$38,$8a,$36,$30,$38,$38,$33,$37,$33,$31,$92,$31,$30,$39,$36,$31,$32,$31,$38,$37,$39,$00,$23,$ea,$02,$97,$20,$31,$30,$33,$35,$32,$33,$38,$31,$34,$38,$8b,$36,$30,$38,$38,$33,$37,$33,$31,$92,$39,$37,$34,$33,$35,$34,$34,$31,$37,$00,$1c,$eb,$02,$97,$20,$31,$30,$33,$35,$32,$33,$38,$31,$34,$38,$8c,$36,$30,$38,$38,$33,$37,$33,$31,$92,$31,$37,$00,$20,$ec,$02,$97,$20,$31,$30,$33,$35,$32,$33,$38,$31,$34,$38,$84,$36,$30,$38,$38,$33,$37,$33,$31,$92,$32,$31,$34,$37,$32,$31,$00,$24,$ed,$02,$97,$20,$87,$31,$30,$33,$35,$32,$33,$38,$31,$34,$38,$85,$36,$30,$38,$38,$33,$37,$33,$31,$88,$92,$32,$37,$32,$36,$33,$37,$34,$34,$00,$26,$ee,$02,$97,$20,$87,$31,$30,$33,$35,$32,$33,$38,$31,$34,$38,$96,$36,$30,$38,$38,$33,$37,$33,$31,$88,$92,$31,$30,$34,$31,$35,$39,$34,$33,$39,$31,$00,$26,$ef,$02,$97,$20,$87,$31,$30,$33,$35,$32,$33,$38,$31,$34,$38,$b2,$36,$30,$38,$38,$33,$37,$33,$31,$88,$92,$31,$30,$36,$38,$38,$35,$38,$31,$33,$35,$00,$1d,$f0,$02,$97,$20,$87,$31,$30,$33,$35,$32,$33,$38,$31,$34,$38,$92,$36,$30,$38,$38,$33,$37,$33,$31,$88,$92,$30,$00,$25,$f1,$02,$97,$20,$87,$31,$30,$33,$35,$32,$33,$38,$31,$34,$38,$90,$36,$30,$38,$38,$33,$37,$33,$31,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$1d,$f2,$02,$97,$20,$87,$31,$30,$33,$35,$32,$33,$38,$31,$34,$38,$91,$36,$30,$38,$38,$33,$37,$33,$31,$88,$92,$30,$00,$1d,$f3,$02,$97,$20,$87,$31,$30,$33,$35,$32,$33,$38,$31,$34,$38,$8f,$36,$30,$38,$38,$33,$37,$33,$31,$88,$92,$30,$00,$25,$f4,$02,$97,$20,$87,$31,$30,$33,$35,$32,$33,$38,$31,$34,$38,$94,$36,$30,$38,$38,$33,$37,$33,$31,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$25,$f5,$02,$97,$20,$87,$31,$30,$33,$35,$32,$33,$38,$31,$34,$38,$93,$36,$30,$38,$38,$33,$37,$33,$31,$88,$92,$82,$66,$66,$66,$66,$66,$66,$66,$66,$00,$00
>2208	33 35 34 37 31 8a 33 37 36 33 35 34 37 31 92 37
>2218	35 32 37 30 39 34 32 00 19 02 00 97 20 33 37 36
>2228	33 35 34 37 31 8c 33 37 36 33 35 34 37 31 92 31
>2238	00 19 03 00 97 20 33 37 36 33 35 34 37 31 84 33
>2248	37 36 33 35 34 37 31 92 30 00 22 04 00 97 20 87
>2258	33 37 36 33 35 34 37 31 85 33 37 36 33 35 34 37
>2268	31 88 92 33 37 36 33 35 34 37 31 00 1b 05 00 97
>2278	20 87 33 37 36 33 35 34 37 31 96 33 37 36 33 35
>2288	34 37 31 88 92 30 00 22 06 00 97 20 87 33 37 36
>2298	33 35 34 37 31 b2 33 37 36 33 35 34 37 31 88 92
>22a8	33 37 36 33 35 34 37 31 00 23 07 00 97 20 87 33
>22b8	37 36 33 35 34 37 31 92 33 37 36 33 35 34 37 31
>22c8	88 92 82 66 66 66 66 66 66 66 66 00 1b 08 00 97
>22d8	20 87 33 37 36 33 35 34 37 31 90 33 37 36 33 35
>22e8	34 37 31 88 92 30 00 1b 09 00 97 20 87 33 37 36
>22f8	33 35 34 37 31 91 33 37 36 33 35 34 37 31 88 92
>2308	30 00 23 0a 00 97 20 87 33 37 36 33 35 34 37 31
>2318	8f 33 37 36 33 35 34 37 31 88 92 82 66 66 66 66
>2328	66 66 66 66 00 1b 0b 00 97 20 87 33 37 36 33 35
>2338	34 37 31 94 33 37 36 33 35 34 37 31 88 92 30 00
>2348	23 0c 00 97 20 87 33 37 36 33 35 34 37 31 93 33
>2358	37 36 33 35 34 37 31 88 92 82 66 66 66 66 66 66
>2368	66 66 00 22 0d 00 97 20 37 34 31 33 33 33 39 32
>2378	35 8a 35 36 33 38 32 37 33 37 92 37 39 37 37 31
>2388	36 36 36 32 00 22 0e 00 97 20 37 34 31 33 33 33
>2398	39 32 35 8b 35 36 33 38 32 37 33 37 92 36 38 34
>23a8	39 35 31 31 38 38 00 1b 0f 00 97 20 37 34 31 33
>23b8	33 33 39 32 35 8c 35 36 33 38 32 37 33 37 92 31
>23c8	33 00 20 10 00 97 20 37 34 31 33 33 33 39 32 35
>23d8	84 35 36 33 38 32 37 33 37 92 38 33 35 38 33 34
>23e8	34 00 21 11 00 97 20 87 37 34 31 33 33 33 39 32
>23f8	35 85 35 36 33 38 32 37 33 37 88 92 38 30 37 31
>2408	36 39 00 24 12 00 97 20 87 37 34 31 33 33 33 39
>2418	32 35 96 35 36 33 38 32 37 33 37 88 92 37 39 36
>2428	31 30 32 33 32 34 00 24 13 00 97 20 87 37 34 31
>2438	33 33 33 39 32 35 b2 35 36 33 38 32 37 33 37 88
>2448	92 37 39 36 39 30 39 34 39 33 00 1c 14 00 97 20
>2458	87 37 34 31 33 33 33 39 32 35 92 35 36 33 38 32
>2468	37 33 37 88 92 30 00 24 15 00 97 20 87 37 34 31
>2478	33 33 33 39 32 35 90 35 36 33 38 32 37 33 37 88
>2488	92 82 66 66 66 66 66 66 66 66 00 1c 16 00 97 20
>2498	87 37 34 31 33 33 33 39 32 35 91 35 36 33 38 32
>24a8	37 33 37 88 92 30 00 1c 17 00 97 20 87 37 34 31
>24b8	33 33 33 39 32 35 8f 35 36 33 38 32 37 33 37 88
>24c8	92 30 00 24 18 00 97 20 87 37 34 31 33 33 33 39
>24d8	32 35 94 35 36 33 38 32 37 33 37 88 92 82 66 66
>24e8	66 66 66 66 66 66 00 24 19 00 97 20 87 37 34 31
>24f8	33 33 33 39 32 35 93 35 36 33 38 32 37 33 37 88
>2508	92 82 66 66 66 66 66 66 66 66 00 0c 1a 00 97 20
>2518	35 8a 35 92 31 30 00 0c 1b 00 97 20 35 89 35 92
>2528	32 35 00 0b 1c 00 97 20 35 8c 35 92 31 00 0b 1d
>2538	00 97 20 35 84 35 92 30 00 0d 1e 00 97 20 87 35
>2548	85 35 88 92 35 00 0d 1f 00 97 20 87 35 96 35 88
>2558	92 30 00 0d 20 00 97 20 87 35 b2 35 88 92 35 00
>2568	15 21 00 97 20 87 35 92 35 88 92 82 66 66 66 66
>2578	66 66 66 66 00 0d 22 00 97 20 87 35 90 35 88 92
>2588	30 00 0d 23 00 97 20 87 35 91 35 88 92 30 00 15
>2598	24 00 97 20 87 35 8f 35 88 92 82 66 66 66 66 66
>25a8	66 66 66 00 0d 25 00 97 20 87 35 94 35 88 92 30
>25b8	00 15 26 00 97 20 87 35 93 35 88 92 82 66 66 66
>25c8	66 66 66 66 66 00 1b 27 00 97 20 32 32 38 36 32
>25d8	38 32 35 8a 39 38 39 92 32 32 38 36 33 38 31 34
>25e8	00 1b 28 00 97 20 32 32 38 36 32 38 32 35 8b 39
>25f8	38 39 92 32 32 38 36 31 38 33 36 00 18 29 00 97
>2608	20 32 32 38 36 32 38 32 35 8c 39 38 39 92 32 33
>2618	31 31 37 00 16 2a 00 97 20 32 32 38 36 32 38 32
>2628	35 84 39 38 39 92 31 31 32 00 18 2b 00 97 20 87
>2638	32 32 38 36 32 38 32 35 85 39 38 39 88 92 39 36
>2648	39 00 1d 2c 00 97 20 87 32 32 38 36 32 38 32 35
>2658	96 39 38 39 88 92 32 32 38 36 31 38 37 36 00 1d
>2668	2d 00 97 20 87 32 32 38 36 32 38 32 35 b2 39 38
>2678	39 88 92 32 32 38 36 32 38 34 35 00 16 2e 00 97
>2688	20 87 32 32 38 36 32 38 32 35 92 39 38 39 88 92
>2698	30 00 1e 2f 00 97 20 87 32 32 38 36 32 38 32 35
>26a8	90 39 38 39 88 92 82 66 66 66 66 66 66 66 66 00
>26b8	16 30 00 97 20 87 32 32 38 36 32 38 32 35 91 39
>26c8	38 39 88 92 30 00 16 31 00 97 20 87 32 32 38 36
>26d8	32 38 32 35 8f 39 38 39 88 92 30 00 1e 32 00 97
>26e8	20 87 32 32 38 36 32 38 32 35 94 39 38 39 88 92
>26f8	82 66 66 66 66 66 66 66 66 00 1e 33 00 97 20 87
>2708	32 32 38 36 32 38 32 35 93 39 38 39 88 92 82 66
>2718	66 66 66 66 66 66 66 00 1d 34 00 97 20 31 30 31
>2728	34 32 37 30 30 32 38 8a 33 92 31 30 31 34 32 37
>2738	30 30 33 31 00 1d 35 00 97 20 31 30 31 34 32 37
>2748	30 30 32 38 8b 33 92 31 30 31 34 32 37 30 30 32
>2758	35 00 1c 36 00 97 20 31 30 31 34 32 37 30 30 32
>2768	38 8c 33 92 33 33 38 30 39 30 30 30 39 00 14 37
>2778	00 97 20 31 30 31 34 32 37 30 30 32 38 84 33 92
>2788	31 00 16 38 00 97 20 87 31 30 31 34 32 37 30 30
>2798	32 38 85 33 88 92 30 00 1f 39 00 97 20 87 31 30
>27a8	31 34 32 37 30 30 32 38 96 33 88 92 31 30 31 34
>27b8	32 37 30 30 33 31 00 1f 3a 00 97 20 87 31 30 31
>27c8	34 32 37 30 30 32 38 b2 33 88 92 31 30 31 34 32
>27d8	37 30 30 33 31 00 16 3b 00 97 20 87 31 30 31 34
>27e8	32 37 30 30 32 38 92 33 88 92 30 00 1e 3c 00 97
>27f8	20 87 31 30 31 34 32 37 30 30 32 38 90 33 88 92
>2808	82 66 66 66 66 66 66 66 66 00 16 3d 00 97 20 87
>2818	31 30 31 34 32 37 30 30 32 38 91 33 88 92 30 00
>2828	16 3e 00 97 20 87 31 30 31 34 32 37 30 30 32 38
>2838	8f 33 88 92 30 00 1e 3f 00 97 20 87 31 30 31 34
>2848	32 37 30 30 32 38 94 33 88 92 82 66 66 66 66 66
>2858	66 66 66 00 1e 40 00 97 20 87 31 30 31 34 32 37
>2868	30 30 32 38 93 33 88 92 82 66 66 66 66 66 66 66
>2878	66 00 1d 41 00 97 20 36 33 37 8a 39 30 33 36 37
>2888	30 36 34 32 92 39 30 33 36 37 31 32 37 39 00 15
>2898	42 00 97 20 36 33 37 8c 39 30 33 36 37 30 36 34
>28a8	32 92 30 00 17 43 00 97 20 36 33 37 84 39 30 33
>28b8	36 37 30 36 34 32 92 36 33 37 00 19 44 00 97 20
>28c8	87 36 33 37 85 39 30 33 36 37 30 36 34 32 88 92
>28d8	36 32 34 00 1f 45 00 97 20 87 36 33 37 96 39 30
>28e8	33 36 37 30 36 34 32 88 92 39 30 33 36 37 30 30
>28f8	33 31 00 1f 46 00 97 20 87 36 33 37 b2 39 30 33
>2908	36 37 30 36 34 32 88 92 39 30 33 36 37 30 36 35
>2918	35 00 17 47 00 97 20 87 36 33 37 92 39 30 33 36
>2928	37 30 36 34 32 88 92 30 00 1f 48 00 97 20 87 36
>2938	33 37 90 39 30 33 36 37 30 36 34 32 88 92 82 66
>2948	66 66 66 66 66 66 66 00 1f 49 00 97 20 87 36 33
>2958	37 91 39 30 33 36 37 30 36 34 32 88 92 82 66 66
>2968	66 66 66 66 66 66 00 1f 4a 00 97 20 87 36 33 37
>2978	8f 39 30 33 36 37 30 36 34 32 88 92 82 66 66 66
>2988	66 66 66 66 66 00 17 4b 00 97 20 87 36 33 37 94
>2998	39 30 33 36 37 30 36 34 32 88 92 30 00 17 4c 00
>29a8	97 20 87 36 33 37 93 39 30 33 36 37 30 36 34 32
>29b8	88 92 30 00 0b 4d 00 97 20 34 8a 30 92 34 00 0b
>29c8	4e 00 97 20 34 8b 30 92 34 00 0b 4f 00 97 20 34
>29d8	89 30 92 30 00 0d 50 00 97 20 87 34 85 30 88 92
>29e8	30 00 0d 51 00 97 20 87 34 96 30 88 92 34 00 0d
>29f8	52 00 97 20 87 34 b2 30 88 92 34 00 0d 53 00 97
>2a08	20 87 34 92 30 88 92 30 00 15 54 00 97 20 87 34
>2a18	90 30 88 92 82 66 66 66 66 66 66 66 66 00 0d 55
>2a28	00 97 20 87 34 91 30 88 92 30 00 0d 56 00 97 20
>2a38	87 34 8f 30 88 92 30 00 15 57 00 97 20 87 34 94
>2a48	30 88 92 82 66 66 66 66 66 66 66 66 00 15 58 00
>2a58	97 20 87 34 93 30 88 92 82 66 66 66 66 66 66 66
>2a68	66 00 0f 59 00 97 20 30 8a 34 32 38 92 34 32 38
>2a78	00 0d 5a 00 97 20 30 89 34 32 38 92 30 00 0d 5b
>2a88	00 97 20 30 8c 34 32 38 92 30 00 0d 5c 00 97 20
>2a98	30 84 34 32 38 92 30 00 0f 5d 00 97 20 87 30 85
>2aa8	34 32 38 88 92 30 00 11 5e 00 97 20 87 30 96 34
>2ab8	32 38 88 92 34 32 38 00 11 5f 00 97 20 87 30 b2
>2ac8	34 32 38 88 92 34 32 38 00 0f 60 00 97 20 87 30
>2ad8	92 34 32 38 88 92 30 00 17 61 00 97 20 87 30 90
>2ae8	34 32 38 88 92 82 66 66 66 66 66 66 66 66 00 17
>2af8	62 00 97 20 87 30 91 34 32 38 88 92 82 66 66 66
>2b08	66 66 66 66 66 00 17 63 00 97 20 87 30 8f 34 32
>2b18	38 88 92 82 66 66 66 66 66 66 66 66 00 0f 64 00
>2b28	97 20 87 30 94 34 32 38 88 92 30 00 0f 65 00 97
>2b38	20 87 30 93 34 32 38 88 92 30 00 1b 66 00 97 20
>2b48	31 8a 32 32 31 39 33 34 31 30 31 92 32 32 31 39
>2b58	33 34 31 30 32 00 1b 67 00 97 20 31 89 32 32 31
>2b68	39 33 34 31 30 31 92 32 32 31 39 33 34 31 30 31
>2b78	00 13 68 00 97 20 31 8c 32 32 31 39 33 34 31 30
>2b88	31 92 30 00 13 69 00 97 20 31 84 32 32 31 39 33
>2b98	34 31 30 31 92 31 00 15 6a 00 97 20 87 31 85 32
>2ba8	32 31 39 33 34 31 30 31 88 92 31 00 1d 6b 00 97
>2bb8	20 87 31 96 32 32 31 39 33 34 31 30 31 88 92 32
>2bc8	32 31 39 33 34 31 30 30 00 1d 6c 00 97 20 87 31
>2bd8	b2 32 32 31 39 33 34 31 30 31 88 92 32 32 31 39
>2be8	33 34 31 30 31 00 15 6d 00 97 20 87 31 92 32 32
>2bf8	31 39 33 34 31 30 31 88 92 30 00 1d 6e 00 97 20
>2c08	87 31 90 32 32 31 39 33 34 31 30 31 88 92 82 66
>2c18	66 66 66 66 66 66 66 00 1d 6f 00 97 20 87 31 91
>2c28	32 32 31 39 33 34 31 30 31 88 92 82 66 66 66 66
>2c38	66 66 66 66 00 1d 70 00 97 20 87 31 8f 32 32 31
>2c48	39 33 34 31 30 31 88 92 82 66 66 66 66 66 66 66
>2c58	66 00 15 71 00 97 20 87 31 94 32 32 31 39 33 34
>2c68	31 30 31 88 92 30 00 15 72 00 97 20 87 31 93 32
>2c78	32 31 39 33 34 31 30 31 88 92 30 00 1d 73 00 97
>2c88	20 37 35 35 8a 35 35 30 39 31 37 34 33 37 92 35
>2c98	35 30 39 31 38 31 39 32 00 15 74 00 97 20 37 35
>2ca8	35 8c 35 35 30 39 31 37 34 33 37 92 30 00 17 75
>2cb8	00 97 20 37 35 35 84 35 35 30 39 31 37 34 33 37
>2cc8	92 37 35 35 00 18 76 00 97 20 87 37 35 35 85 35
>2cd8	35 30 39 31 37 34 33 37 88 92 34 39 00 1f 77 00
>2ce8	97 20 87 37 35 35 96 35 35 30 39 31 37 34 33 37
>2cf8	88 92 35 35 30 39 31 38 30 39 34 00 1f 78 00 97
>2d08	20 87 37 35 35 b2 35 35 30 39 31 37 34 33 37 88
>2d18	92 35 35 30 39 31 38 31 34 33 00 17 79 00 97 20
>2d28	87 37 35 35 92 35 35 30 39 31 37 34 33 37 88 92
>2d38	30 00 1f 7a 00 97 20 87 37 35 35 90 35 35 30 39
>2d48	31 37 34 33 37 88 92 82 66 66 66 66 66 66 66 66
>2d58	00 1f 7b 00 97 20 87 37 35 35 91 35 35 30 39 31
>2d68	37 34 33 37 88 92 82 66 66 66 66 66 66 66 66 00
>2d78	1f 7c 00 97 20 87 37 35 35 8f 35 35 30 39 31 37
>2d88	34 33 37 88 92 82 66 66 66 66 66 66 66 66 00 17
>2d98	7d 00 97 20 87 37 35 35 94 35 35 30 39 31 37 34
>2da8	33 37 88 92 30 00 17 7e 00 97 20 87 37 35 35 93
>2db8	35 35 30 39 31 37 34 33 37 88 92 30 00 23 7f 00
>2dc8	97 20 36 37 36 39 33 30 34 39 34 8a 32 38 33 31
>2dd8	34 34 33 32 32 92 39 36 30 30 37 34 38 31 36 00
>2de8	23 80 00 97 20 36 37 36 39 33 30 34 39 34 8b 32
>2df8	38 33 31 34 34 33 32 32 92 33 39 33 37 38 36 31
>2e08	37 32 00 1b 81 00 97 20 36 37 36 39 33 30 34 39
>2e18	34 8c 32 38 33 31 34 34 33 32 32 92 32 00 23 82
>2e28	00 97 20 36 37 36 39 33 30 34 39 34 84 32 38 33
>2e38	31 34 34 33 32 32 92 31 31 30 36 34 31 38 35 30
>2e48	00 23 83 00 97 20 87 36 37 36 39 33 30 34 39 34
>2e58	85 32 38 33 31 34 34 33 32 32 88 92 34 32 30 32
>2e68	36 32 36 00 25 84 00 97 20 87 36 37 36 39 33 30
>2e78	34 39 34 96 32 38 33 31 34 34 33 32 32 88 92 39
>2e88	35 31 36 36 39 35 36 34 00 25 85 00 97 20 87 36
>2e98	37 36 39 33 30 34 39 34 b2 32 38 33 31 34 34 33
>2ea8	32 32 88 92 39 35 35 38 37 32 31 39 30 00 1d 86
>2eb8	00 97 20 87 36 37 36 39 33 30 34 39 34 92 32 38
>2ec8	33 31 34 34 33 32 32 88 92 30 00 25 87 00 97 20
>2ed8	87 36 37 36 39 33 30 34 39 34 90 32 38 33 31 34
>2ee8	34 33 32 32 88 92 82 66 66 66 66 66 66 66 66 00
>2ef8	1d 88 00 97 20 87 36 37 36 39 33 30 34 39 34 91
>2f08	32 38 33 31 34 34 33 32 32 88 92 30 00 1d 89 00
>2f18	97 20 87 36 37 36 39 33 30 34 39 34 8f 32 38 33
>2f28	31 34 34 33 32 32 88 92 30 00 25 8a 00 97 20 87
>2f38	36 37 36 39 33 30 34 39 34 94 32 38 33 31 34 34
>2f48	33 32 32 88 92 82 66 66 66 66 66 66 66 66 00 25
>2f58	8b 00 97 20 87 36 37 36 39 33 30 34 39 34 93 32
>2f68	38 33 31 34 34 33 32 32 88 92 82 66 66 66 66 66
>2f78	66 66 66 00 24 8c 00 97 20 39 35 38 39 35 32 38
>2f88	30 36 8a 31 35 39 33 33 32 33 30 33 92 31 31 31
>2f98	38 32 38 35 31 30 39 00 23 8d 00 97 20 39 35 38
>2fa8	39 35 32 38 30 36 8b 31 35 39 33 33 32 33 30 33
>2fb8	92 37 39 39 36 32 30 35 30 33 00 1b 8e 00 97 20
>2fc8	39 35 38 39 35 32 38 30 36 8c 31 35 39 33 33 32
>2fd8	33 30 33 92 36 00 21 8f 00 97 20 39 35 38 39 35
>2fe8	32 38 30 36 84 31 35 39 33 33 32 33 30 33 92 32
>2ff8	39 35 38 39 38 38 00 25 90 00 97 20 87 39 35 38
>3008	39 35 32 38 30 36 85 31 35 39 33 33 32 33 30 33
>3018	88 92 31 35 33 36 33 30 30 32 32 00 25 91 00 97
>3028	20 87 39 35 38 39 35 32 38 30 36 96 31 35 39 33
>3038	33 32 33 30 33 88 92 38 31 31 30 32 35 30 36 35
>3048	00 25 92 00 97 20 87 39 35 38 39 35 32 38 30 36
>3058	b2 31 35 39 33 33 32 33 30 33 88 92 39 36 34 36
>3068	35 35 30 38 37 00 1d 93 00 97 20 87 39 35 38 39
>3078	35 32 38 30 36 92 31 35 39 33 33 32 33 30 33 88
>3088	92 30 00 25 94 00 97 20 87 39 35 38 39 35 32 38
>3098	30 36 90 31 35 39 33 33 32 33 30 33 88 92 82 66
>30a8	66 66 66 66 66 66 66 00 1d 95 00 97 20 87 39 35
>30b8	38 39 35 32 38 30 36 91 31 35 39 33 33 32 33 30
>30c8	33 88 92 30 00 1d 96 00 97 20 87 39 35 38 39 35
>30d8	32 38 30 36 8f 31 35 39 33 33 32 33 30 33 88 92
>30e8	30 00 25 97 00 97 20 87 39 35 38 39 35 32 38 30
>30f8	36 94 31 35 39 33 33 32 33 30 33 88 92 82 66 66
>3108	66 66 66 66 66 66 00 25 98 00 97 20 87 39 35 38
>3118	39 35 32 38 30 36 93 31 35 39 33 33 32 33 30 33
>3128	88 92 82 66 66 66 66 66 66 66 66 00 24 99 00 97
>3138	20 37 39 32 34 31 30 35 37 38 8a 38 34 35 32 39
>3148	32 31 33 39 92 31 36 33 37 37 30 32 37 31 37 00
>3158	1b 9a 00 97 20 37 39 32 34 31 30 35 37 38 8c 38
>3168	34 35 32 39 32 31 33 39 92 30 00 23 9b 00 97 20
>3178	37 39 32 34 31 30 35 37 38 84 38 34 35 32 39 32
>3188	31 33 39 92 37 39 32 34 31 30 35 37 38 00 25 9c
>3198	00 97 20 87 37 39 32 34 31 30 35 37 38 85 38 34
>31a8	35 32 39 32 31 33 39 88 92 35 37 32 36 36 31 38
>31b8	32 36 00 25 9d 00 97 20 87 37 39 32 34 31 30 35
>31c8	37 38 96 38 34 35 32 39 32 31 33 39 88 92 34 39
>31d8	32 33 37 39 30 36 35 00 26 9e 00 97 20 87 37 39
>31e8	32 34 31 30 35 37 38 b2 38 34 35 32 39 32 31 33
>31f8	39 88 92 31 30 36 35 30 34 30 38 39 31 00 1d 9f
>3208	00 97 20 87 37 39 32 34 31 30 35 37 38 92 38 34
>3218	35 32 39 32 31 33 39 88 92 30 00 25 a0 00 97 20
>3228	87 37 39 32 34 31 30 35 37 38 90 38 34 35 32 39
>3238	32 31 33 39 88 92 82 66 66 66 66 66 66 66 66 00
>3248	25 a1 00 97 20 87 37 39 32 34 31 30 35 37 38 91
>3258	38 34 35 32 39 32 31 33 39 88 92 82 66 66 66 66
>3268	66 66 66 66 00 25 a2 00 97 20 87 37 39 32 34 31
>3278	30 35 37 38 8f 38 34 35 32 39 32 31 33 39 88 92
>3288	82 66 66 66 66 66 66 66 66 00 1d a3 00 97 20 87
>3298	37 39 32 34 31 30 35 37 38 94 38 34 35 32 39 32
>32a8	31 33 39 88 92 30 00 1d a4 00 97 20 87 37 39 32
>32b8	34 31 30 35 37 38 93 38 34 35 32 39 32 31 33 39
>32c8	88 92 30 00 1b a5 00 97 20 30 8a 38 31 34 35 37
>32d8	39 31 34 34 92 38 31 34 35 37 39 31 34 34 00 13
>32e8	a6 00 97 20 30 89 38 31 34 35 37 39 31 34 34 92
>32f8	30 00 13 a7 00 97 20 30 8c 38 31 34 35 37 39 31
>3308	34 34 92 30 00 13 a8 00 97 20 30 84 38 31 34 35
>3318	37 39 31 34 34 92 30 00 15 a9 00 97 20 87 30 85
>3328	38 31 34 35 37 39 31 34 34 88 92 30 00 1d aa 00
>3338	97 20 87 30 96 38 31 34 35 37 39 31 34 34 88 92
>3348	38 31 34 35 37 39 31 34 34 00 1d ab 00 97 20 87
>3358	30 b2 38 31 34 35 37 39 31 34 34 88 92 38 31 34
>3368	35 37 39 31 34 34 00 15 ac 00 97 20 87 30 92 38
>3378	31 34 35 37 39 31 34 34 88 92 30 00 1d ad 00 97
>3388	20 87 30 90 38 31 34 35 37 39 31 34 34 88 92 82
>3398	66 66 66 66 66 66 66 66 00 1d ae 00 97 20 87 30
>33a8	91 38 31 34 35 37 39 31 34 34 88 92 82 66 66 66
>33b8	66 66 66 66 66 00 1d af 00 97 20 87 30 8f 38 31
>33c8	34 35 37 39 31 34 34 88 92 82 66 66 66 66 66 66
>33d8	66 66 00 15 b0 00 97 20 87 30 94 38 31 34 35 37
>33e8	39 31 34 34 88 92 30 00 15 b1 00 97 20 87 30 93
>33f8	38 31 34 35 37 39 31 34 34 88 92 30 00 1b b2 00
>3408	97 20 38 34 32 36 38 36 39 30 35 8a 31 92 38 34
>3418	32 36 38 36 39 30 36 00 1b b3 00 97 20 38 34 32
>3428	36 38 36 39 30 35 8b 31 92 38 34 32 36 38 36 39
>3438	30 34 00 1b b4 00 97 20 38 34 32 36 38 36 39 30
>3448	35 89 31 92 38 34 32 36 38 36 39 30 35 00 1b b5
>3458	00 97 20 38 34 32 36 38 36 39 30 35 8c 31 92 38
>3468	34 32 36 38 36 39 30 35 00 13 b6 00 97 20 38 34
>3478	32 36 38 36 39 30 35 84 31 92 30 00 15 b7 00 97
>3488	20 87 38 34 32 36 38 36 39 30 35 85 31 88 92 31
>3498	00 1d b8 00 97 20 87 38 34 32 36 38 36 39 30 35
>34a8	96 31 88 92 38 34 32 36 38 36 39 30 34 00 1d b9
>34b8	00 97 20 87 38 34 32 36 38 36 39 30 35 b2 31 88
>34c8	92 38 34 32 36 38 36 39 30 35 00 15 ba 00 97 20
>34d8	87 38 34 32 36 38 36 39 30 35 92 31 88 92 30 00
>34e8	1d bb 00 97 20 87 38 34 32 36 38 36 39 30 35 90
>34f8	31 88 92 82 66 66 66 66 66 66 66 66 00 15 bc 00
>3508	97 20 87 38 34 32 36 38 36 39 30 35 91 31 88 92
>3518	30 00 15 bd 00 97 20 87 38 34 32 36 38 36 39 30
>3528	35 8f 31 88 92 30 00 1d be 00 97 20 87 38 34 32
>3538	36 38 36 39 30 35 94 31 88 92 82 66 66 66 66 66
>3548	66 66 66 00 1d bf 00 97 20 87 38 34 32 36 38 36
>3558	39 30 35 93 31 88 92 82 66 66 66 66 66 66 66 66
>3568	00 24 c0 00 97 20 38 34 37 37 32 31 33 35 38 8a
>3578	34 32 36 35 34 31 36 38 35 92 31 32 37 34 32 36
>3588	33 30 34 33 00 23 c1 00 97 20 38 34 37 37 32 31
>3598	33 35 38 8b 34 32 36 35 34 31 36 38 35 92 34 32
>35a8	31 31 37 39 36 37 33 00 1b c2 00 97 20 38 34 37
>35b8	37 32 31 33 35 38 8c 34 32 36 35 34 31 36 38 35
>35c8	92 31 00 23 c3 00 97 20 38 34 37 37 32 31 33 35
>35d8	38 84 34 32 36 35 34 31 36 38 35 92 34 32 31 31
>35e8	37 39 36 37 33 00 25 c4 00 97 20 87 38 34 37 37
>35f8	32 31 33 35 38 85 34 32 36 35 34 31 36 38 35 88
>3608	92 32 36 38 36 39 38 31 31 36 00 25 c5 00 97 20
>3618	87 38 34 37 37 32 31 33 35 38 96 34 32 36 35 34
>3628	31 36 38 35 88 92 37 33 36 38 36 36 38 31 31 00
>3638	26 c6 00 97 20 87 38 34 37 37 32 31 33 35 38 b2
>3648	34 32 36 35 34 31 36 38 35 88 92 31 30 30 35 35
>3658	36 34 39 32 37 00 1d c7 00 97 20 87 38 34 37 37
>3668	32 31 33 35 38 92 34 32 36 35 34 31 36 38 35 88
>3678	92 30 00 25 c8 00 97 20 87 38 34 37 37 32 31 33
>3688	35 38 90 34 32 36 35 34 31 36 38 35 88 92 82 66
>3698	66 66 66 66 66 66 66 00 1d c9 00 97 20 87 38 34
>36a8	37 37 32 31 33 35 38 91 34 32 36 35 34 31 36 38
>36b8	35 88 92 30 00 1d ca 00 97 20 87 38 34 37 37 32
>36c8	31 33 35 38 8f 34 32 36 35 34 31 36 38 35 88 92
>36d8	30 00 25 cb 00 97 20 87 38 34 37 37 32 31 33 35
>36e8	38 94 34 32 36 35 34 31 36 38 35 88 92 82 66 66
>36f8	66 66 66 66 66 66 00 25 cc 00 97 20 87 38 34 37
>3708	37 32 31 33 35 38 93 34 32 36 35 34 31 36 38 35
>3718	88 92 82 66 66 66 66 66 66 66 66 00 1b cd 00 97
>3728	20 39 37 30 39 31 35 31 39 32 8a 34 92 39 37 30
>3738	39 31 35 31 39 36 00 1b ce 00 97 20 39 37 30 39
>3748	31 35 31 39 32 8b 34 92 39 37 30 39 31 35 31 38
>3758	38 00 1b cf 00 97 20 39 37 30 39 31 35 31 39 32
>3768	8c 34 92 32 34 32 37 32 38 37 39 38 00 13 d0 00
>3778	97 20 39 37 30 39 31 35 31 39 32 84 34 92 30 00
>3788	15 d1 00 97 20 87 39 37 30 39 31 35 31 39 32 85
>3798	34 88 92 30 00 1d d2 00 97 20 87 39 37 30 39 31
>37a8	35 31 39 32 96 34 88 92 39 37 30 39 31 35 31 39
>37b8	36 00 1d d3 00 97 20 87 39 37 30 39 31 35 31 39
>37c8	32 b2 34 88 92 39 37 30 39 31 35 31 39 36 00 15
>37d8	d4 00 97 20 87 39 37 30 39 31 35 31 39 32 92 34
>37e8	88 92 30 00 1d d5 00 97 20 87 39 37 30 39 31 35
>37f8	31 39 32 90 34 88 92 82 66 66 66 66 66 66 66 66
>3808	00 15 d6 00 97 20 87 39 37 30 39 31 35 31 39 32
>3818	91 34 88 92 30 00 15 d7 00 97 20 87 39 37 30 39
>3828	31 35 31 39 32 8f 34 88 92 30 00 1d d8 00 97 20
>3838	87 39 37 30 39 31 35 31 39 32 94 34 88 92 82 66
>3848	66 66 66 66 66 66 66 00 1d d9 00 97 20 87 39 37
>3858	30 39 31 35 31 39 32 93 34 88 92 82 66 66 66 66
>3868	66 66 66 66 00 24 da 00 97 20 37 34 33 33 37 32
>3878	36 39 33 8a 37 33 30 33 30 35 36 38 37 92 31 34
>3888	37 33 36 37 38 33 38 30 00 22 db 00 97 20 37 34
>3898	33 33 37 32 36 39 33 8b 37 33 30 33 30 35 36 38
>38a8	37 92 31 33 30 36 37 30 30 36 00 1b dc 00 97 20
>38b8	37 34 33 33 37 32 36 39 33 8c 37 33 30 33 30 35
>38c8	36 38 37 92 31 00 22 dd 00 97 20 37 34 33 33 37
>38d8	32 36 39 33 84 37 33 30 33 30 35 36 38 37 92 31
>38e8	33 30 36 37 30 30 36 00 25 de 00 97 20 87 37 34
>38f8	33 33 37 32 36 39 33 85 37 33 30 33 30 35 36 38
>3908	37 88 92 36 37 31 35 31 39 38 39 33 00 25 df 00
>3918	97 20 87 37 34 33 33 37 32 36 39 33 96 37 33 30
>3928	33 30 35 36 38 37 88 92 31 33 30 36 33 38 35 39
>3938	34 00 25 e0 00 97 20 87 37 34 33 33 37 32 36 39
>3948	33 b2 37 33 30 33 30 35 36 38 37 88 92 38 30 32
>3958	31 35 38 34 38 37 00 1d e1 00 97 20 87 37 34 33
>3968	33 37 32 36 39 33 92 37 33 30 33 30 35 36 38 37
>3978	88 92 30 00 25 e2 00 97 20 87 37 34 33 33 37 32
>3988	36 39 33 90 37 33 30 33 30 35 36 38 37 88 92 82
>3998	66 66 66 66 66 66 66 66 00 1d e3 00 97 20 87 37
>39a8	34 33 33 37 32 36 39 33 91 37 33 30 33 30 35 36
>39b8	38 37 88 92 30 00 1d e4 00 97 20 87 37 34 33 33
>39c8	37 32 36 39 33 8f 37 33 30 33 30 35 36 38 37 88
>39d8	92 30 00 25 e5 00 97 20 87 37 34 33 33 37 32 36
>39e8	39 33 94 37 33 30 33 30 35 36 38 37 88 92 82 66
>39f8	66 66 66 66 66 66 66 00 25 e6 00 97 20 87 37 34
>3a08	33 33 37 32 36 39 33 93 37 33 30 33 30 35 36 38
>3a18	37 88 92 82 66 66 66 66 66 66 66 66 00 24 e7 00
>3a28	97 20 36 36 35 34 37 33 38 33 34 8a 38 32 31 37
>3a38	37 30 33 39 35 92 31 34 38 37 32 34 34 32 32 39
>3a48	00 1b e8 00 97 20 36 36 35 34 37 33 38 33 34 8c
>3a58	38 32 31 37 37 30 33 39 35 92 30 00 23 e9 00 97
>3a68	20 36 36 35 34 37 33 38 33 34 84 38 32 31 37 37
>3a78	30 33 39 35 92 36 36 35 34 37 33 38 33 34 00 25
>3a88	ea 00 97 20 87 36 36 35 34 37 33 38 33 34 85 38
>3a98	32 31 37 37 30 33 39 35 88 92 35 34 38 30 31 36
>3aa8	31 33 38 00 25 eb 00 97 20 87 36 36 35 34 37 33
>3ab8	38 33 34 96 38 32 31 37 37 30 33 39 35 88 92 33
>3ac8	39 31 32 31 31 39 35 33 00 25 ec 00 97 20 87 36
>3ad8	36 35 34 37 33 38 33 34 b2 38 32 31 37 37 30 33
>3ae8	39 35 88 92 39 33 39 32 32 38 30 39 31 00 1d ed
>3af8	00 97 20 87 36 36 35 34 37 33 38 33 34 92 38 32
>3b08	31 37 37 30 33 39 35 88 92 30 00 25 ee 00 97 20
>3b18	87 36 36 35 34 37 33 38 33 34 90 38 32 31 37 37
>3b28	30 33 39 35 88 92 82 66 66 66 66 66 66 66 66 00
>3b38	25 ef 00 97 20 87 36 36 35 34 37 33 38 33 34 91
>3b48	38 32 31 37 37 30 33 39 35 88 92 82 66 66 66 66
>3b58	66 66 66 66 00 25 f0 00 97 20 87 36 36 35 34 37
>3b68	33 38 33 34 8f 38 32 31 37 37 30 33 39 35 88 92
>3b78	82 66 66 66 66 66 66 66 66 00 1d f1 00 97 20 87
>3b88	36 36 35 34 37 33 38 33 34 94 38 32 31 37 37 30
>3b98	33 39 35 88 92 30 00 1d f2 00 97 20 87 36 36 35
>3ba8	34 37 33 38 33 34 93 38 32 31 37 37 30 33 39 35
>3bb8	88 92 30 00 0f f3 00 97 20 35 8a 35 35 37 92 35
>3bc8	36 32 00 10 f4 00 97 20 35 89 35 35 37 92 32 37
>3bd8	38 35 00 0d f5 00 97 20 35 8c 35 35 37 92 30 00
>3be8	0d f6 00 97 20 35 84 35 35 37 92 35 00 0f f7 00
>3bf8	97 20 87 35 85 35 35 37 88 92 35 00 11 f8 00 97
>3c08	20 87 35 96 35 35 37 88 92 35 35 32 00 11 f9 00
>3c18	97 20 87 35 b2 35 35 37 88 92 35 35 37 00 0f fa
>3c28	00 97 20 87 35 92 35 35 37 88 92 30 00 17 fb 00
>3c38	97 20 87 35 90 35 35 37 88 92 82 66 66 66 66 66
>3c48	66 66 66 00 17 fc 00 97 20 87 35 91 35 35 37 88
>3c58	92 82 66 66 66 66 66 66 66 66 00 17 fd 00 97 20
>3c68	87 35 8f 35 35 37 88 92 82 66 66 66 66 66 66 66
>3c78	66 00 0f fe 00 97 20 87 35 94 35 35 37 88 92 30
>3c88	00 0f ff 00 97 20 87 35 93 35 35 37 88 92 30 00
>3c98	24 00 01 97 20 34 39 39 31 34 31 30 30 36 8a 38
>3ca8	39 30 34 39 31 33 32 38 92 31 33 38 39 36 33 32
>3cb8	33 33 34 00 1b 01 01 97 20 34 39 39 31 34 31 30
>3cc8	30 36 8c 38 39 30 34 39 31 33 32 38 92 30 00 23
>3cd8	02 01 97 20 34 39 39 31 34 31 30 30 36 84 38 39
>3ce8	30 34 39 31 33 32 38 92 34 39 39 31 34 31 30 30
>3cf8	36 00 25 03 01 97 20 87 34 39 39 31 34 31 30 30
>3d08	36 85 38 39 30 34 39 31 33 32 38 88 92 33 35 32
>3d18	33 33 38 33 30 34 00 25 04 01 97 20 87 34 39 39
>3d28	31 34 31 30 30 36 96 38 39 30 34 39 31 33 32 38
>3d38	88 92 36 38 34 39 35 35 37 32 36 00 26 05 01 97
>3d48	20 87 34 39 39 31 34 31 30 30 36 b2 38 39 30 34
>3d58	39 31 33 32 38 88 92 31 30 33 37 32 39 34 30 33
>3d68	30 00 1d 06 01 97 20 87 34 39 39 31 34 31 30 30
>3d78	36 92 38 39 30 34 39 31 33 32 38 88 92 30 00 25
>3d88	07 01 97 20 87 34 39 39 31 34 31 30 30 36 90 38
>3d98	39 30 34 39 31 33 32 38 88 92 82 66 66 66 66 66
>3da8	66 66 66 00 25 08 01 97 20 87 34 39 39 31 34 31
>3db8	30 30 36 91 38 39 30 34 39 31 33 32 38 88 92 82
>3dc8	66 66 66 66 66 66 66 66 00 25 09 01 97 20 87 34
>3dd8	39 39 31 34 31 30 30 36 8f 38 39 30 34 39 31 33
>3de8	32 38 88 92 82 66 66 66 66 66 66 66 66 00 1d 0a
>3df8	01 97 20 87 34 39 39 31 34 31 30 30 36 94 38 39
>3e08	30 34 39 31 33 32 38 88 92 30 00 1d 0b 01 97 20
>3e18	87 34 39 39 31 34 31 30 30 36 93 38 39 30 34 39
>3e28	31 33 32 38 88 92 30 00 0f 0c 01 97 20 35 8a 37
>3e38	38 31 92 37 38 36 00 10 0d 01 97 20 35 89 37 38
>3e48	31 92 33 39 30 35 00 0d 0e 01 97 20 35 8c 37 38
>3e58	31 92 30 00 0d 0f 01 97 20 35 84 37 38 31 92 35
>3e68	00 0f 10 01 97 20 87 35 85 37 38 31 88 92 35 00
>3e78	11 11 01 97 20 87 35 96 37 38 31 88 92 37 37 36
>3e88	00 11 12 01 97 20 87 35 b2 37 38 31 88 92 37 38
>3e98	31 00 0f 13 01 97 20 87 35 92 37 38 31 88 92 30
>3ea8	00 17 14 01 97 20 87 35 90 37 38 31 88 92 82 66
>3eb8	66 66 66 66 66 66 66 00 17 15 01 97 20 87 35 91
>3ec8	37 38 31 88 92 82 66 66 66 66 66 66 66 66 00 17
>3ed8	16 01 97 20 87 35 8f 37 38 31 88 92 82 66 66 66
>3ee8	66 66 66 66 66 00 0f 17 01 97 20 87 35 94 37 38
>3ef8	31 88 92 30 00 0f 18 01 97 20 87 35 93 37 38 31
>3f08	88 92 30 00 1b 19 01 97 20 30 8a 38 39 39 32 33
>3f18	34 30 38 38 92 38 39 39 32 33 34 30 38 38 00 13
>3f28	1a 01 97 20 30 89 38 39 39 32 33 34 30 38 38 92
>3f38	30 00 13 1b 01 97 20 30 8c 38 39 39 32 33 34 30
>3f48	38 38 92 30 00 13 1c 01 97 20 30 84 38 39 39 32
>3f58	33 34 30 38 38 92 30 00 15 1d 01 97 20 87 30 85
>3f68	38 39 39 32 33 34 30 38 38 88 92 30 00 1d 1e 01
>3f78	97 20 87 30 96 38 39 39 32 33 34 30 38 38 88 92
>3f88	38 39 39 32 33 34 30 38 38 00 1d 1f 01 97 20 87
>3f98	30 b2 38 39 39 32 33 34 30 38 38 88 92 38 39 39
>3fa8	32 33 34 30 38 38 00 15 20 01 97 20 87 30 92 38
>3fb8	39 39 32 33 34 30 38 38 88 92 30 00 1d 21 01 97
>3fc8	20 87 30 90 38 39 39 32 33 34 30 38 38 88 92 82
>3fd8	66 66 66 66 66 66 66 66 00 1d 22 01 97 20 87 30
>3fe8	91 38 39 39 32 33 34 30 38 38 88 92 82 66 66 66
>3ff8	66 66 66 66 66 00 1d 23 01 97 20 87 30 8f 38 39
>4008	39 32 33 34 30 38 38 88 92 82 66 66 66 66 66 66
>4018	66 66 00 15 24 01 97 20 87 30 94 38 39 39 32 33
>4028	34 30 38 38 88 92 30 00 15 25 01 97 20 87 30 93
>4038	38 39 39 32 33 34 30 38 38 88 92 30 00 1d 26 01
>4048	97 20 38 31 32 8a 35 32 32 32 38 31 37 31 37 92
>4058	35 32 32 32 38 32 35 32 39 00 15 27 01 97 20 38
>4068	31 32 8c 35 32 32 32 38 31 37 31 37 92 30 00 17
>4078	28 01 97 20 38 31 32 84 35 32 32 32 38 31 37 31
>4088	37 92 38 31 32 00 19 29 01 97 20 87 38 31 32 85
>4098	35 32 32 32 38 31 37 31 37 88 92 35 34 38 00 1f
>40a8	2a 01 97 20 87 38 31 32 96 35 32 32 32 38 31 37
>40b8	31 37 88 92 35 32 32 32 38 31 34 33 33 00 1f 2b
>40c8	01 97 20 87 38 31 32 b2 35 32 32 32 38 31 37 31
>40d8	37 88 92 35 32 32 32 38 31 39 38 31 00 17 2c 01
>40e8	97 20 87 38 31 32 92 35 32 32 32 38 31 37 31 37
>40f8	88 92 30 00 1f 2d 01 97 20 87 38 31 32 90 35 32
>4108	32 32 38 31 37 31 37 88 92 82 66 66 66 66 66 66
>4118	66 66 00 1f 2e 01 97 20 87 38 31 32 91 35 32 32
>4128	32 38 31 37 31 37 88 92 82 66 66 66 66 66 66 66
>4138	66 00 1f 2f 01 97 20 87 38 31 32 8f 35 32 32 32
>4148	38 31 37 31 37 88 92 82 66 66 66 66 66 66 66 66
>4158	00 17 30 01 97 20 87 38 31 32 94 35 32 32 32 38
>4168	31 37 31 37 88 92 30 00 17 31 01 97 20 87 38 31
>4178	32 93 35 32 32 32 38 31 37 31 37 88 92 30 00 0b
>4188	32 01 97 20 30 8a 30 92 30 00 0b 33 01 97 20 30
>4198	89 30 92 30 00 0d 34 01 97 20 87 30 85 30 88 92
>41a8	30 00 0d 35 01 97 20 87 30 96 30 88 92 30 00 0d
>41b8	36 01 97 20 87 30 b2 30 88 92 30 00 15 37 01 97
>41c8	20 87 30 92 30 88 92 82 66 66 66 66 66 66 66 66
>41d8	00 0d 38 01 97 20 87 30 90 30 88 92 30 00 0d 39
>41e8	01 97 20 87 30 91 30 88 92 30 00 15 3a 01 97 20
>41f8	87 30 8f 30 88 92 82 66 66 66 66 66 66 66 66 00
>4208	0d 3b 01 97 20 87 30 94 30 88 92 30 00 15 3c 01
>4218	97 20 87 30 93 30 88 92 82 66 66 66 66 66 66 66
>4228	66 00 0f 3d 01 97 20 34 8a 38 39 31 92 38 39 35
>4238	00 10 3e 01 97 20 34 89 38 39 31 92 33 35 36 34
>4248	00 0d 3f 01 97 20 34 8c 38 39 31 92 30 00 0d 40
>4258	01 97 20 34 84 38 39 31 92 34 00 0f 41 01 97 20
>4268	87 34 85 38 39 31 88 92 30 00 11 42 01 97 20 87
>4278	34 96 38 39 31 88 92 38 39 35 00 11 43 01 97 20
>4288	87 34 b2 38 39 31 88 92 38 39 35 00 0f 44 01 97
>4298	20 87 34 92 38 39 31 88 92 30 00 17 45 01 97 20
>42a8	87 34 90 38 39 31 88 92 82 66 66 66 66 66 66 66
>42b8	66 00 17 46 01 97 20 87 34 91 38 39 31 88 92 82
>42c8	66 66 66 66 66 66 66 66 00 17 47 01 97 20 87 34
>42d8	8f 38 39 31 88 92 82 66 66 66 66 66 66 66 66 00
>42e8	0f 48 01 97 20 87 34 94 38 39 31 88 92 30 00 0f
>42f8	49 01 97 20 87 34 93 38 39 31 88 92 30 00 23 4a
>4308	01 97 20 36 34 39 39 35 34 30 31 33 8a 31 36 37
>4318	30 31 36 33 32 36 92 38 31 36 39 37 30 33 33 39
>4328	00 23 4b 01 97 20 36 34 39 39 35 34 30 31 33 8b
>4338	31 36 37 30 31 36 33 32 36 92 34 38 32 39 33 37
>4348	36 38 37 00 1b 4c 01 97 20 36 34 39 39 35 34 30
>4358	31 33 8c 31 36 37 30 31 36 33 32 36 92 33 00 23
>4368	4d 01 97 20 36 34 39 39 35 34 30 31 33 84 31 36
>4378	37 30 31 36 33 32 36 92 31 34 38 39 30 35 30 33
>4388	35 00 24 4e 01 97 20 87 36 34 39 39 35 34 30 31
>4398	33 85 31 36 37 30 31 36 33 32 36 88 92 31 31 37
>43a8	39 37 31 32 34 00 25 4f 01 97 20 87 36 34 39 39
>43b8	35 34 30 31 33 96 31 36 37 30 31 36 33 32 36 88
>43c8	92 37 39 33 33 37 36 30 39 31 00 25 50 01 97 20
>43d8	87 36 34 39 39 35 34 30 31 33 b2 31 36 37 30 31
>43e8	36 33 32 36 88 92 38 30 35 31 37 33 32 31 35 00
>43f8	1d 51 01 97 20 87 36 34 39 39 35 34 30 31 33 92
>4408	31 36 37 30 31 36 33 32 36 88 92 30 00 25 52 01
>4418	97 20 87 36 34 39 39 35 34 30 31 33 90 31 36 37
>4428	30 31 36 33 32 36 88 92 82 66 66 66 66 66 66 66
>4438	66 00 1d 53 01 97 20 87 36 34 39 39 35 34 30 31
>4448	33 91 31 36 37 30 31 36 33 32 36 88 92 30 00 1d
>4458	54 01 97 20 87 36 34 39 39 35 34 30 31 33 8f 31
>4468	36 37 30 31 36 33 32 36 88 92 30 00 25 55 01 97
>4478	20 87 36 34 39 39 35 34 30 31 33 94 31 36 37 30
>4488	31 36 33 32 36 88 92 82 66 66 66 66 66 66 66 66
>4498	00 25 56 01 97 20 87 36 34 39 39 35 34 30 31 33
>44a8	93 31 36 37 30 31 36 33 32 36 88 92 82 66 66 66
>44b8	66 66 66 66 66 00 24 57 01 97 20 36 32 34 36 35
>44c8	35 36 37 32 8a 36 38 32 34 33 33 38 35 37 92 31
>44d8	33 30 37 30 38 39 35 32 39 00 1b 58 01 97 20 36
>44e8	32 34 36 35 35 36 37 32 8c 36 38 32 34 33 33 38
>44f8	35 37 92 30 00 23 59 01 97 20 36 32 34 36 35 35
>4508	36 37 32 84 36 38 32 34 33 33 38 35 37 92 36 32
>4518	34 36 35 35 36 37 32 00 25 5a 01 97 20 87 36 32
>4528	34 36 35 35 36 37 32 85 36 38 32 34 33 33 38 35
>4538	37 88 92 35 33 39 35 36 35 33 31 32 00 25 5b 01
>4548	97 20 87 36 32 34 36 35 35 36 37 32 96 36 38 32
>4558	34 33 33 38 35 37 88 92 32 32 37 39 35 38 39 30
>4568	35 00 25 5c 01 97 20 87 36 32 34 36 35 35 36 37
>4578	32 b2 36 38 32 34 33 33 38 35 37 88 92 37 36 37
>4588	35 32 34 32 31 37 00 1d 5d 01 97 20 87 36 32 34
>4598	36 35 35 36 37 32 92 36 38 32 34 33 33 38 35 37
>45a8	88 92 30 00 25 5e 01 97 20 87 36 32 34 36 35 35
>45b8	36 37 32 90 36 38 32 34 33 33 38 35 37 88 92 82
>45c8	66 66 66 66 66 66 66 66 00 25 5f 01 97 20 87 36
>45d8	32 34 36 35 35 36 37 32 91 36 38 32 34 33 33 38
>45e8	35 37 88 92 82 66 66 66 66 66 66 66 66 00 25 60
>45f8	01 97 20 87 36 32 34 36 35 35 36 37 32 8f 36 38
>4608	32 34 33 33 38 35 37 88 92 82 66 66 66 66 66 66
>4618	66 66 00 1d 61 01 97 20 87 36 32 34 36 35 35 36
>4628	37 32 94 36 38 32 34 33 33 38 35 37 88 92 30 00
>4638	1d 62 01 97 20 87 36 32 34 36 35 35 36 37 32 93
>4648	36 38 32 34 33 33 38 35 37 88 92 30 00 1b 63 01
>4658	97 20 36 8a 38 38 31 32 36 31 39 34 38 92 38 38
>4668	31 32 36 31 39 35 34 00 13 64 01 97 20 36 8c 38
>4678	38 31 32 36 31 39 34 38 92 30 00 13 65 01 97 20
>4688	36 84 38 38 31 32 36 31 39 34 38 92 36 00 15 66
>4698	01 97 20 87 36 85 38 38 31 32 36 31 39 34 38 88
>46a8	92 34 00 1d 67 01 97 20 87 36 96 38 38 31 32 36
>46b8	31 39 34 38 88 92 38 38 31 32 36 31 39 34 36 00
>46c8	1d 68 01 97 20 87 36 b2 38 38 31 32 36 31 39 34
>46d8	38 88 92 38 38 31 32 36 31 39 35 30 00 15 69 01
>46e8	97 20 87 36 92 38 38 31 32 36 31 39 34 38 88 92
>46f8	30 00 1d 6a 01 97 20 87 36 90 38 38 31 32 36 31
>4708	39 34 38 88 92 82 66 66 66 66 66 66 66 66 00 1d
>4718	6b 01 97 20 87 36 91 38 38 31 32 36 31 39 34 38
>4728	88 92 82 66 66 66 66 66 66 66 66 00 1d 6c 01 97
>4738	20 87 36 8f 38 38 31 32 36 31 39 34 38 88 92 82
>4748	66 66 66 66 66 66 66 66 00 15 6d 01 97 20 87 36
>4758	94 38 38 31 32 36 31 39 34 38 88 92 30 00 15 6e
>4768	01 97 20 87 36 93 38 38 31 32 36 31 39 34 38 88
>4778	92 30 00 23 6f 01 97 20 34 33 31 31 39 35 36 32
>4788	30 8a 32 37 33 32 35 37 32 30 37 92 37 30 34 34
>4798	35 32 38 32 37 00 23 70 01 97 20 34 33 31 31 39
>47a8	35 36 32 30 8b 32 37 33 32 35 37 32 30 37 92 31
>47b8	35 37 39 33 38 34 31 33 00 1b 71 01 97 20 34 33
>47c8	31 31 39 35 36 32 30 8c 32 37 33 32 35 37 32 30
>47d8	37 92 31 00 23 72 01 97 20 34 33 31 31 39 35 36
>47e8	32 30 84 32 37 33 32 35 37 32 30 37 92 31 35 37
>47f8	39 33 38 34 31 33 00 25 73 01 97 20 87 34 33 31
>4808	31 39 35 36 32 30 85 32 37 33 32 35 37 32 30 37
>4818	88 92 32 36 38 35 33 33 39 38 38 00 25 74 01 97
>4828	20 87 34 33 31 31 39 35 36 32 30 96 32 37 33 32
>4838	35 37 32 30 37 88 92 31 36 37 33 38 34 38 35 31
>4848	00 25 75 01 97 20 87 34 33 31 31 39 35 36 32 30
>4858	b2 32 37 33 32 35 37 32 30 37 88 92 34 33 35 39
>4868	31 38 38 33 39 00 1d 76 01 97 20 87 34 33 31 31
>4878	39 35 36 32 30 92 32 37 33 32 35 37 32 30 37 88
>4888	92 30 00 25 77 01 97 20 87 34 33 31 31 39 35 36
>4898	32 30 90 32 37 33 32 35 37 32 30 37 88 92 82 66
>48a8	66 66 66 66 66 66 66 00 1d 78 01 97 20 87 34 33
>48b8	31 31 39 35 36 32 30 91 32 37 33 32 35 37 32 30
>48c8	37 88 92 30 00 1d 79 01 97 20 87 34 33 31 31 39
>48d8	35 36 32 30 8f 32 37 33 32 35 37 32 30 37 88 92
>48e8	30 00 25 7a 01 97 20 87 34 33 31 31 39 35 36 32
>48f8	30 94 32 37 33 32 35 37 32 30 37 88 92 82 66 66
>4908	66 66 66 66 66 66 00 25 7b 01 97 20 87 34 33 31
>4918	31 39 35 36 32 30 93 32 37 33 32 35 37 32 30 37
>4928	88 92 82 66 66 66 66 66 66 66 66 00 1c 7c 01 97
>4938	20 39 35 36 31 37 34 31 39 39 8a 35 33 92 39 35
>4948	36 31 37 34 32 35 32 00 1c 7d 01 97 20 39 35 36
>4958	31 37 34 31 39 39 8b 35 33 92 39 35 36 31 37 34
>4968	31 34 36 00 1b 7e 01 97 20 39 35 36 31 37 34 31
>4978	39 39 8c 35 33 92 31 38 30 34 31 30 32 32 00 15
>4988	7f 01 97 20 39 35 36 31 37 34 31 39 39 84 35 33
>4998	92 33 33 00 17 80 01 97 20 87 39 35 36 31 37 34
>49a8	31 39 39 85 35 33 88 92 35 33 00 1e 81 01 97 20
>49b8	87 39 35 36 31 37 34 31 39 39 96 35 33 88 92 39
>49c8	35 36 31 37 34 31 34 36 00 1e 82 01 97 20 87 39
>49d8	35 36 31 37 34 31 39 39 b2 35 33 88 92 39 35 36
>49e8	31 37 34 31 39 39 00 16 83 01 97 20 87 39 35 36
>49f8	31 37 34 31 39 39 92 35 33 88 92 30 00 1e 84 01
>4a08	97 20 87 39 35 36 31 37 34 31 39 39 90 35 33 88
>4a18	92 82 66 66 66 66 66 66 66 66 00 16 85 01 97 20
>4a28	87 39 35 36 31 37 34 31 39 39 91 35 33 88 92 30
>4a38	00 16 86 01 97 20 87 39 35 36 31 37 34 31 39 39
>4a48	8f 35 33 88 92 30 00 1e 87 01 97 20 87 39 35 36
>4a58	31 37 34 31 39 39 94 35 33 88 92 82 66 66 66 66
>4a68	66 66 66 66 00 1e 88 01 97 20 87 39 35 36 31 37
>4a78	34 31 39 39 93 35 33 88 92 82 66 66 66 66 66 66
>4a88	66 66 00 1d 89 01 97 20 37 39 35 8a 34 36 38 30
>4a98	32 36 31 36 38 92 34 36 38 30 32 36 39 36 33 00
>4aa8	15 8a 01 97 20 37 39 35 8c 34 36 38 30 32 36 31
>4ab8	36 38 92 30 00 17 8b 01 97 20 37 39 35 84 34 36
>4ac8	38 30 32 36 31 36 38 92 37 39 35 00 19 8c 01 97
>4ad8	20 87 37 39 35 85 34 36 38 30 32 36 31 36 38 88
>4ae8	92 37 39 32 00 1f 8d 01 97 20 87 37 39 35 96 34
>4af8	36 38 30 32 36 31 36 38 88 92 34 36 38 30 32 35
>4b08	33 37 39 00 1f 8e 01 97 20 87 37 39 35 b2 34 36
>4b18	38 30 32 36 31 36 38 88 92 34 36 38 30 32 36 31
>4b28	37 31 00 17 8f 01 97 20 87 37 39 35 92 34 36 38
>4b38	30 32 36 31 36 38 88 92 30 00 1f 90 01 97 20 87
>4b48	37 39 35 90 34 36 38 30 32 36 31 36 38 88 92 82
>4b58	66 66 66 66 66 66 66 66 00 1f 91 01 97 20 87 37
>4b68	39 35 91 34 36 38 30 32 36 31 36 38 88 92 82 66
>4b78	66 66 66 66 66 66 66 00 1f 92 01 97 20 87 37 39
>4b88	35 8f 34 36 38 30 32 36 31 36 38 88 92 82 66 66
>4b98	66 66 66 66 66 66 00 17 93 01 97 20 87 37 39 35
>4ba8	94 34 36 38 30 32 36 31 36 38 88 92 30 00 17 94
>4bb8	01 97 20 87 37 39 35 93 34 36 38 30 32 36 31 36
>4bc8	38 88 92 30 00 1d 95 01 97 20 32 37 34 8a 33 37
>4bd8	39 37 37 37 34 37 36 92 33 37 39 37 37 37 37 35
>4be8	30 00 15 96 01 97 20 32 37 34 8c 33 37 39 37 37
>4bf8	37 34 37 36 92 30 00 17 97 01 97 20 32 37 34 84
>4c08	33 37 39 37 37 37 34 37 36 92 32 37 34 00 19 98
>4c18	01 97 20 87 32 37 34 85 33 37 39 37 37 37 34 37
>4c28	36 88 92 32 35 36 00 1f 99 01 97 20 87 32 37 34
>4c38	96 33 37 39 37 37 37 34 37 36 88 92 33 37 39 37
>4c48	37 37 32 33 38 00 1f 9a 01 97 20 87 32 37 34 b2
>4c58	33 37 39 37 37 37 34 37 36 88 92 33 37 39 37 37
>4c68	37 34 39 34 00 17 9b 01 97 20 87 32 37 34 92 33
>4c78	37 39 37 37 37 34 37 36 88 92 30 00 1f 9c 01 97
>4c88	20 87 32 37 34 90 33 37 39 37 37 37 34 37 36 88
>4c98	92 82 66 66 66 66 66 66 66 66 00 1f 9d 01 97 20
>4ca8	87 32 37 34 91 33 37 39 37 37 37 34 37 36 88 92
>4cb8	82 66 66 66 66 66 66 66 66 00 1f 9e 01 97 20 87
>4cc8	32 37 34 8f 33 37 39 37 37 37 34 37 36 88 92 82
>4cd8	66 66 66 66 66 66 66 66 00 17 9f 01 97 20 87 32
>4ce8	37 34 94 33 37 39 37 37 37 34 37 36 88 92 30 00
>4cf8	17 a0 01 97 20 87 32 37 34 93 33 37 39 37 37 37
>4d08	34 37 36 88 92 30 00 1b a1 01 97 20 32 32 39 38
>4d18	39 37 31 31 35 8a 31 92 32 32 39 38 39 37 31 31
>4d28	36 00 1b a2 01 97 20 32 32 39 38 39 37 31 31 35
>4d38	8b 31 92 32 32 39 38 39 37 31 31 34 00 1b a3 01
>4d48	97 20 32 32 39 38 39 37 31 31 35 89 31 92 32 32
>4d58	39 38 39 37 31 31 35 00 1b a4 01 97 20 32 32 39
>4d68	38 39 37 31 31 35 8c 31 92 32 32 39 38 39 37 31
>4d78	31 35 00 13 a5 01 97 20 32 32 39 38 39 37 31 31
>4d88	35 84 31 92 30 00 15 a6 01 97 20 87 32 32 39 38
>4d98	39 37 31 31 35 85 31 88 92 31 00 1d a7 01 97 20
>4da8	87 32 32 39 38 39 37 31 31 35 96 31 88 92 32 32
>4db8	39 38 39 37 31 31 34 00 1d a8 01 97 20 87 32 32
>4dc8	39 38 39 37 31 31 35 b2 31 88 92 32 32 39 38 39
>4dd8	37 31 31 35 00 15 a9 01 97 20 87 32 32 39 38 39
>4de8	37 31 31 35 92 31 88 92 30 00 1d aa 01 97 20 87
>4df8	32 32 39 38 39 37 31 31 35 90 31 88 92 82 66 66
>4e08	66 66 66 66 66 66 00 15 ab 01 97 20 87 32 32 39
>4e18	38 39 37 31 31 35 91 31 88 92 30 00 15 ac 01 97
>4e28	20 87 32 32 39 38 39 37 31 31 35 8f 31 88 92 30
>4e38	00 1d ad 01 97 20 87 32 32 39 38 39 37 31 31 35
>4e48	94 31 88 92 82 66 66 66 66 66 66 66 66 00 1d ae
>4e58	01 97 20 87 32 32 39 38 39 37 31 31 35 93 31 88
>4e68	92 82 66 66 66 66 66 66 66 66 00 22 af 01 97 20
>4e78	31 33 33 31 34 38 39 32 30 8a 37 34 33 30 37 33
>4e88	30 35 92 32 30 37 34 35 36 32 32 35 00 21 b0 01
>4e98	97 20 31 33 33 31 34 38 39 32 30 8b 37 34 33 30
>4ea8	37 33 30 35 92 35 38 38 34 31 36 31 35 00 1a b1
>4eb8	01 97 20 31 33 33 31 34 38 39 32 30 8c 37 34 33
>4ec8	30 37 33 30 35 92 31 00 21 b2 01 97 20 31 33 33
>4ed8	31 34 38 39 32 30 84 37 34 33 30 37 33 30 35 92
>4ee8	35 38 38 34 31 36 31 35 00 23 b3 01 97 20 87 31
>4ef8	33 33 31 34 38 39 32 30 85 37 34 33 30 37 33 30
>4f08	35 88 92 37 34 32 38 39 33 38 34 00 23 b4 01 97
>4f18	20 87 31 33 33 31 34 38 39 32 30 96 37 34 33 30
>4f28	37 33 30 35 88 92 35 38 38 37 37 34 35 37 00 24
>4f38	b5 01 97 20 87 31 33 33 31 34 38 39 32 30 b2 37
>4f48	34 33 30 37 33 30 35 88 92 31 33 33 31 36 36 38
>4f58	34 31 00 1c b6 01 97 20 87 31 33 33 31 34 38 39
>4f68	32 30 92 37 34 33 30 37 33 30 35 88 92 30 00 24
>4f78	b7 01 97 20 87 31 33 33 31 34 38 39 32 30 90 37
>4f88	34 33 30 37 33 30 35 88 92 82 66 66 66 66 66 66
>4f98	66 66 00 1c b8 01 97 20 87 31 33 33 31 34 38 39
>4fa8	32 30 91 37 34 33 30 37 33 30 35 88 92 30 00 1c
>4fb8	b9 01 97 20 87 31 33 33 31 34 38 39 32 30 8f 37
>4fc8	34 33 30 37 33 30 35 88 92 30 00 24 ba 01 97 20
>4fd8	87 31 33 33 31 34 38 39 32 30 94 37 34 33 30 37
>4fe8	33 30 35 88 92 82 66 66 66 66 66 66 66 66 00 24
>4ff8	bb 01 97 20 87 31 33 33 31 34 38 39 32 30 93 37
>5008	34 33 30 37 33 30 35 88 92 82 66 66 66 66 66 66
>5018	66 66 00 1b bc 01 97 20 37 8a 36 30 34 38 31 33
>5028	35 33 31 92 36 30 34 38 31 33 35 33 38 00 13 bd
>5038	01 97 20 37 8c 36 30 34 38 31 33 35 33 31 92 30
>5048	00 13 be 01 97 20 37 84 36 30 34 38 31 33 35 33
>5058	31 92 37 00 15 bf 01 97 20 87 37 85 36 30 34 38
>5068	31 33 35 33 31 88 92 33 00 1d c0 01 97 20 87 37
>5078	96 36 30 34 38 31 33 35 33 31 88 92 36 30 34 38
>5088	31 33 35 33 32 00 1d c1 01 97 20 87 37 b2 36 30
>5098	34 38 31 33 35 33 31 88 92 36 30 34 38 31 33 35
>50a8	33 35 00 15 c2 01 97 20 87 37 92 36 30 34 38 31
>50b8	33 35 33 31 88 92 30 00 1d c3 01 97 20 87 37 90
>50c8	36 30 34 38 31 33 35 33 31 88 92 82 66 66 66 66
>50d8	66 66 66 66 00 1d c4 01 97 20 87 37 91 36 30 34
>50e8	38 31 33 35 33 31 88 92 82 66 66 66 66 66 66 66
>50f8	66 00 1d c5 01 97 20 87 37 8f 36 30 34 38 31 33
>5108	35 33 31 88 92 82 66 66 66 66 66 66 66 66 00 15
>5118	c6 01 97 20 87 37 94 36 30 34 38 31 33 35 33 31
>5128	88 92 30 00 15 c7 01 97 20 87 37 93 36 30 34 38
>5138	31 33 35 33 31 88 92 30 00 1f c8 01 97 20 33 33
>5148	33 8a 31 30 35 31 34 36 39 36 30 38 92 31 30 35
>5158	31 34 36 39 39 34 31 00 16 c9 01 97 20 33 33 33
>5168	8c 31 30 35 31 34 36 39 36 30 38 92 30 00 18 ca
>5178	01 97 20 33 33 33 84 31 30 35 31 34 36 39 36 30
>5188	38 92 33 33 33 00 1a cb 01 97 20 87 33 33 33 85
>5198	31 30 35 31 34 36 39 36 30 38 88 92 32 36 34 00
>51a8	21 cc 01 97 20 87 33 33 33 96 31 30 35 31 34 36
>51b8	39 36 30 38 88 92 31 30 35 31 34 36 39 34 31 33
>51c8	00 21 cd 01 97 20 87 33 33 33 b2 31 30 35 31 34
>51d8	36 39 36 30 38 88 92 31 30 35 31 34 36 39 36 37
>51e8	37 00 18 ce 01 97 20 87 33 33 33 92 31 30 35 31
>51f8	34 36 39 36 30 38 88 92 30 00 20 cf 01 97 20 87
>5208	33 33 33 90 31 30 35 31 34 36 39 36 30 38 88 92
>5218	82 66 66 66 66 66 66 66 66 00 20 d0 01 97 20 87
>5228	33 33 33 91 31 30 35 31 34 36 39 36 30 38 88 92
>5238	82 66 66 66 66 66 66 66 66 00 20 d1 01 97 20 87
>5248	33 33 33 8f 31 30 35 31 34 36 39 36 30 38 88 92
>5258	82 66 66 66 66 66 66 66 66 00 18 d2 01 97 20 87
>5268	33 33 33 94 31 30 35 31 34 36 39 36 30 38 88 92
>5278	30 00 18 d3 01 97 20 87 33 33 33 93 31 30 35 31
>5288	34 36 39 36 30 38 88 92 30 00 1b d4 01 97 20 31
>5298	32 31 30 35 31 30 33 35 8a 38 92 31 32 31 30 35
>52a8	31 30 34 33 00 1b d5 01 97 20 31 32 31 30 35 31
>52b8	30 33 35 8b 38 92 31 32 31 30 35 31 30 32 37 00
>52c8	1b d6 01 97 20 31 32 31 30 35 31 30 33 35 89 38
>52d8	92 39 36 38 34 30 38 32 38 30 00 1a d7 01 97 20
>52e8	31 32 31 30 35 31 30 33 35 8c 38 92 31 35 31 33
>52f8	31 33 37 39 00 13 d8 01 97 20 31 32 31 30 35 31
>5308	30 33 35 84 38 92 33 00 15 d9 01 97 20 87 31 32
>5318	31 30 35 31 30 33 35 85 38 88 92 38 00 1d da 01
>5328	97 20 87 31 32 31 30 35 31 30 33 35 96 38 88 92
>5338	31 32 31 30 35 31 30 32 37 00 1d db 01 97 20 87
>5348	31 32 31 30 35 31 30 33 35 b2 38 88 92 31 32 31
>5358	30 35 31 30 33 35 00 15 dc 01 97 20 87 31 32 31
>5368	30 35 31 30 33 35 92 38 88 92 30 00 1d dd 01 97
>5378	20 87 31 32 31 30 35 31 30 33 35 90 38 88 92 82
>5388	66 66 66 66 66 66 66 66 00 15 de 01 97 20 87 31
>5398	32 31 30 35 31 30 33 35 91 38 88 92 30 00 15 df
>53a8	01 97 20 87 31 32 31 30 35 31 30 33 35 8f 38 88
>53b8	92 30 00 1d e0 01 97 20 87 31 32 31 30 35 31 30
>53c8	33 35 94 38 88 92 82 66 66 66 66 66 66 66 66 00
>53d8	1d e1 01 97 20 87 31 32 31 30 35 31 30 33 35 93
>53e8	38 88 92 82 66 66 66 66 66 66 66 66 00 1b e2 01
>53f8	97 20 30 8a 32 30 33 34 33 30 31 35 37 92 32 30
>5408	33 34 33 30 31 35 37 00 13 e3 01 97 20 30 89 32
>5418	30 33 34 33 30 31 35 37 92 30 00 13 e4 01 97 20
>5428	30 8c 32 30 33 34 33 30 31 35 37 92 30 00 13 e5
>5438	01 97 20 30 84 32 30 33 34 33 30 31 35 37 92 30
>5448	00 15 e6 01 97 20 87 30 85 32 30 33 34 33 30 31
>5458	35 37 88 92 30 00 1d e7 01 97 20 87 30 96 32 30
>5468	33 34 33 30 31 35 37 88 92 32 30 33 34 33 30 31
>5478	35 37 00 1d e8 01 97 20 87 30 b2 32 30 33 34 33
>5488	30 31 35 37 88 92 32 30 33 34 33 30 31 35 37 00
>5498	15 e9 01 97 20 87 30 92 32 30 33 34 33 30 31 35
>54a8	37 88 92 30 00 1d ea 01 97 20 87 30 90 32 30 33
>54b8	34 33 30 31 35 37 88 92 82 66 66 66 66 66 66 66
>54c8	66 00 1d eb 01 97 20 87 30 91 32 30 33 34 33 30
>54d8	31 35 37 88 92 82 66 66 66 66 66 66 66 66 00 1d
>54e8	ec 01 97 20 87 30 8f 32 30 33 34 33 30 31 35 37
>54f8	88 92 82 66 66 66 66 66 66 66 66 00 15 ed 01 97
>5508	20 87 30 94 32 30 33 34 33 30 31 35 37 88 92 30
>5518	00 15 ee 01 97 20 87 30 93 32 30 33 34 33 30 31
>5528	35 37 88 92 30 00 23 ef 01 97 20 34 38 30 35 38
>5538	30 35 31 34 8a 34 38 30 35 38 30 35 31 34 92 39
>5548	36 31 31 36 31 30 32 38 00 1b f0 01 97 20 34 38
>5558	30 35 38 30 35 31 34 8c 34 38 30 35 38 30 35 31
>5568	34 92 31 00 1b f1 01 97 20 34 38 30 35 38 30 35
>5578	31 34 84 34 38 30 35 38 30 35 31 34 92 30 00 25
>5588	f2 01 97 20 87 34 38 30 35 38 30 35 31 34 85 34
>5598	38 30 35 38 30 35 31 34 88 92 34 38 30 35 38 30
>55a8	35 31 34 00 1d f3 01 97 20 87 34 38 30 35 38 30
>55b8	35 31 34 96 34 38 30 35 38 30 35 31 34 88 92 30
>55c8	00 25 f4 01 97 20 87 34 38 30 35 38 30 35 31 34
>55d8	b2 34 38 30 35 38 30 35 31 34 88 92 34 38 30 35
>55e8	38 30 35 31 34 00 25 f5 01 97 20 87 34 38 30 35
>55f8	38 30 35 31 34 92 34 38 30 35 38 30 35 31 34 88
>5608	92 82 66 66 66 66 66 66 66 66 00 1d f6 01 97 20
>5618	87 34 38 30 35 38 30 35 31 34 90 34 38 30 35 38
>5628	30 35 31 34 88 92 30 00 1d f7 01 97 20 87 34 38
>5638	30 35 38 30 35 31 34 91 34 38 30 35 38 30 35 31
>5648	34 88 92 30 00 25 f8 01 97 20 87 34 38 30 35 38
>5658	30 35 31 34 8f 34 38 30 35 38 30 35 31 34 88 92
>5668	82 66 66 66 66 66 66 66 66 00 1d f9 01 97 20 87
>5678	34 38 30 35 38 30 35 31 34 94 34 38 30 35 38 30
>5688	35 31 34 88 92 30 00 25 fa 01 97 20 87 34 38 30
>5698	35 38 30 35 31 34 93 34 38 30 35 38 30 35 31 34
>56a8	88 92 82 66 66 66 66 66 66 66 66 00 25 fb 01 97
>56b8	20 36 30 36 34 38 34 38 38 33 8a 31 30 34 37 30
>56c8	37 39 31 30 39 92 31 36 35 33 35 36 33 39 39 32
>56d8	00 1c fc 01 97 20 36 30 36 34 38 34 38 38 33 8c
>56e8	31 30 34 37 30 37 39 31 30 39 92 30 00 24 fd 01
>56f8	97 20 36 30 36 34 38 34 38 38 33 84 31 30 34 37
>5708	30 37 39 31 30 39 92 36 30 36 34 38 34 38 38 33
>5718	00 26 fe 01 97 20 87 36 30 36 34 38 34 38 38 33
>5728	85 31 30 34 37 30 37 39 31 30 39 88 92 36 30 36
>5738	30 38 37 32 39 37 00 26 ff 01 97 20 87 36 30 36
>5748	34 38 34 38 38 33 96 31 30 34 37 30 37 39 31 30
>5758	39 88 92 34 34 31 33 38 39 33 39 38 00 27 00 02
>5768	97 20 87 36 30 36 34 38 34 38 38 33 b2 31 30 34
>5778	37 30 37 39 31 30 39 88 92 31 30 34 37 34 37 36
>5788	36 39 35 00 1e 01 02 97 20 87 36 30 36 34 38 34
>5798	38 38 33 92 31 30 34 37 30 37 39 31 30 39 88 92
>57a8	30 00 26 02 02 97 20 87 36 30 36 34 38 34 38 38
>57b8	33 90 31 30 34 37 30 37 39 31 30 39 88 92 82 66
>57c8	66 66 66 66 66 66 66 00 26 03 02 97 20 87 36 30
>57d8	36 34 38 34 38 38 33 91 31 30 34 37 30 37 39 31
>57e8	30 39 88 92 82 66 66 66 66 66 66 66 66 00 26 04
>57f8	02 97 20 87 36 30 36 34 38 34 38 38 33 8f 31 30
>5808	34 37 30 37 39 31 30 39 88 92 82 66 66 66 66 66
>5818	66 66 66 00 1e 05 02 97 20 87 36 30 36 34 38 34
>5828	38 38 33 94 31 30 34 37 30 37 39 31 30 39 88 92
>5838	30 00 1e 06 02 97 20 87 36 30 36 34 38 34 38 38
>5848	33 93 31 30 34 37 30 37 39 31 30 39 88 92 30 00
>5858	1b 07 02 97 20 38 33 30 38 31 30 32 30 30 8a 30
>5868	92 38 33 30 38 31 30 32 30 30 00 1b 08 02 97 20
>5878	38 33 30 38 31 30 32 30 30 8b 30 92 38 33 30 38
>5888	31 30 32 30 30 00 13 09 02 97 20 38 33 30 38 31
>5898	30 32 30 30 89 30 92 30 00 15 0a 02 97 20 87 38
>58a8	33 30 38 31 30 32 30 30 85 30 88 92 30 00 1d 0b
>58b8	02 97 20 87 38 33 30 38 31 30 32 30 30 96 30 88
>58c8	92 38 33 30 38 31 30 32 30 30 00 1d 0c 02 97 20
>58d8	87 38 33 30 38 31 30 32 30 30 b2 30 88 92 38 33
>58e8	30 38 31 30 32 30 30 00 15 0d 02 97 20 87 38 33
>58f8	30 38 31 30 32 30 30 92 30 88 92 30 00 1d 0e 02
>5908	97 20 87 38 33 30 38 31 30 32 30 30 90 30 88 92
>5918	82 66 66 66 66 66 66 66 66 00 15 0f 02 97 20 87
>5928	38 33 30 38 31 30 32 30 30 91 30 88 92 30 00 15
>5938	10 02 97 20 87 38 33 30 38 31 30 32 30 30 8f 30
>5948	88 92 30 00 1d 11 02 97 20 87 38 33 30 38 31 30
>5958	32 30 30 94 30 88 92 82 66 66 66 66 66 66 66 66
>5968	00 1d 12 02 97 20 87 38 33 30 38 31 30 32 30 30
>5978	93 30 88 92 82 66 66 66 66 66 66 66 66 00 1b 13
>5988	02 97 20 36 37 34 33 33 33 30 39 37 8a 35 92 36
>5998	37 34 33 33 33 31 30 32 00 1b 14 02 97 20 36 37
>59a8	34 33 33 33 30 39 37 8b 35 92 36 37 34 33 33 33
>59b8	30 39 32 00 1b 15 02 97 20 36 37 34 33 33 33 30
>59c8	39 37 8c 35 92 31 33 34 38 36 36 36 31 39 00 13
>59d8	16 02 97 20 36 37 34 33 33 33 30 39 37 84 35 92
>59e8	32 00 15 17 02 97 20 87 36 37 34 33 33 33 30 39
>59f8	37 85 35 88 92 31 00 1d 18 02 97 20 87 36 37 34
>5a08	33 33 33 30 39 37 96 35 88 92 36 37 34 33 33 33
>5a18	31 30 30 00 1d 19 02 97 20 87 36 37 34 33 33 33
>5a28	30 39 37 b2 35 88 92 36 37 34 33 33 33 31 30 31
>5a38	00 15 1a 02 97 20 87 36 37 34 33 33 33 30 39 37
>5a48	92 35 88 92 30 00 1d 1b 02 97 20 87 36 37 34 33
>5a58	33 33 30 39 37 90 35 88 92 82 66 66 66 66 66 66
>5a68	66 66 00 15 1c 02 97 20 87 36 37 34 33 33 33 30
>5a78	39 37 91 35 88 92 30 00 15 1d 02 97 20 87 36 37
>5a88	34 33 33 33 30 39 37 8f 35 88 92 30 00 1d 1e 02
>5a98	97 20 87 36 37 34 33 33 33 30 39 37 94 35 88 92
>5aa8	82 66 66 66 66 66 66 66 66 00 1d 1f 02 97 20 87
>5ab8	36 37 34 33 33 33 30 39 37 93 35 88 92 82 66 66
>5ac8	66 66 66 66 66 66 00 0b 20 02 97 20 38 8a 30 92
>5ad8	38 00 0b 21 02 97 20 38 8b 30 92 38 00 0b 22 02
>5ae8	97 20 38 89 30 92 30 00 0d 23 02 97 20 87 38 85
>5af8	30 88 92 30 00 0d 24 02 97 20 87 38 96 30 88 92
>5b08	38 00 0d 25 02 97 20 87 38 b2 30 88 92 38 00 0d
>5b18	26 02 97 20 87 38 92 30 88 92 30 00 15 27 02 97
>5b28	20 87 38 90 30 88 92 82 66 66 66 66 66 66 66 66
>5b38	00 0d 28 02 97 20 87 38 91 30 88 92 30 00 0d 29
>5b48	02 97 20 87 38 8f 30 88 92 30 00 15 2a 02 97 20
>5b58	87 38 94 30 88 92 82 66 66 66 66 66 66 66 66 00
>5b68	15 2b 02 97 20 87 38 93 30 88 92 82 66 66 66 66
>5b78	66 66 66 66 00 24 2c 02 97 20 32 35 32 39 37 34
>5b88	39 35 30 8a 38 37 39 32 32 38 31 32 35 92 31 31
>5b98	33 32 32 30 33 30 37 35 00 1b 2d 02 97 20 32 35
>5ba8	32 39 37 34 39 35 30 8c 38 37 39 32 32 38 31 32
>5bb8	35 92 30 00 23 2e 02 97 20 32 35 32 39 37 34 39
>5bc8	35 30 84 38 37 39 32 32 38 31 32 35 92 32 35 32
>5bd8	39 37 34 39 35 30 00 24 2f 02 97 20 87 32 35 32
>5be8	39 37 34 39 35 30 85 38 37 39 32 32 38 31 32 35
>5bf8	88 92 36 37 33 37 36 31 39 36 00 25 30 02 97 20
>5c08	87 32 35 32 39 37 34 39 35 30 96 38 37 39 32 32
>5c18	38 31 32 35 88 92 39 39 37 34 35 30 36 38 33 00
>5c28	26 31 02 97 20 87 32 35 32 39 37 34 39 35 30 b2
>5c38	38 37 39 32 32 38 31 32 35 88 92 31 30 36 34 38
>5c48	32 36 38 37 39 00 1d 32 02 97 20 87 32 35 32 39
>5c58	37 34 39 35 30 92 38 37 39 32 32 38 31 32 35 88
>5c68	92 30 00 25 33 02 97 20 87 32 35 32 39 37 34 39
>5c78	35 30 90 38 37 39 32 32 38 31 32 35 88 92 82 66
>5c88	66 66 66 66 66 66 66 00 25 34 02 97 20 87 32 35
>5c98	32 39 37 34 39 35 30 91 38 37 39 32 32 38 31 32
>5ca8	35 88 92 82 66 66 66 66 66 66 66 66 00 25 35 02
>5cb8	97 20 87 32 35 32 39 37 34 39 35 30 8f 38 37 39
>5cc8	32 32 38 31 32 35 88 92 82 66 66 66 66 66 66 66
>5cd8	66 00 1d 36 02 97 20 87 32 35 32 39 37 34 39 35
>5ce8	30 94 38 37 39 32 32 38 31 32 35 88 92 30 00 1d
>5cf8	37 02 97 20 87 32 35 32 39 37 34 39 35 30 93 38
>5d08	37 39 32 32 38 31 32 35 88 92 30 00 1b 38 02 97
>5d18	20 32 35 35 36 39 36 32 33 31 8a 31 92 32 35 35
>5d28	36 39 36 32 33 32 00 1b 39 02 97 20 32 35 35 36
>5d38	39 36 32 33 31 8b 31 92 32 35 35 36 39 36 32 33
>5d48	30 00 1b 3a 02 97 20 32 35 35 36 39 36 32 33 31
>5d58	89 31 92 32 35 35 36 39 36 32 33 31 00 1b 3b 02
>5d68	97 20 32 35 35 36 39 36 32 33 31 8c 31 92 32 35
>5d78	35 36 39 36 32 33 31 00 13 3c 02 97 20 32 35 35
>5d88	36 39 36 32 33 31 84 31 92 30 00 15 3d 02 97 20
>5d98	87 32 35 35 36 39 36 32 33 31 85 31 88 92 31 00
>5da8	1d 3e 02 97 20 87 32 35 35 36 39 36 32 33 31 96
>5db8	31 88 92 32 35 35 36 39 36 32 33 30 00 1d 3f 02
>5dc8	97 20 87 32 35 35 36 39 36 32 33 31 b2 31 88 92
>5dd8	32 35 35 36 39 36 32 33 31 00 15 40 02 97 20 87
>5de8	32 35 35 36 39 36 32 33 31 92 31 88 92 30 00 1d
>5df8	41 02 97 20 87 32 35 35 36 39 36 32 33 31 90 31
>5e08	88 92 82 66 66 66 66 66 66 66 66 00 15 42 02 97
>5e18	20 87 32 35 35 36 39 36 32 33 31 91 31 88 92 30
>5e28	00 15 43 02 97 20 87 32 35 35 36 39 36 32 33 31
>5e38	8f 31 88 92 30 00 1d 44 02 97 20 87 32 35 35 36
>5e48	39 36 32 33 31 94 31 88 92 82 66 66 66 66 66 66
>5e58	66 66 00 1d 45 02 97 20 87 32 35 35 36 39 36 32
>5e68	33 31 93 31 88 92 82 66 66 66 66 66 66 66 66 00
>5e78	0b 46 02 97 20 37 8a 30 92 37 00 0b 47 02 97 20
>5e88	37 8b 30 92 37 00 0b 48 02 97 20 37 89 30 92 30
>5e98	00 0d 49 02 97 20 87 37 85 30 88 92 30 00 0d 4a
>5ea8	02 97 20 87 37 96 30 88 92 37 00 0d 4b 02 97 20
>5eb8	87 37 b2 30 88 92 37 00 0d 4c 02 97 20 87 37 92
>5ec8	30 88 92 30 00 15 4d 02 97 20 87 37 90 30 88 92
>5ed8	82 66 66 66 66 66 66 66 66 00 0d 4e 02 97 20 87
>5ee8	37 91 30 88 92 30 00 0d 4f 02 97 20 87 37 8f 30
>5ef8	88 92 30 00 15 50 02 97 20 87 37 94 30 88 92 82
>5f08	66 66 66 66 66 66 66 66 00 15 51 02 97 20 87 37
>5f18	93 30 88 92 82 66 66 66 66 66 66 66 66 00 1b 52
>5f28	02 97 20 35 34 30 34 38 34 37 37 39 8a 38 92 35
>5f38	34 30 34 38 34 37 38 37 00 1b 53 02 97 20 35 34
>5f48	30 34 38 34 37 37 39 8b 38 92 35 34 30 34 38 34
>5f58	37 37 31 00 1a 54 02 97 20 35 34 30 34 38 34 37
>5f68	37 39 8c 38 92 36 37 35 36 30 35 39 37 00 13 55
>5f78	02 97 20 35 34 30 34 38 34 37 37 39 84 38 92 33
>5f88	00 15 56 02 97 20 87 35 34 30 34 38 34 37 37 39
>5f98	85 38 88 92 38 00 1d 57 02 97 20 87 35 34 30 34
>5fa8	38 34 37 37 39 96 38 88 92 35 34 30 34 38 34 37
>5fb8	37 31 00 1d 58 02 97 20 87 35 34 30 34 38 34 37
>5fc8	37 39 b2 38 88 92 35 34 30 34 38 34 37 37 39 00
>5fd8	15 59 02 97 20 87 35 34 30 34 38 34 37 37 39 92
>5fe8	38 88 92 30 00 1d 5a 02 97 20 87 35 34 30 34 38
>5ff8	34 37 37 39 90 38 88 92 82 66 66 66 66 66 66 66
>6008	66 00 15 5b 02 97 20 87 35 34 30 34 38 34 37 37
>6018	39 91 38 88 92 30 00 15 5c 02 97 20 87 35 34 30
>6028	34 38 34 37 37 39 8f 38 88 92 30 00 1d 5d 02 97
>6038	20 87 35 34 30 34 38 34 37 37 39 94 38 88 92 82
>6048	66 66 66 66 66 66 66 66 00 1d 5e 02 97 20 87 35
>6058	34 30 34 38 34 37 37 39 93 38 88 92 82 66 66 66
>6068	66 66 66 66 66 00 1d 5f 02 97 20 31 38 34 8a 36
>6078	39 38 37 35 36 35 32 33 92 36 39 38 37 35 36 37
>6088	30 37 00 15 60 02 97 20 31 38 34 8c 36 39 38 37
>6098	35 36 35 32 33 92 30 00 17 61 02 97 20 31 38 34
>60a8	84 36 39 38 37 35 36 35 32 33 92 31 38 34 00 19
>60b8	62 02 97 20 87 31 38 34 85 36 39 38 37 35 36 35
>60c8	32 33 88 92 31 36 38 00 1f 63 02 97 20 87 31 38
>60d8	34 96 36 39 38 37 35 36 35 32 33 88 92 36 39 38
>60e8	37 35 36 33 37 31 00 1f 64 02 97 20 87 31 38 34
>60f8	b2 36 39 38 37 35 36 35 32 33 88 92 36 39 38 37
>6108	35 36 35 33 39 00 17 65 02 97 20 87 31 38 34 92
>6118	36 39 38 37 35 36 35 32 33 88 92 30 00 1f 66 02
>6128	97 20 87 31 38 34 90 36 39 38 37 35 36 35 32 33
>6138	88 92 82 66 66 66 66 66 66 66 66 00 1f 67 02 97
>6148	20 87 31 38 34 91 36 39 38 37 35 36 35 32 33 88
>6158	92 82 66 66 66 66 66 66 66 66 00 1f 68 02 97 20
>6168	87 31 38 34 8f 36 39 38 37 35 36 35 32 33 88 92
>6178	82 66 66 66 66 66 66 66 66 00 17 69 02 97 20 87
>6188	31 38 34 94 36 39 38 37 35 36 35 32 33 88 92 30
>6198	00 17 6a 02 97 20 87 31 38 34 93 36 39 38 37 35
>61a8	36 35 32 33 88 92 30 00 0f 6b 02 97 20 37 8a 38
>61b8	35 37 92 38 36 34 00 10 6c 02 97 20 37 89 38 35
>61c8	37 92 35 39 39 39 00 0d 6d 02 97 20 37 8c 38 35
>61d8	37 92 30 00 0d 6e 02 97 20 37 84 38 35 37 92 37
>61e8	00 0f 6f 02 97 20 87 37 85 38 35 37 88 92 31 00
>61f8	11 70 02 97 20 87 37 96 38 35 37 88 92 38 36 32
>6208	00 11 71 02 97 20 87 37 b2 38 35 37 88 92 38 36
>6218	33 00 0f 72 02 97 20 87 37 92 38 35 37 88 92 30
>6228	00 17 73 02 97 20 87 37 90 38 35 37 88 92 82 66
>6238	66 66 66 66 66 66 66 00 17 74 02 97 20 87 37 91
>6248	38 35 37 88 92 82 66 66 66 66 66 66 66 66 00 17
>6258	75 02 97 20 87 37 8f 38 35 37 88 92 82 66 66 66
>6268	66 66 66 66 66 00 0f 76 02 97 20 87 37 94 38 35
>6278	37 88 92 30 00 0f 77 02 97 20 87 37 93 38 35 37
>6288	88 92 30 00 1d 78 02 97 20 39 34 30 8a 39 33 35
>6298	38 31 31 37 37 32 92 39 33 35 38 31 32 37 31 32
>62a8	00 15 79 02 97 20 39 34 30 8c 39 33 35 38 31 31
>62b8	37 37 32 92 30 00 17 7a 02 97 20 39 34 30 84 39
>62c8	33 35 38 31 31 37 37 32 92 39 34 30 00 19 7b 02
>62d8	97 20 87 39 34 30 85 39 33 35 38 31 31 37 37 32
>62e8	88 92 36 38 34 00 1f 7c 02 97 20 87 39 34 30 96
>62f8	39 33 35 38 31 31 37 37 32 88 92 39 33 35 38 31
>6308	31 33 34 34 00 1f 7d 02 97 20 87 39 34 30 b2 39
>6318	33 35 38 31 31 37 37 32 88 92 39 33 35 38 31 32
>6328	30 32 38 00 17 7e 02 97 20 87 39 34 30 92 39 33
>6338	35 38 31 31 37 37 32 88 92 30 00 1f 7f 02 97 20
>6348	87 39 34 30 90 39 33 35 38 31 31 37 37 32 88 92
>6358	82 66 66 66 66 66 66 66 66 00 1f 80 02 97 20 87
>6368	39 34 30 91 39 33 35 38 31 31 37 37 32 88 92 82
>6378	66 66 66 66 66 66 66 66 00 1f 81 02 97 20 87 39
>6388	34 30 8f 39 33 35 38 31 31 37 37 32 88 92 82 66
>6398	66 66 66 66 66 66 66 00 17 82 02 97 20 87 39 34
>63a8	30 94 39 33 35 38 31 31 37 37 32 88 92 30 00 17
>63b8	83 02 97 20 87 39 34 30 93 39 33 35 38 31 31 37
>63c8	37 32 88 92 30 00 24 84 02 97 20 39 38 35 36 38
>63d8	36 30 35 33 8a 38 36 31 31 32 33 38 37 31 92 31
>63e8	38 34 36 38 30 39 39 32 34 00 23 85 02 97 20 39
>63f8	38 35 36 38 36 30 35 33 8b 38 36 31 31 32 33 38
>6408	37 31 92 31 32 34 35 36 32 31 38 32 00 1b 86 02
>6418	97 20 39 38 35 36 38 36 30 35 33 8c 38 36 31 31
>6428	32 33 38 37 31 92 31 00 23 87 02 97 20 39 38 35
>6438	36 38 36 30 35 33 84 38 36 31 31 32 33 38 37 31
>6448	92 31 32 34 35 36 32 31 38 32 00 25 88 02 97 20
>6458	87 39 38 35 36 38 36 30 35 33 85 38 36 31 31 32
>6468	33 38 37 31 88 92 38 34 33 30 36 33 33 30 31 00
>6478	25 89 02 97 20 87 39 38 35 36 38 36 30 35 33 96
>6488	38 36 31 31 32 33 38 37 31 88 92 31 36 30 36 38
>6498	33 33 32 32 00 26 8a 02 97 20 87 39 38 35 36 38
>64a8	36 30 35 33 b2 38 36 31 31 32 33 38 37 31 88 92
>64b8	31 30 30 33 37 34 36 36 32 33 00 1d 8b 02 97 20
>64c8	87 39 38 35 36 38 36 30 35 33 92 38 36 31 31 32
>64d8	33 38 37 31 88 92 30 00 25 8c 02 97 20 87 39 38
>64e8	35 36 38 36 30 35 33 90 38 36 31 31 32 33 38 37
>64f8	31 88 92 82 66 66 66 66 66 66 66 66 00 1d 8d 02
>6508	97 20 87 39 38 35 36 38 36 30 35 33 91 38 36 31
>6518	31 32 33 38 37 31 88 92 30 00 1d 8e 02 97 20 87
>6528	39 38 35 36 38 36 30 35 33 8f 38 36 31 31 32 33
>6538	38 37 31 88 92 30 00 25 8f 02 97 20 87 39 38 35
>6548	36 38 36 30 35 33 94 38 36 31 31 32 33 38 37 31
>6558	88 92 82 66 66 66 66 66 66 66 66 00 25 90 02 97
>6568	20 87 39 38 35 36 38 36 30 35 33 93 38 36 31 31
>6578	32 33 38 37 31 88 92 82 66 66 66 66 66 66 66 66
>6588	00 0f 91 02 97 20 31 8a 31 33 33 92 31 33 34 00
>6598	0f 92 02 97 20 31 89 31 33 33 92 31 33 33 00 0d
>65a8	93 02 97 20 31 8c 31 33 33 92 30 00 0d 94 02 97
>65b8	20 31 84 31 33 33 92 31 00 0f 95 02 97 20 87 31
>65c8	85 31 33 33 88 92 31 00 11 96 02 97 20 87 31 96
>65d8	31 33 33 88 92 31 33 32 00 11 97 02 97 20 87 31
>65e8	b2 31 33 33 88 92 31 33 33 00 0f 98 02 97 20 87
>65f8	31 92 31 33 33 88 92 30 00 17 99 02 97 20 87 31
>6608	90 31 33 33 88 92 82 66 66 66 66 66 66 66 66 00
>6618	17 9a 02 97 20 87 31 91 31 33 33 88 92 82 66 66
>6628	66 66 66 66 66 66 00 17 9b 02 97 20 87 31 8f 31
>6638	33 33 88 92 82 66 66 66 66 66 66 66 66 00 0f 9c
>6648	02 97 20 87 31 94 31 33 33 88 92 30 00 0f 9d 02
>6658	97 20 87 31 93 31 33 33 88 92 30 00 23 9e 02 97
>6668	20 31 38 37 38 35 39 34 31 30 8a 37 36 35 37 31
>6678	36 37 33 32 92 39 35 33 35 37 36 31 34 32 00 1b
>6688	9f 02 97 20 31 38 37 38 35 39 34 31 30 8c 37 36
>6698	35 37 31 36 37 33 32 92 30 00 23 a0 02 97 20 31
>66a8	38 37 38 35 39 34 31 30 84 37 36 35 37 31 36 37
>66b8	33 32 92 31 38 37 38 35 39 34 31 30 00 25 a1 02
>66c8	97 20 87 31 38 37 38 35 39 34 31 30 85 37 36 35
>66d8	37 31 36 37 33 32 88 92 31 35 33 32 35 36 31 34
>66e8	34 00 25 a2 02 97 20 87 31 38 37 38 35 39 34 31
>66f8	30 96 37 36 35 37 31 36 37 33 32 88 92 36 34 37
>6708	30 36 33 38 35 34 00 25 a3 02 97 20 87 31 38 37
>6718	38 35 39 34 31 30 b2 37 36 35 37 31 36 37 33 32
>6728	88 92 38 30 30 33 31 39 39 39 38 00 1d a4 02 97
>6738	20 87 31 38 37 38 35 39 34 31 30 92 37 36 35 37
>6748	31 36 37 33 32 88 92 30 00 25 a5 02 97 20 87 31
>6758	38 37 38 35 39 34 31 30 90 37 36 35 37 31 36 37
>6768	33 32 88 92 82 66 66 66 66 66 66 66 66 00 25 a6
>6778	02 97 20 87 31 38 37 38 35 39 34 31 30 91 37 36
>6788	35 37 31 36 37 33 32 88 92 82 66 66 66 66 66 66
>6798	66 66 00 25 a7 02 97 20 87 31 38 37 38 35 39 34
>67a8	31 30 8f 37 36 35 37 31 36 37 33 32 88 92 82 66
>67b8	66 66 66 66 66 66 66 00 1d a8 02 97 20 87 31 38
>67c8	37 38 35 39 34 31 30 94 37 36 35 37 31 36 37 33
>67d8	32 88 92 30 00 1d a9 02 97 20 87 31 38 37 38 35
>67e8	39 34 31 30 93 37 36 35 37 31 36 37 33 32 88 92
>67f8	30 00 1b aa 02 97 20 30 8a 33 31 39 31 30 36 38
>6808	33 36 92 33 31 39 31 30 36 38 33 36 00 13 ab 02
>6818	97 20 30 89 33 31 39 31 30 36 38 33 36 92 30 00
>6828	13 ac 02 97 20 30 8c 33 31 39 31 30 36 38 33 36
>6838	92 30 00 13 ad 02 97 20 30 84 33 31 39 31 30 36
>6848	38 33 36 92 30 00 15 ae 02 97 20 87 30 85 33 31
>6858	39 31 30 36 38 33 36 88 92 30 00 1d af 02 97 20
>6868	87 30 96 33 31 39 31 30 36 38 33 36 88 92 33 31
>6878	39 31 30 36 38 33 36 00 1d b0 02 97 20 87 30 b2
>6888	33 31 39 31 30 36 38 33 36 88 92 33 31 39 31 30
>6898	36 38 33 36 00 15 b1 02 97 20 87 30 92 33 31 39
>68a8	31 30 36 38 33 36 88 92 30 00 1d b2 02 97 20 87
>68b8	30 90 33 31 39 31 30 36 38 33 36 88 92 82 66 66
>68c8	66 66 66 66 66 66 00 1d b3 02 97 20 87 30 91 33
>68d8	31 39 31 30 36 38 33 36 88 92 82 66 66 66 66 66
>68e8	66 66 66 00 1d b4 02 97 20 87 30 8f 33 31 39 31
>68f8	30 36 38 33 36 88 92 82 66 66 66 66 66 66 66 66
>6908	00 15 b5 02 97 20 87 30 94 33 31 39 31 30 36 38
>6918	33 36 88 92 30 00 15 b6 02 97 20 87 30 93 33 31
>6928	39 31 30 36 38 33 36 88 92 30 00 1b b7 02 97 20
>6938	30 8a 31 30 34 31 33 31 30 32 31 92 31 30 34 31
>6948	33 31 30 32 31 00 13 b8 02 97 20 30 89 31 30 34
>6958	31 33 31 30 32 31 92 30 00 13 b9 02 97 20 30 8c
>6968	31 30 34 31 33 31 30 32 31 92 30 00 13 ba 02 97
>6978	20 30 84 31 30 34 31 33 31 30 32 31 92 30 00 15
>6988	bb 02 97 20 87 30 85 31 30 34 31 33 31 30 32 31
>6998	88 92 30 00 1d bc 02 97 20 87 30 96 31 30 34 31
>69a8	33 31 30 32 31 88 92 31 30 34 31 33 31 30 32 31
>69b8	00 1d bd 02 97 20 87 30 b2 31 30 34 31 33 31 30
>69c8	32 31 88 92 31 30 34 31 33 31 30 32 31 00 15 be
>69d8	02 97 20 87 30 92 31 30 34 31 33 31 30 32 31 88
>69e8	92 30 00 1d bf 02 97 20 87 30 90 31 30 34 31 33
>69f8	31 30 32 31 88 92 82 66 66 66 66 66 66 66 66 00
>6a08	1d c0 02 97 20 87 30 91 31 30 34 31 33 31 30 32
>6a18	31 88 92 82 66 66 66 66 66 66 66 66 00 1d c1 02
>6a28	97 20 87 30 8f 31 30 34 31 33 31 30 32 31 88 92
>6a38	82 66 66 66 66 66 66 66 66 00 15 c2 02 97 20 87
>6a48	30 94 31 30 34 31 33 31 30 32 31 88 92 30 00 15
>6a58	c3 02 97 20 87 30 93 31 30 34 31 33 31 30 32 31
>6a68	88 92 30 00 0f c4 02 97 20 39 32 31 8a 30 92 39
>6a78	32 31 00 0f c5 02 97 20 39 32 31 8b 30 92 39 32
>6a88	31 00 0d c6 02 97 20 39 32 31 89 30 92 30 00 0f
>6a98	c7 02 97 20 87 39 32 31 85 30 88 92 30 00 11 c8
>6aa8	02 97 20 87 39 32 31 96 30 88 92 39 32 31 00 11
>6ab8	c9 02 97 20 87 39 32 31 b2 30 88 92 39 32 31 00
>6ac8	0f ca 02 97 20 87 39 32 31 92 30 88 92 30 00 17
>6ad8	cb 02 97 20 87 39 32 31 90 30 88 92 82 66 66 66
>6ae8	66 66 66 66 66 00 0f cc 02 97 20 87 39 32 31 91
>6af8	30 88 92 30 00 0f cd 02 97 20 87 39 32 31 8f 30
>6b08	88 92 30 00 17 ce 02 97 20 87 39 32 31 94 30 88
>6b18	92 82 66 66 66 66 66 66 66 66 00 17 cf 02 97 20
>6b28	87 39 32 31 93 30 88 92 82 66 66 66 66 66 66 66
>6b38	66 00 0b d0 02 97 20 38 8a 30 92 38 00 0b d1 02
>6b48	97 20 38 8b 30 92 38 00 0b d2 02 97 20 38 89 30
>6b58	92 30 00 0d d3 02 97 20 87 38 85 30 88 92 30 00
>6b68	0d d4 02 97 20 87 38 96 30 88 92 38 00 0d d5 02
>6b78	97 20 87 38 b2 30 88 92 38 00 0d d6 02 97 20 87
>6b88	38 92 30 88 92 30 00 15 d7 02 97 20 87 38 90 30
>6b98	88 92 82 66 66 66 66 66 66 66 66 00 0d d8 02 97
>6ba8	20 87 38 91 30 88 92 30 00 0d d9 02 97 20 87 38
>6bb8	8f 30 88 92 30 00 15 da 02 97 20 87 38 94 30 88
>6bc8	92 82 66 66 66 66 66 66 66 66 00 15 db 02 97 20
>6bd8	87 38 93 30 88 92 82 66 66 66 66 66 66 66 66 00
>6be8	1d dc 02 97 20 39 37 36 33 32 36 31 38 34 8a 39
>6bf8	33 32 92 39 37 36 33 32 37 31 31 36 00 1d dd 02
>6c08	97 20 39 37 36 33 32 36 31 38 34 8b 39 33 32 92
>6c18	39 37 36 33 32 35 32 35 32 00 1b de 02 97 20 39
>6c28	37 36 33 32 36 31 38 34 8c 39 33 32 92 31 30 34
>6c38	37 35 36 30 00 17 df 02 97 20 39 37 36 33 32 36
>6c48	31 38 34 84 39 33 32 92 32 36 34 00 19 e0 02 97
>6c58	20 87 39 37 36 33 32 36 31 38 34 85 39 33 32 88
>6c68	92 35 34 34 00 1f e1 02 97 20 87 39 37 36 33 32
>6c78	36 31 38 34 96 39 33 32 88 92 39 37 36 33 32 36
>6c88	30 32 38 00 1f e2 02 97 20 87 39 37 36 33 32 36
>6c98	31 38 34 b2 39 33 32 88 92 39 37 36 33 32 36 35
>6ca8	37 32 00 17 e3 02 97 20 87 39 37 36 33 32 36 31
>6cb8	38 34 92 39 33 32 88 92 30 00 1f e4 02 97 20 87
>6cc8	39 37 36 33 32 36 31 38 34 90 39 33 32 88 92 82
>6cd8	66 66 66 66 66 66 66 66 00 17 e5 02 97 20 87 39
>6ce8	37 36 33 32 36 31 38 34 91 39 33 32 88 92 30 00
>6cf8	17 e6 02 97 20 87 39 37 36 33 32 36 31 38 34 8f
>6d08	39 33 32 88 92 30 00 1f e7 02 97 20 87 39 37 36
>6d18	33 32 36 31 38 34 94 39 33 32 88 92 82 66 66 66
>6d28	66 66 66 66 66 00 1f e8 02 97 20 87 39 37 36 33
>6d38	32 36 31 38 34 93 39 33 32 88 92 82 66 66 66 66
>6d48	66 66 66 66 00 24 e9 02 97 20 31 30 33 35 32 33
>6d58	38 31 34 38 8a 36 30 38 38 33 37 33 31 92 31 30
>6d68	39 36 31 32 31 38 37 39 00 23 ea 02 97 20 31 30
>6d78	33 35 32 33 38 31 34 38 8b 36 30 38 38 33 37 33
>6d88	31 92 39 37 34 33 35 34 34 31 37 00 1c eb 02 97
>6d98	20 31 30 33 35 32 33 38 31 34 38 8c 36 30 38 38
>6da8	33 37 33 31 92 31 37 00 20 ec 02 97 20 31 30 33
>6db8	35 32 33 38 31 34 38 84 36 30 38 38 33 37 33 31
>6dc8	92 32 31 34 37 32 31 00 24 ed 02 97 20 87 31 30
>6dd8	33 35 32 33 38 31 34 38 85 36 30 38 38 33 37 33
>6de8	31 88 92 32 37 32 36 33 37 34 34 00 26 ee 02 97
>6df8	20 87 31 30 33 35 32 33 38 31 34 38 96 36 30 38
>6e08	38 33 37 33 31 88 92 31 30 34 31 35 39 34 33 39
>6e18	31 00 26 ef 02 97 20 87 31 30 33 35 32 33 38 31
>6e28	34 38 b2 36 30 38 38 33 37 33 31 88 92 31 30 36
>6e38	38 38 35 38 31 33 35 00 1d f0 02 97 20 87 31 30
>6e48	33 35 32 33 38 31 34 38 92 36 30 38 38 33 37 33
>6e58	31 88 92 30 00 25 f1 02 97 20 87 31 30 33 35 32
>6e68	33 38 31 34 38 90 36 30 38 38 33 37 33 31 88 92
>6e78	82 66 66 66 66 66 66 66 66 00 1d f2 02 97 20 87
>6e88	31 30 33 35 32 33 38 31 34 38 91 36 30 38 38 33
>6e98	37 33 31 88 92 30 00 1d f3 02 97 20 87 31 30 33
>6ea8	35 32 33 38 31 34 38 8f 36 30 38 38 33 37 33 31
>6eb8	88 92 30 00 25 f4 02 97 20 87 31 30 33 35 32 33
>6ec8	38 31 34 38 94 36 30 38 38 33 37 33 31 88 92 82
>6ed8	66 66 66 66 66 66 66 66 00 25 f5 02 97 20 87 31
>6ee8	30 33 35 32 33 38 31 34 38 93 36 30 38 38 33 37
>6ef8	33 31 88 92 82 66 66 66 66 66 66 66 66 00 00

;******  Return to file: basic.asm


;******  End of listing
